
//LOANS QUERY
DATA WORK.ALL_DIRECTS;    //WORK.LOANS;								   
	SQL "SELECT
            SFA_CMP.IQID                    as COMPANY_IQID,
            MIN(INVINS.USERTEXT19)          AS RGA_CUSIP,
           -- MIN(ltrim(rtrim(INVINS.usertext23))) CUSIP,
            MIN(SFA_CMP.SHORTNAME)          as COMPANY,
            MIN(INVINS.LIBELLE)             as COMPANY_LEGAL_NAME,
            MIN(CAST(SFA_CMP.DESCRIPTION    AS NVARCHAR(MAX)))        as COMPANY_DESCRIPTION,
            MIN(SFAS.HQ_CITY)			    as HQ_CITY,
            MIN(SFAS.HQ_STATE)	            as HQ_STATE,
            MIN(SFAS.HQ_COUNTRY)            as HQ_COUNTRY,
            MIN(SFA_CMP.STATUS)             as COMPANY_TYPE,
            MIN(SFASPONSOR.NAME)            as SPONSOR,
            MIN(SFA_CMP.USERTEXT30)         as DEAL_LEAD,
            MIN(SFA_CMP.USERTEXT31)         as DEAL_SECONDARY,
            MIN(SFA_CMP.USERTEXT32)         as DEAL_TERTIARY,
            
            MIN(CASE WHEN CHARINDEX(' - ', INDUSTRY.DESCR) > 0 
                THEN  RTRIM(LTRIM(SUBSTRING(INDUSTRY.DESCR, CHARINDEX(' - ', INDUSTRY.DESCR)+3, LEN(INDUSTRY.DESCR)))) 
                ELSE  INDUSTRY.DESCR
                END)                    as INDUSTRY,
                
            MIN(CASE WHEN CHARINDEX(' - ', INDSUB.DESCR) > 0 
                THEN RTRIM(LTRIM(SUBSTRING(INDSUB.DESCR, CHARINDEX(' - ', INDSUB.DESCR)+3, LEN(INDSUB.DESCR)))) 
                ELSE INDSUB.DESCR
                END)                    as SUBINDUSTRY, 
            
            MIN(CASE VCP_DEAL.BOARD_RIGHTS
                WHEN '1' THEN 'Voting Member'
                WHEN '2' THEN 'Non-Voting Member'
                WHEN '3' THEN 'Observation Rights'
                WHEN '4' THEN 'None'				
             END)                       as BOARD_RIGHTS,
             
           CONVERT(VARCHAR, FORMAT(MIN(INVOP.CloseDate),'MM/dd/yy'), 1) AS INITIAL_INVESTMENT_DATE,
           
           MIN(INVINS_INVOP.FACILITY_STATUS) as FACILITY_STATUS,

           CASE WHEN ( NOT(MIN(InvOp.CloseDate) <= " & DML(%DATE) & " AND MIN(INVINS.USERDATE2) > " & DML(%DATE) & ") OR NOT (MIN(InvOp.CloseDate) <= " & DML(%DATE) & "  AND (ISNULL(MIN(INVINS.USERDATE2), 1) = 1)) ) AND (MIN(INVINS_INVOP.FACILITY_STATUS)='Exited')
               THEN CONVERT(VARCHAR, FORMAT(MAX(INVINS.UserDate2),'MM/dd/yy'), 1)
               ELSE NULL
           END as PLATFORM_EXIT_DATE
           
            
            FROM VCINVESTMENT VCINV 
            
           JOIN 
                (
                SELECT 
                     IQID, INVESTMENT, USERTEXT19, MIN(USERDATE2) as USERDATE2, USERNUM5, MAX(LIBELLE) as LIBELLE
                FROM VCINVESTMENTINS
                WHERE IQDELETED = 0
                GROUP BY IQID, INVESTMENT, USERTEXT19, USERNUM5
                ) INVINS 
                ON VCINV.IQID = INVINS.INVESTMENT  
            
            LEFT JOIN 
                (SELECT ACCOUNT, MAX(USERTEXT7) USERTEXT7, MAX(USERDATE5) USERDATE5, MAX(USERTEXT30) USERTEXT30 
                     FROM VCPROJECT VCP1 
                     WHERE VCP1.IQDELETED=0 
                     AND VCP1.WORKFLOW IN(SELECT  IQID 
                                             FROM ADMWORKFLOW 
                                             WHERE LIBELLE IN('RGA Direct Mezzanine','RGA Equity Co-Investment')
                                               AND IQDELETED=0
                                          )  
                     GROUP BY ACCOUNT                  
                ) VCP 
            ON VCP.ACCOUNT = VCINV.ACCOUNT
            
            LEFT JOIN SFAACCOUNT SFA 
               ON SFA.IQID = VCP.USERTEXT7 
               AND SFA.IQDELETED=0  
            
		    LEFT JOIN SFAACCOUNT SFA_CMP 
                ON SFA_CMP.IQID = VCINV.ACCOUNT  
                AND SFA_CMP.IQDELETED=0 
            
            LEFT JOIN 
                (
                SELECT
                     SITE.IQID 
                    ,MIN(SITE.CITY) as HQ_CITY
                    ,MIN(STATES.DESCRIPTION) as HQ_STATE
                    ,MIN(COUNTRIES.ISOALPHA3) as HQ_COUNTRY
                FROM SFASITE SITE
                LEFT JOIN VCSTATE STATES
                    ON STATES.CODE = SITE.STATE AND STATES.FILTER NOT LIKE '00000%'
                LEFT JOIN SFACOUNTRY COUNTRIES
                    ON SITE.COUNTRY = COUNTRIES.CODE AND COUNTRIES.FILTER NOT LIKE '00000%'
                WHERE SITE.IQDeleted = 0
                GROUP BY SITE.IQID
                )SFAS
                ON SFA_CMP.MainSite = SFAS.IQID
            
            
            LEFT JOIN 
            (
                SELECT INVINS.INVESTMENT as INVINS_INVESTMENT,
                    CASE 
                    WHEN MIN(InvOp.CloseDate) <= " & DML(%DATE) & "  AND MIN(INVINS.USERDATE2) > " & DML(%DATE) & "  THEN 'Active'
                    WHEN MIN(InvOp.CloseDate) <= " & DML(%DATE) & "  AND MIN(INVINS.USERDATE2) IS NULL THEN 'Active'
                    ELSE 'Exited'
                    END as FACILITY_STATUS

                    FROM VCINVESTMENTINS INVINS

                    LEFT JOIN VCINVESTMENTOP INVOP
                    ON INVINS.IQID = INVOP.InvestmentIns

                WHERE INVINS.IQDELETED=0 AND INVOP.TypeInvestOp IN('EQ02', 'EQ03', 'EQ42', 'EQ81', 'EQ82', 'LN02', 'LN03', 'LN06', 'LN70', 'LN71', 'LN81', 'LN82') AND INVOP.IQDELETED = 0

                GROUP BY INVINS.INVESTMENT
            ) INVINS_INVOP
            ON INVINS_INVOP.INVINS_INVESTMENT = VCINV.IQID
            
            LEFT JOIN AJXCRMCOMPANYINDUSTRYFOCUS AJXIND
			    ON SFA_CMP.IQID = AJXIND.CompanyId
                AND AJXIND.IQDeleted = 0     

            LEFT JOIN VCINDUSTRY INDSUB
                ON SFA_CMP.INDUSTRY = INDSUB.CODE
                AND INDSUB.FILTER NOT LIKE '00000%'
             
            LEFT JOIN VCINDUSTRY INDUSTRY
                ON INDUSTRY.CODE = AJXIND.INDUSTRYCODE
                AND INDUSTRY.FILTER NOT LIKE '00000%'
           
           LEFT JOIN 
           (
               SELECT 
                    VCP1.ACCOUNT
                   ,VCP1.IQID
                   ,MAX(COALESCE(VCP2.UserText24, VCP1.UserText24)) AS ROLE_IN_TRANSACTION
                   ,MAX(COALESCE(VCP2.UserText30, VCP1.UserText30)) AS BOARD_RIGHTS
                   ,MAX(COALESCE(VCP2.UserText7, VCP1.UserText7)) AS SPONSOR
               FROM VCPROJECT VCP1
               LEFT JOIN VCPROJECT VCP2
                   --LINKED_DEAL
                   ON VCP1.UserText38 = VCP2.IQID
                   AND VCP2.IQDeleted=0
               WHERE VCP1.IQDeleted=0
               GROUP BY 
                    VCP1.ACCOUNT
                   ,VCP1.IQID
           ) VCP_DEAL
           ON VCINV.ACCOUNT = VCP_DEAL.ACCOUNT 
           AND VCP_DEAL.BOARD_RIGHTS IS NOT NULL
           
         --SPONSOR
        LEFT JOIN SFAACCOUNT SFASPONSOR
            ON VCP_DEAL.SPONSOR = SFASPONSOR.IQID
            AND SFASPONSOR.IQDeleted = 0  
       
       
       --INVESTMENT STATUS
       LEFT JOIN 
         (
             SELECT 
                   InvestmentIns, MIN(CloseDate) as CloseDate, SUM(Amount2) as Amount2
             FROM VCINVESTMENTOP
             WHERE TypeInvestOp IN('EQ02', 'EQ03', 'EQ42', 'EQ81', 'EQ82', 'LN02', 'LN03', 'LN06', 'LN70', 'LN71', 'LN81', 'LN82')
             AND IQDeleted = 0
             GROUP BY InvestmentIns
         ) INVOP
         ON INVINS.IQID = INVOP.InvestmentIns 
       
        JOIN VCPORTFOLIOASSET VCPRTAST     
			ON VCPRTAST.INVESTMENT = VCINV.IQID 
            AND  VCPRTAST.IQDELETED=0 
                  
        JOIN VCPORTFOLIO VCPRT                  
			ON VCPRT.IQID = VCPRTAST.PORTFOLIO 
            AND VCPRT.PORTFOLIO IN ('PDE - Direct Equity','PDE - Direct Mezzanine')
            --AND VCPRT.PORTFOLIO = 'PDE - Direct Mezzanine'
            AND  VCPRT.IQDELETED=0 
        
        JOIN ADMROLE REG                            
			ON VCINV.IQREGIONID = REG.IQID 
            AND REG.IQDELETED = 0 
            AND REG.NAME = 'Private Debt & Equity'
            
        WHERE VCINV.IQDELETED=0
        AND SFA_CMP.SHORTNAME IS NOT NULL 
        AND SFA_CMP.SHORTNAME <> ''

		GROUP BY SFA_CMP.IQID
        
 
        ";
    COLUMN IQID                 TYPE = STRING LABEL = 'eFront Company ID';
    COLUMN RGA_CUSIP            TYPE = STRING LABEL = 'RGA CUSIP';
    //COLUMN CUSIP                TYPE = STRING LABEL = 'CUSIP';
    COLUMN COMPANY              TYPE = STRING LABEL = 'Company';
    COLUMN COMPANY_LEGAL_NAME   TYPE = STRING LABEL = 'Company Legal Name';
    COLUMN COMPANY_DESCRIPTION  TYPE = STRING LABEL = 'Description';
    COLUMN HQ_CITY              TYPE = STRING LABEL = 'HQ City';
    COLUMN HQ_STATE             TYPE = STRING LABEL = 'HQ State';
    COLUMN HQ_COUNTRY           TYPE = STRING LABEL = 'HQ Country';
    COLUMN COMPANY_TYPE         TYPE = STRING LABEL = 'Company Type';
    COLUMN SPONSOR              TYPE = STRING LABEL = 'Sponsor';
    COLUMN DEAL_LEAD            TYPE = STRING LABEL = 'Deal Lead';
    COLUMN DEAL_SECONDARY       TYPE = STRING LABEL = 'Deal Secondary';
    COLUMN DEAL_TERTIARY        TYPE = STRING LABEL = 'Deal Tertiary';
    COLUMN INDUSTRY             TYPE = STRING LABEL = 'Industry';
    COLUMN INDUSTRY_SUB_SECTOR  TYPE = STRING LABEL = 'Industry Sub Sector';
    COLUMN BOARD_RIGHTS         TYPE = STRING LABEL = 'Board Rights';
    COLUMN INITIAL_INVESTMENT_DATE      TYPE = STRING LABEL = 'Initial Investment Date';
    COLUMN FACILITY_STATUS      TYPE = STRING LABEL = 'Facility Status';
    COLUMN PLATFORM_EXIT_DATE            TYPE = STRING LABEL = 'Platform Exit Date';
RUN;


//combine and post process the data with lookups
DATA WORK.DIRECTS_WITH_DUPS;
    SET WORK.ALL_DIRECTS;    //WORK.LOANS WORK.EQUITIES;
    COMPANY_TYPE = LOOKUP("SFAACCOUNT.STATUS", COMPANY_TYPE);
    SPONSOR = LOOKUP("SFAACCOUNT.NAME", SPONSOR);
    
    DEAL_LEAD =      LOOKUP("SFAACCOUNT.USERTEXT30", DEAL_LEAD);
    DEAL_SECONDARY = LOOKUP("SFAACCOUNT.USERTEXT31", DEAL_SECONDARY);
    DEAL_TERTIARY = LOOKUP("SFAACCOUNT.USERTEXT32", DEAL_TERTIARY);
    
RUN;

PROC SORT DATA = WORK.DIRECTS_WITH_DUPS OUT = WORK.DIRECTS_WITH_DUPS; //NODUPKEY; 
    BY COMPANY;  
RUN;


PROC MEANS DATA = WORK.DIRECTS_WITH_DUPS
    OUT = WORK.DIRECTS_DEDUPED;
    CLASS IQID COMPANY;
    FIRST COMPANY_LEGAL_NAME (NAME = COMPANY_LEGAL_NAME)
          RGA_CUSIP (NAME = RGA_CUSIP)
          //CUSIP (NAME = CUSIP)
          COMPANY_DESCRIPTION (NAME = COMPANY_DESCRIPTION)
          HQ_CITY (NAME = HQ_CITY)
          HQ_STATE (NAME = HQ_STATE)
          HQ_COUNTRY (NAME = HQ_COUNTRY)
          COMPANY_TYPE (NAME = COMPANY_TYPE)
          SPONSOR (NAME = SPONSOR)
          DEAL_LEAD (NAME = DEAL_LEAD)
          DEAL_SECONDARY (NAME = DEAL_SECONDARY)
          DEAL_TERTIARY (NAME = DEAL_TERTIARY)
          INDUSTRY (NAME = INDUSTRY)
          INDUSTRY_SUB_SECTOR (NAME = INDUSTRY_SUB_SECTOR)
          BOARD_RIGHTS (NAME = BOARD_RIGHTS)
          INITIAL_INVESTMENT_DATE (NAME = INITIAL_INVESTMENT_DATE)
          FACILITY_STATUS (NAME = FACILITY_STATUS)
          PLATFORM_EXIT_DATE (NAME = PLATFORM_EXIT_DATE);
RUN;

PROC SORT DATA = WORK.DIRECTS_DEDUPED OUT = WORK.DIRECTS; //NODUPKEY; 
    BY COMPANY;  
RUN;

//find the minimum investment year by RGA CUSIP 
PROC MEANS DATA = WORK.DIRECTS (WHERE RGA_CUSIP IS NOT NULL) OUT = WORK.DIRALL_LIST1_MIN_INVST_DATE;
    CLASS RGA_CUSIP;
    MIN INITIAL_INVESTMENT_DATE (NAME=INV_YEAR_MIN);
RUN;

//make the minimum investment year the one used for vintage when the min investment year is in DIRALL_LIST1_MIN_INVST_DATE
DATA WORK.DIRECTS (DROP = INV_YEAR_MIN);
	MERGE WORK.DIRECTS(IN=IN1) WORK.DIRALL_LIST1_MIN_INVST_DATE(IN=IN2);
	BY RGA_CUSIP;
    
	IF (INV_YEAR_MIN IS NOT NULL) THEN INITIAL_INVESTMENT_DATE = INV_YEAR_MIN;
	END;
RUN;

//find platform investment date of company by the earliest Investment Date, so group CUSIPs by Company and then pick min/earliest investment date.
PROC MEANS DATA = WORK.DIRECTS OUT = WORK.DIRALL_LIST1_MIN_INVST_DATE_FOR_COMPANY;
    CLASS COMPANY;
    FIRST INITIAL_INVESTMENT_DATE (NAME=PLATFORM_INVESTMENT_DATE_DT LABEL = "Platform Investment Date");
RUN;

//FORMAT(PLATFORM_INVESTMENT_DATE,"yyyy-MM-dd-HHmmss")
DATA WORK.DIRECTS (DROP = PLATFORM_INVESTMENT_DATE_DT PLATFORM_INVESTMENT_DATE);
    MERGE WORK.DIRECTS(IN=IN1) WORK.DIRALL_LIST1_MIN_INVST_DATE_FOR_COMPANY(IN=IN2);
    BY COMPANY;
    
    COLUMN PLATFORM_INVESTMENT_DATE TYPE=STRING; 
    //PLATFORM_INVESTMENT_DATE = FORMAT(TOSTR(PLATFORM_INVESTMENT_DATE_DT), 'MM/dd/yy');
    PLATFORM_INVESTMENT_DATE = PLATFORM_INVESTMENT_DATE_DT;
RUN;
