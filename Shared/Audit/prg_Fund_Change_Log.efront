//***************************************************************************
// 09/26/2022 MB Created Audit Program 
//***************************************************************************
LIBNAME LOCAL ".";

%param Start_Date  label="<b>From Date:(mm-dd-yyyy hh:mi:ss)</b><BR><BR>" type=DATE;
%param End_Date  label="<b>To Date:(mm-dd-yyyy hh:mi:ss)</b><BR><BR>" type=DATE;



DATA WORK.Fund_Change_Log;    
   SQL "select     
              Case
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'FUND'
                   then 'Fund Name'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'FSTATUS'
                   then 'Fund Status'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'USERCURR1'
                   then 'Target Fund Size'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'USERCURR2'
                   then 'Actual Fund Size at Close'
                 
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'USERCURR3'
                   then 'RGA Commitment Amount'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'USERNUM8'
                   then 'RGA Share of Target Fund %'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'USERTEXT23'
                   then 'Board Advisory Seat'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'USERDATE3'
                   then 'Final Fund Close'  
                   
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'USERTEXT2'
                   then 'Aladdin CUSIP'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'USERTEXT3'
                   then 'Fund Accounting Form'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'USERTEXT54'
                   then 'Investment Company'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'USERTEXT56'
                   then 'Accounting Method'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'USERTEXT21'
                   then 'LP Type'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'USERTEXT57'
                   then 'Specialized Industry Accounting'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'USERTEXT58'
                   then 'Level of Control'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'USERNUM26'
                   then 'Ownership %'                                                   
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'USERTEXT26'
                     then 'ACLI Region'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) = 'ABBREVIATION'
                   then 'Short Name'                                                    
                 when CONVERT(VARCHAR(MAX), NEWVALUES) Like '%<X>NA</X>%'
                   then 'Deleted'
                 else
                   CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES)
               end            COLNAMES
             , f1.my_Split_COLNAMES_len as Col_len
             , Case 
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) Like '%USERTEXT13%' and  f1.my_Split_OLDVALUES = '1'
                   then 'Yes'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) Like '%USERTEXT13%' and  f1.my_Split_OLDVALUES = '2'
                   then 'No'   
                 else
                   f1.my_Split_OLDVALUES 
               end            OLDVALUES
             , Case 
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) Like '%USERTEXT13%' and  f1.my_Split_NEWVALUES = '1'
                   then 'Yes'
                 when CONVERT(VARCHAR(MAX), f1.my_Split_COLNAMES) Like '%USERTEXT13%' and  f1.my_Split_NEWVALUES = '2'
                   then 'No'   
                 else
                   f1.my_Split_NEWVALUES 
               end            NEWVALUES
             , f1.RowNumberT2
             , f1.RowNumberT3
             , f1.RowNumberT4
             , f1.UserName
             , f1.IQCREATIONDATE
             , f1.IQMODIFICATIONDATE
             , f1.TABNAME
             , f1.Fund
             --, LTRIM(RTRIM(SUBSTRING(f1.Bank_Name,1,(CHARINDEX('-',f1.Bank_Name,1)-1)))) as Portfolio    --002
             --, CONVERT(VARCHAR(MAX),f1.OLDVALUES) _OLDVALUES 
             --, CONVERT(VARCHAR(MAX),f1.NEWVALUES) _NEWVALUES
             --, CONVERT(VARCHAR(MAX),f1.COLNAMES)  _COLNAMES
             --, f1._Audit_COLNAMES
             --, f1._Audit_OLDVALUES
             --, f1._Audit_NEWVALUES
             --, f1._BeforeColsChg
             , f1.description
             , Len(my_Split_OLDVALUES) L__old
             , len(my_Split_NEWVALUES) L__new
             --remove
             , COLNAMES_SPCH
             , NEWVALUES_SPCH
             , OLDVALUES_SPCH
          from (select CONVERT(VARCHAR(MAX),T1.COLNAMES)            COLNAMES
                    , CONVERT(VARCHAR(MAX),T2.my_Split_COLNAMES)   my_Split_COLNAMES
                    , CONVERT(VARCHAR(MAX),T3.my_Split_OLDVALUES)  my_Split_OLDVALUES
                    , CONVERT(VARCHAR(MAX),T4.my_Split_NEWVALUES)  my_Split_NEWVALUES
                    , Case 
                        when CONVERT(VARCHAR(MAX),T4.my_Split_NEWVALUES) Like '%<X>NA</X>%'
                          then len('Deleted')
                        else  
                          len(T2.my_Split_COLNAMES)
                      end              my_Split_COLNAMES_len
                    , T2.RowNumberT2
                    , T3.RowNumberT3
                    , T4.RowNumberT4
                    , T1.UserName
                    , T1.IQCREATIONDATE
                    , T1.IQMODIFICATIONDATE
                    , T1.TABNAME
                    , T1.Fund 
                    , CONVERT(VARCHAR(MAX), t1.OLDVALUES) OLDVALUES 
                    , CONVERT(VARCHAR(MAX), t1.NEWVALUES) NEWVALUES
                    , t1._Audit_COLNAMES
                    , t1._Audit_OLDVALUES
                    , t1._Audit_NEWVALUES
                    , t1._beforecolschg     _beforecolschg
                    , t1.description
                    , t1.COLNAMES_SPCH
                    , t1.NEWVALUES_SPCH
                    , t1.OLDVALUES_SPCH
                  
                  from
                    (select  amd.IQMODIFICATIONUSER              UserName
                           , amd.IQCREATIONDATE                  IQCREATIONDATE
                           , amd.IQMODIFICATIONDATE              IQMODIFICATIONDATE  
                           , CONVERT(VARCHAR(MAX), amd.TABNAME)  TABNAME
                           , CONVERT(VARCHAR(MAX), amd.COLNAMES) _beforecolschg
                           , VCF.FUND                            Fund
                           

                            --TFS10379 find the 5 xml special characters... ampersand, apostrophe, greater than, less than, doublequote
                            --flag the data with special characters so we can replace it later...
                            
                            , CASE WHEN CONVERT(VARCHAR(MAX), amd.COLNAMES) LIKE '%'+char(38)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.COLNAMES) LIKE '%'+char(62)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.COLNAMES) LIKE '%'+char(60)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.COLNAMES) LIKE '%'+char(39)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.COLNAMES) LIKE '%'+char(34)+'%'
                               THEN 'SPECIAL_CHAR' 
                               END COLNAMES_SPCH

                             , CASE WHEN CONVERT(VARCHAR(MAX), amd.OLDVALUES) LIKE '%'+char(38)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.OLDVALUES) LIKE '%'+char(62)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.OLDVALUES) LIKE '%'+char(60)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.OLDVALUES) LIKE '%'+char(39)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.OLDVALUES) LIKE '%'+char(34)+'%'
                               THEN 'SPECIAL_CHAR'
                               END OLDVALUES_SPCH
                               
                               , CASE WHEN CONVERT(VARCHAR(MAX), amd.NEWVALUES) LIKE '%'+char(38)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.NEWVALUES) LIKE '%'+char(62)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.NEWVALUES) LIKE '%'+char(60)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.NEWVALUES) LIKE '%'+char(39)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.NEWVALUES) LIKE '%'+char(34)+'%'
                               THEN 'SPECIAL_CHAR'
                               END NEWVALUES_SPCH
                            
                            
                            --TFS10379 if any of the special characters are found, then tokenize them with [SYMB_<some character>] so the xml parser can parse the data, check for deletes first for efficiency sake
                            --COLNAMES
                            , CASE WHEN audtyp.description LIKE '%Delete%'
                                     THEN '<X>'+'NA'+'</X>'
                           
                               WHEN (CONVERT(VARCHAR(MAX), amd.COLNAMES) LIKE '%'+char(38)+'%' 
                                   OR CONVERT(VARCHAR(MAX), amd.COLNAMES) LIKE '%'+char(62)+'%' 
                                   OR CONVERT(VARCHAR(MAX), amd.COLNAMES) LIKE '%'+char(60)+'%' 
                                   OR CONVERT(VARCHAR(MAX), amd.COLNAMES) LIKE '%'+char(39)+'%' 
                                   OR CONVERT(VARCHAR(MAX), amd.COLNAMES) LIKE '%'+char(34)+'%') 
                                   AND audtyp.description NOT LIKE '%Delete%'
                                        THEN CAST('<X>'+replace(
                                                            replace(replace(replace(replace(replace(CONVERT(VARCHAR(MAX), amd.COLNAMES), char(38), '[SYMB_amp]'), char(62), '[SYMB_gt]'), char(60),'[SYMB_lt]'), char(39),'[SYMB_apos]'), char(34), '[SYMB_quot]')
                                                         ,char(01), '</X><X>')
                                              +'</X>' as XML)     

                                 WHEN CHARINDEX(char(01), amd.COLNAMES ) > 0 AND audtyp.description NOT LIKE '%Delete%'
                                     THEN CAST('<X>'+replace(CONVERT(VARCHAR(MAX), amd.COLNAMES),char(01),'</X><X>')+'</X>' as XML)         -- Convert Column Names to XML
                             END COLNAMES      
                             
                             
                             --OLDVALUES
                             , CASE WHEN audtyp.description LIKE '%Delete%'
                                      THEN '<X>'+'NA'+'</X>'
                                 
                               WHEN (CONVERT(VARCHAR(MAX), amd.OLDVALUES) LIKE '%'+char(38)+'%' 
                                   OR CONVERT(VARCHAR(MAX), amd.OLDVALUES) LIKE '%'+char(62)+'%' 
                                   OR CONVERT(VARCHAR(MAX), amd.OLDVALUES) LIKE '%'+char(60)+'%' 
                                   OR CONVERT(VARCHAR(MAX), amd.OLDVALUES) LIKE '%'+char(39)+'%' 
                                   OR CONVERT(VARCHAR(MAX), amd.OLDVALUES) LIKE '%'+char(34)+'%') 
                                   AND audtyp.description NOT LIKE '%Delete%'
                                     THEN CAST('<X>'+replace(
                                                         replace(replace(replace(replace(replace(CONVERT(VARCHAR(MAX), amd.COLNAMES), char(38), '[SYMB_amp]'), char(62), '[SYMB_gt]'), char(60),'[SYMB_lt]'), char(39),'[SYMB_apos]'), char(34), '[SYMB_quot]')
                                                     ,char(01), '</X><X>')
                                          +'</X>' as XML)    
                                   
                                   WHEN CHARINDEX(char(01), amd.OLDVALUES ) > 0 AND audtyp.description NOT LIKE '%Delete%'
                                     THEN CAST('<X>'+replace(CONVERT(VARCHAR(MAX), amd.OLDVALUES),char(01),'</X><X>')+'</X>' as XML)         -- Convert Old Values to XML
                              END OLDVALUES        
                             
                             --NEWVALUES
                             , CASE WHEN audtyp.description LIKE '%Delete%'
                                     THEN '<X>'+'NA'+'</X>'
                             
                             WHEN (CONVERT(VARCHAR(MAX), amd.NEWVALUES) LIKE '%'+char(38)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.NEWVALUES) LIKE '%'+char(62)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.NEWVALUES) LIKE '%'+char(60)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.NEWVALUES) LIKE '%'+char(39)+'%' 
                               OR CONVERT(VARCHAR(MAX), amd.NEWVALUES) LIKE '%'+char(34)+'%') AND audtyp.description NOT LIKE '%Delete%'
                                     THEN CAST('<X>'+replace(
                                                         replace(replace(replace(replace(replace(CONVERT(VARCHAR(MAX), amd.NEWVALUES), char(38), '[SYMB_amp]'), char(62), '[SYMB_gt]'), char(60),'[SYMB_lt]'), char(39),'[SYMB_apos]'), char(34), '[SYMB_quot]')
                                                     ,char(01), '</X><X>')
                                          +'</X>' as XML) 
                                 
                                 WHEN CHARINDEX(char(01), amd.NEWVALUES ) > 0 AND audtyp.description NOT LIKE '%Delete%'
                                     THEN CAST('<X>'+replace(CONVERT(VARCHAR(MAX), amd.NEWVALUES),char(01),'</X><X>')+'</X>' as XML)         -- Convert New Values to XML
                             END NEWVALUES  
                             
                             
                             --pass in the raw values to _Audit_* columns
                           , CONVERT(VARCHAR(MAX), amd.COLNAMES)  _Audit_COLNAMES
                           , CONVERT(VARCHAR(MAX), amd.OLDVALUES) _Audit_OLDVALUES
                           , CONVERT(VARCHAR(MAX), amd.NEWVALUES) _Audit_NEWVALUES
                           , audtyp.description 
                           
                       from ADMAUDIT amd
                         Join VCFUND VCF
                            on VCF.iqid = amd.KEY1
                         Join ADMAUDITTYPE audtyp
                            on audtyp.CODE  = amd.MODTYPE
                       where amd.IQMODIFICATIONUSER  <>  'SVC4EFRONT'
                         and amd.TABNAME <> 'ADMUSER'
                         and amd.IQMODIFICATIONDATE >=  "& DML(%START_DATE) &"
                         and amd.IQMODIFICATIONDATE <  "& DML(%END_DATE) &"

                         
                        -- and CONVERT(VARCHAR, amd.COLNAMES) not in ('Current profile','profiles list')
                    ) t1
                    cross apply   -- Parse Column Names 
                       (  SELECT  my_Data.D.value('.','varchar(200)')  as my_Split_COLNAMES
                                 , row_number() over(order by my_Data.D) as RowNumberT2
                            FROM T1.COLNAMES.nodes('X') as my_Data(D) 
                       ) T2
                    cross apply   -- Parse Original Values
                       (  SELECT  my_Data2.D.value('.','varchar(200)') as my_Split_OLDVALUES
                                 , row_number() over(order by my_Data2.D) as RowNumberT3
                            FROM  T1.OLDVALUES.nodes('X') as my_Data2(D)
                       ) T3
                    cross apply   -- Parse New Values
                       (  SELECT  my_Data3.D.value('.','varchar(200)') as my_Split_NEWVALUES
                                 , row_number() over(order by my_Data3.D) as RowNumberT4
                            FROM  T1.NEWVALUES.nodes('X') as my_Data3(D)
                       ) T4
                 --remove
                 where  RowNumberT2 = RowNumberT3
                   and RowNumberT3 = RowNumberT4
                --    and len(my_Split_COLNAMES) > 0 
               ) f1
          where f1.my_Split_COLNAMES_len > 0
";
COLUMN COLNAMES;
RUN;   
//PROC PRINT DATA=WORK.Fund_Change_Log;RUN; 

DATA WORK.Fund_Change_Log;
    SET WORK.Fund_Change_Log (WHERE ColNames = 'Fund Name'
                           OR ColNames = 'Fund Status'
                           OR ColNames = 'Target Fund Size'
                           OR ColNames = 'Actual Fund Size at Close'
                           OR ColNames = 'RGA Commitment Amount'
                           OR ColNames = 'RGA Share of Target Fund %'
                           OR ColNames = 'Board Advisory Seat'
                           OR ColNames = 'Final Fund Close'
                           OR ColNames = 'Aladdin CUSIP'
                           OR ColNames = 'Investment Company'
                           OR ColNames = 'Fund Accounting Form'
                           OR ColNames = 'LP Type'
                           OR ColNames = 'Accounting Method'
                           OR ColNames = 'Specialized Industry Accounting'
                           OR ColNames = 'Level of Control'
                           OR ColNames = 'Ownership %'
                           OR ColNames = 'ACLI Region'
                           OR ColNames = 'Short Name');
RUN;
//PROC PRINT DATA = WORK.Fund_Change_Log; RUN;


//TFS10379 We have to take the tokenized special characters out of the data and then replace them with the real characters now...
DATA WORK.Fund_Change_Log;
    SET WORK.Fund_Change_Log;
	IF OLDVALUES_SPCH = "SPECIAL_CHAR"
		THEN OLDVALUES = replace(replace(replace(replace(replace(OLDVALUES, "[SYMB_quot]", '"'), "[SYMB_gt]", ">"),  "[SYMB_lt]", "<"), "[SYMB_apos]", "'"), "[SYMB_amp]", "&");
	END;
	IF NEWVALUES_SPCH = "SPECIAL_CHAR"
		THEN NEWVALUES = replace(replace(replace(replace(replace(NEWVALUES, "[SYMB_quot]", '"'), "[SYMB_gt]", ">"),  "[SYMB_lt]", "<"), "[SYMB_apos]", "'"), "[SYMB_amp]", "&");
	END;
	IF COLNAMES_SPCH = "SPECIAL_CHAR"
		THEN COLNAMES = replace(replace(replace(replace(replace(COLNAMES, "[SYMB_quot]", '"'), "[SYMB_gt]", ">"),  "[SYMB_lt]", "<"), "[SYMB_apos]", "'"), "[SYMB_amp]", "&");
	END; 
RUN;
//PROC PRINT DATA = WORK.Fund_Change_Log; RUN;

DATA WORK.Fund_Change_Log;
    SET WORK.Fund_Change_Log;
    COLUMN OLDVALUES_UPD TYPE = STRING;
    COLUMN NEWVALUES_UPD TYPE = STRING;
    COLUMN COMMENT TYPE = STRING;
   
    NEWVALUES_UPD = NEWVALUES;
    
    //OLDVALUES
    if Description like '%Creation%' then OLDVALUES_UPD = '';

    elseif ColNames = 'Fund Status' and OLDVALUES = '100' then OLDVALUES_UPD = 'RGA Legal Entity';
    elseif ColNames = 'Fund Status' and OLDVALUES = '212' then OLDVALUES_UPD = 'Fund (Closed Ended)';
    elseif ColNames = 'Fund Status' and OLDVALUES = '213' then OLDVALUES_UPD = 'Fund (Closed Ended Unitized)';
    elseif ColNames = 'Fund Status' and OLDVALUES = '214' then OLDVALUES_UPD = 'RE Joint Venture';
    elseif ColNames = 'Fund Status' and OLDVALUES = '221' then OLDVALUES_UPD = 'Fund (Open Ended)';
    elseif ColNames = 'Fund Status' and OLDVALUES = '215' then OLDVALUES_UPD = 'Equity Co-Investment (Accounting Only)';
    elseif ColNames = 'Fund Status' and OLDVALUES = '301' then OLDVALUES_UPD = 'Prospect Invested Fund';
    elseif ColNames = 'Fund Status' and OLDVALUES = '304' then OLDVALUES_UPD = 'Rejected Invested Fund';
    elseif ColNames = 'Fund Status' and OLDVALUES = '306' then OLDVALUES_UPD = 'Exited Fund';
    elseif ColNames = 'Fund Status' and OLDVALUES = '307' then OLDVALUES_UPD = 'Run Off/Sold';

    elseif ColNames = 'LP Type' and OLDVALUES = '1' then OLDVALUES_UPD = 'LP/LLC Fund';
    elseif ColNames = 'LP Type' and OLDVALUES = '2' then OLDVALUES_UPD = 'LP/LLC Company';
    
    elseif ColNames = 'Board Advisory Seat' and OLDVALUES = '1' then OLDVALUES_UPD = 'Yes';
    elseif ColNames = 'Board Advisory Seat' and OLDVALUES = '2' then OLDVALUES_UPD = 'No';
    
    elseif ColNames = 'Investment Company' and OLDVALUES = '1' then OLDVALUES_UPD = 'Yes';
    elseif ColNames = 'Investment Company' and OLDVALUES = '2' then OLDVALUES_UPD = 'No';
    
    elseif ColNames = 'Fund Accounting Form' and OLDVALUES = 'COST' then OLDVALUES_UPD = 'LP Cost Method';
    elseif ColNames = 'Fund Accounting Form' and OLDVALUES = 'EQUITY' then OLDVALUES_UPD = 'LP Equity Method';
    elseif ColNames = 'Fund Accounting Form' and OLDVALUES = 'FV' then OLDVALUES_UPD = 'LP Fair Value Method';
    elseif ColNames = 'Fund Accounting Form' and OLDVALUES = 'NAV' then OLDVALUES_UPD = 'LP NAV Method';
    
    elseif ColNames = 'Accounting Method' and OLDVALUES = '1' then OLDVALUES_UPD = '323 Equity Method - Equity';
    elseif ColNames = 'Accounting Method' and OLDVALUES = '2' then OLDVALUES_UPD = '323 Equity Method - FVO';
    elseif ColNames = 'Accounting Method' and OLDVALUES = '3' then OLDVALUES_UPD = '323 Equity Method - FV (Investment Company)';
    elseif ColNames = 'Accounting Method' and OLDVALUES = '4' then OLDVALUES_UPD = '321 Equity Security - FV';
    elseif ColNames = 'Accounting Method' and OLDVALUES = '5' then OLDVALUES_UPD = '321 Equity Security - NAV';
    elseif ColNames = 'Accounting Method' and OLDVALUES = '6' then OLDVALUES_UPD = '321 Equity Security - Cost less impairment';
    
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '1' then OLDVALUES_UPD = 'No Specialized Industry';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '2' then OLDVALUES_UPD = 'Financial Services - Investment Companies';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '3' then OLDVALUES_UPD = 'Agriculture';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '4' then OLDVALUES_UPD = 'Airlines';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '5' then OLDVALUES_UPD = 'Common Interest Realty Associations';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '6' then OLDVALUES_UPD = 'Construction';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '7' then OLDVALUES_UPD = 'Defined Benefit Pension Plans';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '8' then OLDVALUES_UPD = 'Development Stage Entities';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '9' then OLDVALUES_UPD = 'Entertainment - Broadcasters';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '10' then OLDVALUES_UPD = 'Entertainment - Cable Television';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '11' then OLDVALUES_UPD = 'Entertainment - Casino';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '12' then OLDVALUES_UPD = 'Entertainment - Films';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '13' then OLDVALUES_UPD = 'Entertainment - Music';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '14' then OLDVALUES_UPD = 'Extractive Activities - Mining';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '15' then OLDVALUES_UPD = 'Extractive Activities - Oil and Gas';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '16' then OLDVALUES_UPD = 'Federal Gov';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '17' then OLDVALUES_UPD = 'Financial Services - Brokers Dealers';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '18' then OLDVALUES_UPD = 'Financial Services - Depository and Lending';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '19' then OLDVALUES_UPD = 'Financial Services - Insurance';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '20' then OLDVALUES_UPD = 'Financial Services - Mortgage Banking';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '21' then OLDVALUES_UPD = 'Financial Services - Title Plant';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '22' then OLDVALUES_UPD = 'Franchisors';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '23' then OLDVALUES_UPD = 'Health and Welfare Benefit Plans';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '24' then OLDVALUES_UPD = 'Health Care Entities';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '25' then OLDVALUES_UPD = 'NFP';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '26' then OLDVALUES_UPD = 'Not Specialized';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '27' then OLDVALUES_UPD = 'Real Estate - General';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '28' then OLDVALUES_UPD = 'Real Estate - Real Estate Investment Trusts';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '29' then OLDVALUES_UPD = 'Real Estate - Time-Sharing Activities';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '30' then OLDVALUES_UPD = 'Regulated Operations';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '31' then OLDVALUES_UPD = 'Retain Land';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '32' then OLDVALUES_UPD = 'Software';
    elseif ColNames = 'Specialized Industry Accounting' and OLDVALUES = '33' then OLDVALUES_UPD = 'Steamship Entities';
    
    elseif ColNames = 'Level of Control' and OLDVALUES = '1' then OLDVALUES_UPD = 'Controlling';
    elseif ColNames = 'Level of Control' and OLDVALUES = '2' then OLDVALUES_UPD = 'Significant Influence';
    elseif ColNames = 'Level of Control' and OLDVALUES = '3' then OLDVALUES_UPD = 'Minor Influence';
    
    elseif ColNames = 'ACLI Region' and OLDVALUES = '1' then OLDVALUES_UPD = 'East North Central';
    elseif ColNames = 'ACLI Region' and OLDVALUES = '2' then OLDVALUES_UPD = 'East South Central';
    elseif ColNames = 'ACLI Region' and OLDVALUES = '3' then OLDVALUES_UPD = 'Middle Atlantic';
    elseif ColNames = 'ACLI Region' and OLDVALUES = '4' then OLDVALUES_UPD = 'Mountain';
    elseif ColNames = 'ACLI Region' and OLDVALUES = '5' then OLDVALUES_UPD = 'New England';
    elseif ColNames = 'ACLI Region' and OLDVALUES = '6' then OLDVALUES_UPD = 'Pacific';
    elseif ColNames = 'ACLI Region' and OLDVALUES = '7' then OLDVALUES_UPD = 'Southern Atlantic';
    elseif ColNames = 'ACLI Region' and OLDVALUES = '8' then OLDVALUES_UPD = 'West North Central';
    elseif ColNames = 'ACLI Region' and OLDVALUES = '9' then OLDVALUES_UPD = 'West South Central';
    
    //elseif ColNames = 'Ownership %' then OLDVALUES_UPD = OLDVALUES*100;
    
    else OLDVALUES_UPD = OLDVALUES;
    end;
    
    //NEWVALUES
    if ColNames = 'Fund Status' and NEWVALUES = '100' then NEWVALUES_UPD = 'RGA Legal Entity';
    elseif ColNames = 'Fund Status' and NEWVALUES = '212' then NEWVALUES_UPD = 'Fund (Closed Ended)';
    elseif ColNames = 'Fund Status' and NEWVALUES = '213' then NEWVALUES_UPD = 'Fund (Closed Ended Unitized)';
    elseif ColNames = 'Fund Status' and NEWVALUES = '214' then NEWVALUES_UPD = 'RE Joint Venture';
    elseif ColNames = 'Fund Status' and NEWVALUES = '221' then NEWVALUES_UPD = 'Fund (Open Ended)';
    elseif ColNames = 'Fund Status' and NEWVALUES = '215' then NEWVALUES_UPD = 'Equity Co-Investment (Accounting Only)';
    elseif ColNames = 'Fund Status' and NEWVALUES = '301' then NEWVALUES_UPD = 'Prospect Invested Fund';
    elseif ColNames = 'Fund Status' and NEWVALUES = '304' then NEWVALUES_UPD = 'Rejected Invested Fund';
    elseif ColNames = 'Fund Status' and NEWVALUES = '306' then NEWVALUES_UPD = 'Exited Fund';
    elseif ColNames = 'Fund Status' and NEWVALUES = '307' then NEWVALUES_UPD = 'Run Off/Sold';

    elseif ColNames = 'LP Type' and NEWVALUES = '1' then NEWVALUES_UPD = 'LP/LLC Fund';
    elseif ColNames = 'LP Type' and NEWVALUES = '2' then NEWVALUES_UPD = 'LP/LLC Company';
    
    elseif ColNames = 'Board Advisory Seat' and NEWVALUES = '1' then NEWVALUES_UPD = 'Yes';
    elseif ColNames = 'Board Advisory Seat' and NEWVALUES = '2' then NEWVALUES_UPD = 'No';
    
    elseif ColNames = 'Investment Company' and NEWVALUES = '1' then NEWVALUES_UPD = 'Yes';
    elseif ColNames = 'Investment Company' and NEWVALUES = '2' then NEWVALUES_UPD = 'No';
    
    elseif ColNames = 'Fund Accounting Form' and NEWVALUES = 'COST' then NEWVALUES_UPD = 'LP Cost Method';
    elseif ColNames = 'Fund Accounting Form' and NEWVALUES = 'EQUITY' then NEWVALUES_UPD = 'LP Equity Method';
    elseif ColNames = 'Fund Accounting Form' and NEWVALUES = 'FV' then NEWVALUES_UPD = 'LP Fair Value Method';
    elseif ColNames = 'Fund Accounting Form' and NEWVALUES = 'NAV' then NEWVALUES_UPD = 'LP NAV Method';
    
    elseif ColNames = 'Accounting Method' and NEWVALUES = '1' then NEWVALUES_UPD = '323 Equity Method - Equity';
    elseif ColNames = 'Accounting Method' and NEWVALUES = '2' then NEWVALUES_UPD = '323 Equity Method - FVO';
    elseif ColNames = 'Accounting Method' and NEWVALUES = '3' then NEWVALUES_UPD = '323 Equity Method - FV (Investment Company)';
    elseif ColNames = 'Accounting Method' and NEWVALUES = '4' then NEWVALUES_UPD = '321 Equity Security - FV';
    elseif ColNames = 'Accounting Method' and NEWVALUES = '5' then NEWVALUES_UPD = '321 Equity Security - NAV';
    elseif ColNames = 'Accounting Method' and NEWVALUES = '6' then NEWVALUES_UPD = '321 Equity Security - Cost less impairment';
    
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '1' then NEWVALUES_UPD = 'No Specialized Industry';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '2' then NEWVALUES_UPD = 'Financial Services - Investment Companies';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '3' then NEWVALUES_UPD = 'Agriculture';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '4' then NEWVALUES_UPD = 'Airlines';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '5' then NEWVALUES_UPD = 'Common Interest Realty Associations';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '6' then NEWVALUES_UPD = 'Construction';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '7' then NEWVALUES_UPD = 'Defined Benefit Pension Plans';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '8' then NEWVALUES_UPD = 'Development Stage Entities';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '9' then NEWVALUES_UPD = 'Entertainment - Broadcasters';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '10' then NEWVALUES_UPD = 'Entertainment - Cable Television';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '11' then NEWVALUES_UPD = 'Entertainment - Casino';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '12' then NEWVALUES_UPD = 'Entertainment - Films';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '13' then NEWVALUES_UPD = 'Entertainment - Music';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '14' then NEWVALUES_UPD = 'Extractive Activities - Mining';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '15' then NEWVALUES_UPD = 'Extractive Activities - Oil and Gas';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '16' then NEWVALUES_UPD = 'Federal Gov';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '17' then NEWVALUES_UPD = 'Financial Services - Brokers Dealers';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '18' then NEWVALUES_UPD = 'Financial Services - Depository and Lending';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '19' then NEWVALUES_UPD = 'Financial Services - Insurance';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '20' then NEWVALUES_UPD = 'Financial Services - Mortgage Banking';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '21' then NEWVALUES_UPD = 'Financial Services - Title Plant';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '22' then NEWVALUES_UPD = 'Franchisors';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '23' then NEWVALUES_UPD = 'Health and Welfare Benefit Plans';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '24' then NEWVALUES_UPD = 'Health Care Entities';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '25' then NEWVALUES_UPD = 'NFP';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '26' then NEWVALUES_UPD = 'Not Specialized';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '27' then NEWVALUES_UPD = 'Real Estate - General';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '28' then NEWVALUES_UPD = 'Real Estate - Real Estate Investment Trusts';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '29' then NEWVALUES_UPD = 'Real Estate - Time-Sharing Activities';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '30' then NEWVALUES_UPD = 'Regulated Operations';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '31' then NEWVALUES_UPD = 'Retain Land';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '32' then NEWVALUES_UPD = 'Software';
    elseif ColNames = 'Specialized Industry Accounting' and NEWVALUES = '33' then NEWVALUES_UPD = 'Steamship Entities';
    
    elseif ColNames = 'Level of Control' and NEWVALUES = '1' then NEWVALUES_UPD = 'Controlling';
    elseif ColNames = 'Level of Control' and NEWVALUES = '2' then NEWVALUES_UPD = 'Significant Influence';
    elseif ColNames = 'Level of Control' and NEWVALUES = '3' then NEWVALUES_UPD = 'Minor Influence';
    
    elseif ColNames = 'ACLI Region' and NEWVALUES = '1' then NEWVALUES_UPD = 'East North Central';
    elseif ColNames = 'ACLI Region' and NEWVALUES = '2' then NEWVALUES_UPD = 'East South Central';
    elseif ColNames = 'ACLI Region' and NEWVALUES = '3' then NEWVALUES_UPD = 'Middle Atlantic';
    elseif ColNames = 'ACLI Region' and NEWVALUES = '4' then NEWVALUES_UPD = 'Mountain';
    elseif ColNames = 'ACLI Region' and NEWVALUES = '5' then NEWVALUES_UPD = 'New England';
    elseif ColNames = 'ACLI Region' and NEWVALUES = '6' then NEWVALUES_UPD = 'Pacific';
    elseif ColNames = 'ACLI Region' and NEWVALUES = '7' then NEWVALUES_UPD = 'Southern Atlantic';
    elseif ColNames = 'ACLI Region' and NEWVALUES = '8' then NEWVALUES_UPD = 'West North Central';
    elseif ColNames = 'ACLI Region' and NEWVALUES = '9' then NEWVALUES_UPD = 'West South Central';
    
    //elseif ColNames = 'Ownership %' then NEWVALUES_UPD = NEWVALUES*100;
    
    else NEWVALUES_UPD = NEWVALUES;
    end;
    
    if Description like '%Creation%' then Comment = 'New Fund Created in eFront';
    /*elseif Description like '%Creation%' and Fund IS NOT NULL and Initial_Call_Date IS NOT NULL then Comment = 'New Fund, first call' + ' ' + CDATE(Initial_Call_Date);
    //elseif Description like '%Creation%' and Fund IS NOT NULL then Comment = 'New Bank Account Created in Front Linked to Fund';
    elseif Description like '%Creation%' then Comment = 'New Bank Account Created in eFront';
    elseif Description like '%Update%' then Comment = 'Minor change, reasonable';*/
    end;
RUN;
//PROC PRINT DATA = WORK.Fund_Change_Log; RUN;

DATA LOCAL.Fund_Change_Log;
    SET WORK.Fund_Change_Log (WHERE Description = 'Creation' or NEWVALUES_UPD <> OLDVALUES_UPD);
RUN;
//PROC PRINT DATA = LOCAL.Fund_Change_Log; RUN;
/*
PROC EXPORTEXCEL FILE=GETTEMPPATH()+"\Fund Change Log.xlsx" LABEL;
   TABLE = LOCAL.Fund_Change_Log
   SHEETNAME="Audit";
RUN;
*/
//002 end

//PROC PRINT DATA = WORK.EFRONT_AUDIT; RUN;
//PROC PRINT DATA=LOCAL.EFRONT_AUDIT;RUN;                                                                                                                                                                                                                                          
