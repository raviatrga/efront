//*************************************************************
// DD 2018_02_28 -- ITM0257434 
// Replaced Descriptions field with Code field in DATA WORK.DISTDISP 
// AND OPT.DESCR IN (-286,-284,-278,-277,282,301)    
// 'IF: Quarterly Income Analysis','IF: Equity Income Analysis',
// 'Historical Balance True-Up','IF: Liquidation (Cost)','IF: Liquidation (Equity)','IF: Secondary Sale (Cost)','IF: Secondary Sale (Equity)') 
// BR 2020_11_18 -- TFS: 10619, 10617, 10616
//     uppercased CITY column
//     uppercased Name of Vender or General Partner
//     uppercased Name of Purchaser or nature of disposal
//     removed percent % symbol from Percentage Of Ownership (added P_PERC_NO_SYMBOL), multiplied the final value here by 100 to get the percentage displayed as a decimal range instead of fraction of 1.00
//     Part 2: Aggregated by FUNDNAME and CLOSEDATE and summed the Initial Amount (Actual Cost at Time of Acquisition) and AddAmt (Additional Investment Made After Acquisition)
//                This is to remove duplicates mentioned in the meeting with Kerin.
//     Part 1: Filtered out liquidations in part 1 with OP.OTYPE NOT IN(-284, -286)
//     --removed temporarily... Part 1: If actual cost is 0 but fair value and encumberances are populated, they are currently filtered out they need to be shown.
//     Part 2: Filter out any records where Actual Cost at Time of Acquisition and Additional Investment Made After Acquisition are 0
//
// 001 MB 10/04/2021 Updated logic to include new Fair Value operations/funds, fixed bugs in existing code, and added additional logic to Part 3 for liquidated funds 
// 002 MB 10/13/2021 Excluding cancelled operations from Part 2, removing duplication from Investment Income column in Part 3, and setting all $ columns to 0 for funds that had their first
//                   liquidation in a prior period in Part 3
// 003 MB 10/20/2021 Added FV Liquidation and HBT Updates (FundOpType changed from 305 to -305 and FV HBT Created as FundOpType 309)
// 004 MB 10/28/2021 Changed Part 3 so that "Book/Adjusted Carrying Value Less Encumbrances, Prior Year" is set to 0 if a fund was created in the current year (since it has no prior year BV)
// 005 MB 06/16/2022 Changed Part 3 to pull MIN for select columns rather than SUM and not including change in BV in Consideration for liquidated funds
// 006 MB 03/30/2023 Updated parts 1-3 to include exclusivity fees and RGA RE SEPARATE ACCOUNT legal entity
//*************************************************************

LIBNAME LOCAL ".";

%param Start_Date label="<b>Start Date:</b><BR><BR>" type=DATE   DEFAULT= "01072021"d;
%param Date label="<b>End Date:</b><BR><BR>" type=DATE DEFAULT= "30092021"d;
%param Part label="<b>Schedule BA:</b><BR><BR>" INFORMAT="??CHOICE(Part 1,Part 2,Part 3)" DEFAULT= "Part 1";
//%param Part label="<b>Schedule BA:</b><BR><BR>" INFORMAT="??CHOICE(Part 2,Part 3)" DEFAULT= "Part 3";
%param Legal_Entity label="<b>Legal Entity:</b><BR><BR>" INFORMAT="??CHOICE(RGA RE,AURORA,RGA RE SEPARATE ACCOUNT)" DEFAULT= "RGA RE";    //006
%LET DATE=%DATE;

//%param Start_Date label="<b>Start Date:</b><BR><BR>" type=DATE DEFAULT= "01012017"d;
//%param End_Date label="<b>End Date:</b><BR><BR>" type=DATE DEFAULT= "03312017"d;

PROC FORMAT; PICTURE P_Money LOW-HIGH = '0,000.00'; RUN;
PROC FORMAT; PICTURE P_PERC LOW-HIGH = '0.00%'; RUN;
PROC FORMAT; PICTURE P_PERC_NO_SYMBOL LOW-HIGH = '0.00'; RUN;

%IF %Part = 'Part 1' %THEN
// Qtarterly Income Analysis - GL Cost(US GAAP) > Amount70
//Equity Income Analysis > Alloc: Fund.GL Unrecognized Earnings > AMOUNT79
//Equity Income Analysis > Alloc: Fund.GL Unrealized Investment Gain/Loss (US STAT) > AMOUNT99
//Equity Income Analysis > Alloc: Fund.GL Income - ELIM(GAAP) > AMOUNTD4

//SUM(AMOUNT79) + SUM(AMOUNT99) AS UNRELVAL12_SQL
//SUM(Unrealized_STAT) Unrealized_STAT, SUM(Unrecognized_STAT) Unrecognized_STAT,
// (SUM(UNRLZ99_ITD) + SUM(UNREC79_ITD)) -  (SUM( UNRLZ99_PYITD) + SUM(UNREC79_PYITD)) 
// SUM(UNRLZ99_ITD) UNRLZ99_ITD, SUM(UNRLZ99_PYITD) UNRLZ99_PYITD,

//  CASE WHEN OP.CLOSEDATE <= DATEADD(year,-1," & DML(%Date) & ") THEN 
//CASE WHEN OP.CLOSEDATE <= DATEADD(year,-1," & DML(%Date) & ") THEN COALESCE(SUBOP.AMOUNT99 * (-1),0) ELSE 0 END AS UNRLZ99_PYITD,
// CASE WHEN OP.CLOSEDATE <= DATEADD(year,-1," & DML(%Date) & ") THEN COALESCE(SUBOP.AMOUNT79 * (-1),0) ELSE 0 END AS UNREC79_PYITD,

DATA WORK.SCH_BA1;
    SQL "SELECT IQID, 
        CASE WHEN MIN(USERNUM2) = 0 THEN '000000' END CUSIP1_SQL, 
        CASE WHEN MIN(USERNUM3) = 0 THEN '00' END CUSIP2_SQL, 
        CASE WHEN MIN(USERNUM4) = 0 THEN '0' END CUSIP3_SQL, 
        MIN(STAT_CLASS) STAT_SQL,  
        MIN(FUND) FUND2_SQL,   
        MIN(REGCITY) CITY3_SQL,  
        MIN(STATECODE)STATE4_SQL,
        MIN(NAME) AS  MGMT5_SQL, '' AS NAIC6_SQL, 
        MIN(CLOSINGDATE) CLDT7_SQL, '' AS TYPE8_SQL, 
        MIN(ACCTFORM)AS ACCOUNTING_FORM,  
        SUM(ACTCOST) AS ITDACTCOST9_SQL, 
        SUM(ACTCOST_PYITD) AS ACTCOST_PYITD,
  
        SUM(GAAP_BOOKVALUE) GAAP_BOOKVALUE,  
        SUM(ELIM_GAAP) ELIM_GAAP, 
        SUM(ELIM_BAL) ELIM_BAL,
        SUM(AMOUNT81) AS FAIRVAL10_SQL, 
        SUM(AMOUNT81) AS BOOKADJ11_SQL,
       
        (SUM(UNRLZ99_ITD) + SUM(UNREC79_ITD)) -  (SUM( UNRLZ99_PYITD) + SUM(UNREC79_PYITD)) AS UNRELVAL12_SQL ,
        
        '' CYDEPR13_SQL,  SUM(AMOUNTC8) AS CYOTTI14_SQL, '' CAPDEF15_SQL,
        SUM(AMOUNT95) AS CHGBKVAL16_SQL, SUM(AMOUNT96) AS INVINC17_SQL, MIN(PERCOWN) AS PERCOWN19_SQL, '' AS FVHIER20_SQL, 
        '' AS FVCODE21_SQL, MIN(LEI) AS LEI22_SQL, MIN(ZIP) AS ZIP23_SQL,  MIN(PROP) PROP24_SQL, MIN(INVESTORNAME) INVESTORNAME
        , MIN(FUNDSTATUS) AS FUNDSTATUS
        ,MIN(LIQUIDATION_STATUS_DATE) AS LIQUIDATION_DATE
        
   FROM ( SELECT VCF.IQID, VCF.USERNUM2, VCF.USERNUM3, VCF.USERNUM4, VCF.USERTEXT13 STAT_CLASS, VCF.FUND,
            FOTH.REGCITY, VCST.STATECODE, MGMT.NAME, VCF.CLOSINGDATE, 
            VCF.USERTEXT3 ACCTFORM,
            
            CASE WHEN VCF.USERTEXT3 = 'COST' THEN COALESCE(SUBOP.AMOUNT70,0) + COALESCE(SUBOP.AMOUNTA2,0)    
                 WHEN VCF.USERTEXT3 = 'EQUITY' or VCF.USERTEXT3 = 'FV' THEN COALESCE(SUBOP.AMOUNT81,0)       --001 added FV
                 - COALESCE(SUBOP.AMOUNT79,0) - COALESCE(SUBOP.AMOUNT99,0) - COALESCE(SUBOP.AMOUNTD4,0)
                  ELSE 0.00 END  AS ACTCOST,

            CASE WHEN OP.CLOSEDATE <=
                 CONVERT( DATETIME, '12/31/' + CONVERT(varchar(4),DATEPART(year,DATEADD(year,-1," & DML(%Date) & "))) , 101) THEN

            CASE WHEN VCF.USERTEXT3 = 'COST' THEN COALESCE(SUBOP.AMOUNT70,0) + COALESCE(SUBOP.AMOUNTA2,0)
                 WHEN VCF.USERTEXT3 = 'EQUITY' or VCF.USERTEXT3 = 'FV' THEN COALESCE(SUBOP.AMOUNT81,0)       --001 added FV
                 - COALESCE(SUBOP.AMOUNT79,0) - COALESCE(SUBOP.AMOUNT99,0) - COALESCE(SUBOP.AMOUNTD4,0)
                  ELSE 0.00 END   ELSE 0 END AS ACTCOST_PYITD ,                      
                  
         COALESCE(SUBOP.AMOUNT70,0) GAAP_BOOKVALUE , 
         COALESCE(SUBOP.AMOUNT99,0) UNRLZ99_ITD, 
         COALESCE(SUBOP.AMOUNT79,0) UNREC79_ITD, 
         
         COALESCE(SUBOP.AMOUNTD4,0) ELIM_GAAP, 
         COALESCE(SUBOP.AMOUNTA2,0) ELIM_BAL,
         COALESCE(SUBOP.AMOUNT81,0) AMOUNT81,
         
        
         CASE WHEN OP.CLOSEDATE <= CONVERT( DATETIME, '12/31/' + CONVERT(varchar(4),DATEPART(year,DATEADD(year,-1," & DML(%Date) & "))) , 101) 
                     THEN COALESCE(SUBOP.AMOUNT99 ,0) ELSE 0 END AS UNRLZ99_PYITD,
         CASE WHEN OP.CLOSEDATE <= CONVERT( DATETIME, '12/31/' + CONVERT(varchar(4),DATEPART(year,DATEADD(year,-1," & DML(%Date) & "))) , 101) 
                     THEN COALESCE(SUBOP.AMOUNT79 ,0) ELSE 0 END AS UNREC79_PYITD,
         
         CASE WHEN OP.CLOSEDATE >= " & DML(%Start_Date) & "  THEN COALESCE(SUBOP.AMOUNT79,0) ELSE 0 END AS AMOUNT79,
         CASE WHEN OP.CLOSEDATE >= " & DML(%Start_Date) & "  THEN COALESCE(SUBOP.AMOUNT99,0) ELSE 0 END AS AMOUNT99,
         CASE WHEN OP.CLOSEDATE >= " & DML(%Start_Date) & "  THEN COALESCE(SUBOP.AMOUNTC8,0)*(-1) ELSE 0 END AS AMOUNTC8,
         CASE WHEN OP.CLOSEDATE >= " & DML(%Start_Date) & "  THEN COALESCE(SUBOP.AMOUNT95,0) ELSE 0 END AS AMOUNT95,
         CASE WHEN OP.CLOSEDATE >= " & DML(%Start_Date) & "  THEN COALESCE(SUBOP.AMOUNT96,0) ELSE 0 END AS AMOUNT96,

        VCF.USERNUM8 AS PERCOWN, VCF.USERTEXT12 LEI, L3.ZIP ZIP,
         CASE VCF.USERTEXT14 WHEN '1' THEN 'OF'          WHEN '2' THEN 'RT'         WHEN '3' THEN 'MU'         WHEN '4' THEN 'IN'         WHEN '5' THEN 'HC'         WHEN '6' THEN 'MX'
             WHEN '7' THEN 'LO'         WHEN '8' THEN 'OT'         END PROP,
        SUBSCR.LIBELLE INVESTORNAME 
        ,FUNDSTAT.DESCR AS FUNDSTATUS 
        ,LIQUIDATION_STATUS.LIQ_DATE AS LIQUIDATION_STATUS_DATE
        ,ROW_NUMBER() OVER (PARTITION BY OP.IQID ORDER BY L3.IQID ASC) AS PROPERTY_ROW_NUMBER
        
        FROM VCFUND VCF 
        
        JOIN VCFUNDOP OP ON OP.FUND = VCF.IQID 
        JOIN VCFUNDOPTYPE OPT ON OP.OTYPE = OPT.CODE 
        JOIN VCSUBSCRFUNDOPSHARE SUBOP ON SUBOP.FUNDOP = OP.IQID AND SUBOP.FUNDOP IS NOT NULL AND (SUBOP.IQDELETED = 0 OR SUBOP.IQDELETED IS NULL)
        JOIN VCSUBSCRIBER SUBSCR ON SUBSCR.IQID = SUBOP.SUBSCRIBER AND SUBSCR.LIBELLE = '" & %Legal_Entity & "'
        
        LEFT OUTER JOIN (SELECT MAX(CLOSEDATE) AS LIQ_DATE, FUND FROM VCFUNDOP 
            WHERE OTYPE IN(-284, -286, -305)     --001 --003
            AND CLOSEDATE <= " & DML(%Date) & "
            AND (CANCELLED = 0 OR CANCELLED IS NULL)
            GROUP BY FUND
        )
        LIQUIDATION_STATUS ON LIQUIDATION_STATUS.FUND = OP.FUND
        
        
        LEFT JOIN VCFUNDOTHER FOTH ON FOTH.FUND = VCF.IQID
        LEFT JOIN VCSTATE VCST ON (LTRIM(RTRIM(FOTH.REGSTATE)) = LTRIM(RTRIM(VCST.DESCRIPTION)) OR LTRIM(RTRIM(FOTH.REGSTATE)) = LTRIM(RTRIM(VCST.CODE))) AND VCST.FILTER NOT LIKE '00000%'
        LEFT JOIN VCINVESTMENT L1 ON VCF.IQID=L1.FUND AND L1.IQDELETED=0
        LEFT JOIN SFAACCOUNT R2 ON R2.IQID=L1.ACCOUNT AND R2.IQDELETED=0  
        LEFT JOIN SFASITE L3 ON R2.IQID=L3.ACCOUNT_ID AND L3.IQDELETED=0
        LEFT JOIN SFAACCOUNT MGMT ON MGMT.IQID=VCF.ACCOUNT AND MGMT.IQDELETED=0 
        LEFT JOIN SFAPRODCATEGORY03 STATLKP ON STATLKP.CODE = VCF.USERTEXT13
        
        LEFT OUTER JOIN VCFUNDSTAT FUNDSTAT ON FUNDSTAT.CODE = VCF.FSTATUS

        WHERE 
        VCF.IQDELETED=0 
        AND OP.IQDELETED=0 
        AND OP.DRAFT=0 
        AND SUBOP.IQDELETED=0 
        AND SUBSCR.IQDELETED=0 
        AND (OP.CANCELLED=0 OR OP.CANCELLED IS NULL) 
        AND OP.CLOSEDATE <= " & DML(%Date) & " 
        AND OP.OTYPE NOT IN(-284, -286, -305)        --001 added 305    --003
        
        /*OP.CLOSEDATE BETWEEN " & DML(%Start_Date) & " AND " & DML(%Date) & " AND */
        
    ) ALL_TRAN
    --DEDUPLICATE the operations where the join on SFASITES for multiple properties causes duplicates, example is AEA MEZZANINE FUND II LP
    WHERE PROPERTY_ROW_NUMBER = 1
    GROUP BY ALL_TRAN.IQID                                
    ORDER BY 6" ; 
    COLUMN FUND_ID;
RUN;

//PROC PRINT DATA=WORK.SCH_BA1; RUN;
/*
PROC EXPORTEXCEL FILE=GETTEMPPATH()+"\operations.xlsx" LABEL;
   TABLE = WORK.SCH_BA1
   SHEETNAME="part1";
RUN;
*/
DATA WORK.FCEInvPos(KEEP = FUND_ID INVESTORNAME REMAININGCOMMITMENT STAKE);
    SET FCE.FUNDINVESTORPOSITIONS(WHERE POSITION_DATE=%Date) ;
RUN;
//PROC PRINT DATA=WORK.CalcEngTab; RUN; 
                                                                                                                                                                                   
DATA WORK.SCH_BA1;
    MERGE WORK.SCH_BA1(IN=IN1) WORK.FCEInvPos(IN=IN2);
    BY FUND_ID INVESTORNAME;
    If (IN1 and IN2) then Output;
    End;
RUN;   

//PROC PRINT DATA=WORK.SCH_BA1; RUN; 
//Unrealized_STAT Unrecognized_STAT

DATA WORK.SCH_BA1(DROP = FUND_ID STAT_SQL CUSIP1_SQL CUSIP2_SQL CUSIP3_SQL FUND2_SQL CITY3_SQL STATE4_SQL MGMT5_SQL NAIC6_SQL
                            CLDT7_SQL TYPE8_SQL ITDACTCOST9_SQL 
                            ACCOUNTING_FORM GAAP_BOOKVALUE  ELIM_GAAP ELIM_BAL
                            FAIRVAL10_SQL BOOKADJ11_SQL UNRELVAL12_SQL CYDEPR13_SQL CYOTTI14_SQL
                            CAPDEF15_SQL CHGBKVAL16_SQL INVINC17_SQL REMAININGCOMMITMENT PERCOWN19_SQL STAKE FVHIER20_SQL FVCODE21_SQL LEI22_SQL ZIP23_SQL PROP24_SQL
                            INVESTORNAME STAKE ACTCOST_PYITD);



//CHANGE: INCLUDE IF (NOT 0) OR (0 AND NOT EXITED) FUND STATUS AS EXITED FUND, In query builder
//also, if it had a liquidation in the last year then filter it out as well
//SET WORK.SCH_BA1(WHERE (FAIRVAL10_SQL <> 0 AND FUNDSTATUS <> "Exited Fund") AND LIQUIDATION_DATE IS NULL); //ITDACTCOST9_SQL <> 0); //OR (ITDACTCOST9_SQL = 0 AND FAIRVAL10_SQL <> 0 AND BOOKADJ11_SQL <> 0));
//SET WORK.SCH_BA1(WHERE ((ITDACTCOST9_SQL <> 0 OR FAIRVAL10_SQL <> 0) AND FUNDSTATUS <> "Exited Fund") AND LIQUIDATION_DATE IS NULL); //001 commented out
SET WORK.SCH_BA1(WHERE (ITDACTCOST9_SQL <> 0 OR FAIRVAL10_SQL <> 0) AND LIQUIDATION_DATE IS NULL); //001
 COLUMN STAT TYPE=STRING LABEL = "STAT Classification"; STAT = STAT_SQL ;
 COLUMN CUSIP1 TYPE=STRING LABEL = "Cusip1"; CUSIP1 = CUSIP1_SQL ;
 COLUMN CUSIP2 TYPE=STRING LABEL = "Cusip2"; CUSIP2 = CUSIP2_SQL ;
 COLUMN CUSIP3 TYPE=STRING LABEL = "Cusip3"; CUSIP3 = CUSIP3_SQL ;
 COLUMN FundName TYPE=STRING LABEL = "Name or Description" WIDTH =300; FundName = FUND2_SQL ;
 COLUMN CITY TYPE=STRING LABEL = "City"; CITY = UCASE(CITY3_SQL);
 COLUMN STATE TYPE=STRING LABEL = "State"; STATE = STATE4_SQL;
 COLUMN MGMT TYPE=STRING LABEL = "Name of Purchaser or Nature of Disposal" WIDTH =250; MGMT = UCASE(MGMT5_SQL);
 COLUMN NAIC TYPE=STRING LABEL = "NAIC Designation"; NAIC = NAIC6_SQL;
 COLUMN CLOSEDATE TYPE=DATE LABEL = "Date Originally Acquired" ; CLOSEDATE = CLDT7_SQL;
 COLUMN STRATEGY TYPE=STRING LABEL = "Type and Strategy"; STRATEGY = TYPE8_SQL;
 COLUMN ACTCOST  TYPE=DOUBLE LABEL = "Actual Cost"   FORMAT=P_MONEY.; ACTCOST = ITDACTCOST9_SQL;
/* COLUMN ACCTG_METHOD TYPE=STRING LABEL = "ToBeDeleted - Accounting Method" ; ACCTG_METHOD  = ACCOUNTING_FORM;
 COLUMN GAAP_BOOKVAL TYPE=DOUBLE LABEL = "ToBeDeleted - GAAPBookValue"   FORMAT=P_MONEY.; GAAP_BOOKVAL = GAAP_BOOKVALUE;
 COLUMN Unreal_STAT TYPE=DOUBLE LABEL = "ToBeDeleted - GL Unrealized Investment Gain/Loss (US STAT)"   FORMAT=P_MONEY.; Unreal_STAT = Unrealized_STAT;
 COLUMN Unrecog_STAT TYPE=DOUBLE LABEL = "ToBeDeleted - GL Unrecognized Earnings"   FORMAT=P_MONEY.; Unrecog_STAT = Unrecognized_STAT;
 COLUMN ELIM_GAAP_VAL TYPE=DOUBLE LABEL = "ToBeDeleted - GL Income - ELIM(GAAP)"   FORMAT=P_MONEY.; ELIM_GAAP_VAL= ELIM_GAAP;
 COLUMN ELIM_BAL_VAL TYPE=DOUBLE LABEL = "ToBeDeleted - GL Income - ELIM(BAL)"   FORMAT=P_MONEY.; ELIM_BAL_VAL= ELIM_BAL;  */
 COLUMN FAIRVAL  TYPE=DOUBLE LABEL = "Fair Value"   FORMAT=P_MONEY.;  FAIRVAL = FAIRVAL10_SQL;
 COLUMN BOOKADJ  TYPE=DOUBLE LABEL = "Book/Adjusted Carrying Value Less Encumbrances"   FORMAT=P_MONEY.; BOOKADJ = BOOKADJ11_SQL;
 COLUMN UNRELVAL  TYPE=DOUBLE LABEL = "Unrealized Valuation Increase (Decrease)"   FORMAT=P_MONEY.; UNRELVAL =UNRELVAL12_SQL;
 COLUMN CYDEPR TYPE=DOUBLE LABEL = "Current Year's (Depreciation) or (Amortization) / Accretion"   FORMAT=P_MONEY.; CYDEPR=CYDEPR13_SQL;
 COLUMN CYOTTI TYPE=DOUBLE LABEL = "Current Year's Other Than Temporary Impairment Recognized"   FORMAT=P_MONEY.;CYOTTI=CYOTTI14_SQL;
 COLUMN CAPDEF TYPE=DOUBLE LABEL = "Capitalized Deferred Interest and Other"   FORMAT=P_MONEY.; CAPDEF = CAPDEF15_SQL;
 COLUMN CHGBKVAL  TYPE=DOUBLE LABEL = "Total Foreign Exchange Change in Book/Adjusted Carrying Value" FORMAT=P_MONEY.; CHGBKVAL=CHGBKVAL16_SQL;
 COLUMN INVINC TYPE=DOUBLE LABEL = "Investment Income"   FORMAT=P_MONEY.; INVINC = INVINC17_SQL;
 COLUMN REMAMT  TYPE=DOUBLE LABEL = "Commitment for Additional Investment"   FORMAT=P_MONEY.;  REMAMT  = REMAININGCOMMITMENT;
 COLUMN PERCOWNER TYPE=DOUBLE LABEL = "Percentage of Ownership" FORMAT=P_PERC_NO_SYMBOL.;  PERCOWNER = PERCOWN19_SQL * STAKE * 100;
 COLUMN FAIRVALHIER  TYPE=DOUBLE LABEL = "Fair Value Hierarchy level and Method Used to Obtain Fair Value Code"   FORMAT=P_MONEY.; FAIRVALHIER = FVHIER20_SQL;
 COLUMN FAIRVALSRC  TYPE=DOUBLE LABEL = "Source Used to Obtain Fair Value"   FORMAT=P_MONEY.; FAIRVALSRC = FVCODE21_SQL;
 COLUMN LEI22  TYPE=DOUBLE LABEL = "LEI"   FORMAT=P_MONEY.;  LEI22  = LEI22_SQL;
 COLUMN ZIP23 TYPE=STRING LABEL = "Post Code";  ZIP23 = ZIP23_SQL;
 COLUMN PROPTYPE  TYPE=STRING LABEL = "Property Type"; PROPTYPE  = PROP24_SQL; 
RUN;

//PROC PRINT DATA=WORK.SCH_BA1; RUN;

PROC SORT DATA = WORK.SCH_BA1; 
    BY STAT FUNDNAME; 
RUN;

DATA LOCAL.tab_SCH_BA1;
    SET WORK.SCH_BA1;
RUN;

//PROC PRINT DATA=WORK.SCH_BA1 LABEL; RUN;

%ELSEIF %Part = 'Part 2' %THEN

DATA WORK.CapInitial;
    SQL "SELECT VCF.IQID, 
        CASE WHEN VCF.USERNUM2 = 0 THEN '000000' END CUSIP1_SQL, 
        CASE WHEN VCF.USERNUM3 = 0 THEN '00' END CUSIP2_SQL, 
        CASE WHEN VCF.USERNUM4 = 0 THEN '0' END CUSIP3_SQL, 
        VCF.USERTEXT13 STAT_SQL, 
      /*  STATLKP.LIBELLE STAT_SQL,*/
        VCF.FUND FUND2_SQL,
    FOTH.REGCITY CITY3_SQL, 
    /*FOTH.REGSTATE STATE4_SQL, */
    VCST.STATECODE STATE4_SQL,
    MGMT.NAME AS  MGMT5_SQL, '' AS NAIC6_SQL, VCF.CLOSINGDATE CLDT7_SQL, '' AS TYPE8_SQL, 
    COALESCE(SUBOP.AMOUNT02,0) + COALESCE(SUBOP.AMOUNT04,0) + COALESCE(SUBOP.AMOUNT08,0) + COALESCE(SUBOP.AMOUNT30,0) 
                   + COALESCE(SUBOP.AMOUNT50,0) + COALESCE(SUBOP.AMOUNT80,0) + COALESCE(SUBOP.AMOUNT60,0) + COALESCE(SUBOP.AMOUNTH2,0) AS ACTCOST9_SQL,    --006
    '' AS ADDAMT10_SQL, '' AS ENCAMT11_SQL, VCF.USERNUM8 AS PERCOWN13_SQL, VCF.USERTEXT12 LEI14_SQL, L3.ZIP ZIP15_SQL,
     CASE VCF.USERTEXT14 WHEN '1' THEN 'OF'          WHEN '2' THEN 'RT'         WHEN '3' THEN 'MU'         WHEN '4' THEN 'IN'         WHEN '5' THEN 'HC'         WHEN '6' THEN 'MX'
         WHEN '7' THEN 'LO'         WHEN '8' THEN 'OT'         END PROP16_SQL,
    SUBSCR.LIBELLE INVESTORNAME
	FROM VCFUND VCF 
    JOIN VCFUNDOP OP ON OP.FUND = VCF.IQID 
    JOIN VCSUBSCRFUNDOPSHARE SUBOP ON SUBOP.FUNDOP = OP.IQID AND SUBOP.FUNDOP IS NOT NULL
    JOIN VCSUBSCRIBER SUBSCR ON SUBSCR.IQID = SUBOP.SUBSCRIBER AND SUBSCR.LIBELLE = '" & %Legal_Entity & "'
    LEFT JOIN VCFUNDOTHER FOTH ON FOTH.FUND = VCF.IQID
    LEFT JOIN VCSTATE VCST ON (LTRIM(RTRIM(FOTH.REGSTATE)) = LTRIM(RTRIM(VCST.DESCRIPTION)) OR LTRIM(RTRIM(FOTH.REGSTATE)) = LTRIM(RTRIM(VCST.CODE))) AND VCST.FILTER NOT LIKE '00000%'
    LEFT JOIN VCINVESTMENT L1 ON VCF.IQID=L1.FUND AND L1.IQDELETED=0
    LEFT JOIN SFAACCOUNT R2 ON R2.IQID=L1.ACCOUNT AND R2.IQDELETED=0  
    LEFT JOIN SFASITE L3 ON R2.IQID=L3.ACCOUNT_ID AND L3.IQDELETED=0
    LEFT JOIN SFAACCOUNT MGMT ON MGMT.IQID=VCF.ACCOUNT AND MGMT.IQDELETED=0 
/*    LEFT JOIN SFAPRODCATEGORY03 STATLKP ON STATLKP.CODE = VCF.USERTEXT13*/
    WHERE 
         VCF.IQDELETED=0 AND OP.IQDELETED=0 AND OP.DRAFT=0 AND SUBOP.IQDELETED=0 AND SUBSCR.IQDELETED=0 AND
         OP.CLOSEDATE BETWEEN " & DML(%Start_Date) & " AND " & DML(%Date) & " AND
         ( COALESCE(SUBOP.AMOUNT02,0) <> 0  OR COALESCE(SUBOP.AMOUNT04,0) <> 0 OR COALESCE(SUBOP.AMOUNT08,0) <> 0
          OR COALESCE(SUBOP.AMOUNT30,0) <> 0 OR COALESCE(SUBOP.AMOUNT50,0) <> 0 OR COALESCE(SUBOP.AMOUNT80,0) <> 0 
          OR COALESCE(SUBOP.AMOUNT60,0) <> 0 ) OR COALESCE(SUBOP.AMOUNTH2,0) <> 0     --006
          AND OP.CLOSEDATE = (SELECT MIN(OP1.CLOSEDATE) FROM VCFUNDOP OP1 
                                 JOIN VCSUBSCRFUNDOPSHARE SUBOP1 ON SUBOP1.FUNDOP = OP1.IQID AND SUBOP1.SUBSCRIBER = SUBSCR.IQID
                                 WHERE OP1.FUND=OP.FUND AND ( COALESCE(SUBOP1.AMOUNT02,0) <> 0  OR COALESCE(SUBOP1.AMOUNT04,0) <> 0 OR COALESCE(SUBOP1.AMOUNT08,0) <> 0
                                        OR COALESCE(SUBOP1.AMOUNT30,0) <> 0 OR COALESCE(SUBOP1.AMOUNT50,0) <> 0 OR COALESCE(SUBOP1.AMOUNT80,0) <> 0 OR COALESCE(SUBOP1.AMOUNT60,0) <> 0 ) OR COALESCE(SUBOP.AMOUNTH2,0) <> 0)    --006 
         AND (OP.Cancelled = 0 OR OP.Cancelled IS NULL)        --002
    ORDER BY 1" ; 
    COLUMN FUND_ID;
RUN;
//PROC PRINT DATA=WORK.CapInitial; RUN;

DATA WORK.CapAdd;
    SQL "SELECT VCF.IQID,
    CASE WHEN MIN(VCF.USERNUM2) = 0 THEN '000000' END CUSIP1_SQL, 
        CASE WHEN MIN(VCF.USERNUM2) = 0 THEN '00' END CUSIP2_SQL, 
        CASE WHEN MIN(VCF.USERNUM3)= 0 THEN '0' END CUSIP3_SQL,
         MIN(VCF.USERTEXT13) STAT_SQL, 
       /* MIN(STATLKP.LIBELLE) STAT_SQL, */
        MIN(VCF.FUND) FUND2_SQL, 
    MIN(FOTH.REGCITY) CITY3_SQL, 
    /*MIN(FOTH.REGSTATE) STATE4_SQL,*/ 
    MIN(VCST.STATECODE) STATE4_SQL, MIN(MGMT.NAME) AS  MGMT5_SQL, '' AS NAIC6_SQL, MIN(VCF.CLOSINGDATE) CLDT7_SQL, '' AS TYPE8_SQL, 
    '' AS ACTCOST9_SQL,
    SUM(COALESCE(SUBOP.AMOUNT02,0) + COALESCE(SUBOP.AMOUNT04,0) + COALESCE(SUBOP.AMOUNT08,0) + 
               COALESCE(SUBOP.AMOUNT30,0) + COALESCE(SUBOP.AMOUNT50,0) + COALESCE(SUBOP.AMOUNT80,0) + COALESCE(SUBOP.AMOUNT60,0) + COALESCE(SUBOP.AMOUNTH2,0))  AS ADDAMT10_SQL,    --006
    '' AS ENCAMT11_SQL, MIN(VCF.USERNUM8) AS PERCOWN13_SQL, MIN(VCF.USERTEXT12) LEI14_SQL, MIN(L3.ZIP) ZIP15_SQL,
     CASE MIN(VCF.USERTEXT14) WHEN '1' THEN 'OF'          WHEN '2' THEN 'RT'         WHEN '3' THEN 'MU'         WHEN '4' THEN 'IN'         WHEN '5' THEN 'HC'         WHEN '6' THEN 'MX'
         WHEN '7' THEN 'LO'         WHEN '8' THEN 'OT'         END PROP16_SQL,
     MIN(SUBSCR.LIBELLE) INVESTORNAME
	     FROM VCFUND VCF 
         JOIN VCFUNDOP OP ON OP.FUND = VCF.IQID
         JOIN VCSUBSCRFUNDOPSHARE SUBOP ON SUBOP.FUNDOP = OP.IQID AND SUBOP.FUNDOP IS NOT NULL
         JOIN VCSUBSCRIBER SUBSCR ON SUBSCR.IQID = SUBOP.SUBSCRIBER AND SUBSCR.LIBELLE = '" & %Legal_Entity & "'
         LEFT JOIN VCFUNDOTHER FOTH ON FOTH.FUND = VCF.IQID
         LEFT JOIN VCSTATE VCST ON (LTRIM(RTRIM(FOTH.REGSTATE)) = LTRIM(RTRIM(VCST.DESCRIPTION)) OR LTRIM(RTRIM(FOTH.REGSTATE)) = LTRIM(RTRIM(VCST.CODE))) AND VCST.FILTER NOT LIKE '00000%'
         LEFT JOIN VCINVESTMENT L1 ON VCF.IQID=L1.FUND AND L1.IQDELETED=0
         LEFT JOIN SFAACCOUNT R2 ON R2.IQID=L1.ACCOUNT AND R2.IQDELETED=0  
         LEFT JOIN SFASITE L3 ON R2.IQID=L3.ACCOUNT_ID AND L3.IQDELETED=0
         LEFT JOIN SFAACCOUNT MGMT ON MGMT.IQID=VCF.ACCOUNT AND MGMT.IQDELETED=0 
/*         LEFT JOIN SFAPRODCATEGORY03 STATLKP ON STATLKP.CODE = VCF.USERTEXT13 */
         WHERE 
         VCF.IQDELETED=0 AND OP.IQDELETED=0 AND OP.DRAFT=0 AND SUBOP.IQDELETED=0 AND
         OP.CLOSEDATE BETWEEN " & DML(%Start_Date) & " AND " & DML(%Date) & "  AND 
         ( COALESCE(SUBOP.AMOUNT02,0) <> 0  OR COALESCE(SUBOP.AMOUNT04,0) <> 0 OR COALESCE(SUBOP.AMOUNT08,0) <> 0
                OR COALESCE(SUBOP.AMOUNT30,0) <> 0 OR COALESCE(SUBOP.AMOUNT50,0) <> 0 OR COALESCE(SUBOP.AMOUNT80,0) <> 0
                OR COALESCE(SUBOP.AMOUNT60,0) <> 0 OR COALESCE(SUBOP.AMOUNTH2,0) <> 0 )    --006
                AND OP.CLOSEDATE > (SELECT MIN(OP1.CLOSEDATE) FROM VCFUNDOP OP1 
                                    JOIN VCSUBSCRFUNDOPSHARE SUBOP1 ON SUBOP1.FUNDOP = OP1.IQID AND SUBOP1.SUBSCRIBER = SUBSCR.IQID
                                        WHERE OP1.FUND=OP.FUND AND ( COALESCE(SUBOP1.AMOUNT02,0) <> 0  OR COALESCE(SUBOP1.AMOUNT04,0) <> 0 OR COALESCE(SUBOP1.AMOUNT08,0) <> 0
                                        OR COALESCE(SUBOP1.AMOUNT30,0) <> 0 OR COALESCE(SUBOP1.AMOUNT50,0) <> 0 OR COALESCE(SUBOP1.AMOUNT80,0) <> 0
                                        OR COALESCE(SUBOP1.AMOUNT60,0) <> 0 ) OR COALESCE(SUBOP.AMOUNTH2,0) <> 0)    --006
         AND (OP.Cancelled = 0 OR OP.Cancelled IS NULL)        --002
        GROUP BY VCF.IQID                                         
          ORDER BY 1  " ; 
    COLUMN FUND_ID;
RUN;
//PROC PRINT DATA=WORK.CapAdd; RUN;

DATA WORK.SCH_BA2;
    SET WORK.CapInitial WORK.CapAdd;
RUN;
//PROC PRINT DATA=WORK.SCH_BA2; RUN;

DATA WORK.tmp1 (KEEP = FUND_ID INVESTORNAME REMAININGCOMMITMENT STAKE);
    SET FCE.FUNDINVESTORPOSITIONS(WHERE POSITION_DATE=%Date) ;
RUN;

/*0815
DATA WORK.tmp1 (KEEP = FUND_ID REMAININGCOMMITMENT );
SET FCE.FUNDPOSITIONS(WHERE POSITION_DATE=%Date) ;
RUN;  
0815 */
//PROC PRINT DATA=WORK.tmp1; RUN; 
                                                                                                                                                                                    
DATA WORK.SCH_BA2;
    MERGE WORK.SCH_BA2(IN=IN1) WORK.tmp1(IN=IN2);
    //By FUND_ID;
    BY FUND_ID INVESTORNAME;
    If (IN1 and IN2) then Output;
    End;
RUN;     
//PROC PRINT DATA=WORK.SCH_BA2; RUN; 

//PROC PRINT DATA=WORK.CapAdd; RUN;
//PROC FORMAT; PICTURE P_Money LOW-HIGH = '0,000.00'; RUN;
//PROC FORMAT; PICTURE P_PERC LOW-HIGH = '0.00%'; RUN;

DATA WORK.SCH_BA2(DROP = FUND_ID STAT_SQL CUSIP1_SQL CUSIP2_SQL CUSIP3_SQL FUND2_SQL INITIALAMT_SQL CITY3_SQL STATE4_SQL MGMT5_SQL NAIC6_SQL
                            CLDT7_SQL TYPE8_SQL ACTCOST9_SQL ADDAMT10_SQL ENCAMT11_SQL REMAININGCOMMITMENT PERCOWN13_SQL LEI14_SQL ZIP15_SQL PROP16_SQL INVESTORNAME STAKE);
    SET WORK.SCH_BA2;
    COLUMN STAT TYPE=STRING LABEL = "STAT Classification"; STAT = STAT_SQL ;
    COLUMN CUSIP1 TYPE=STRING LABEL = "Cusip1"; CUSIP1 = CUSIP1_SQL ;
    COLUMN CUSIP2 TYPE=STRING LABEL = "Cusip2"; CUSIP2 = CUSIP2_SQL ;
    COLUMN CUSIP3 TYPE=STRING LABEL = "Cusip3"; CUSIP3 = CUSIP3_SQL ;
    COLUMN FundName TYPE=STRING LABEL = "Name or Description" WIDTH =300; FundName = FUND2_SQL ;
    COLUMN CITY TYPE=STRING LABEL = "City"; CITY = UCASE(CITY3_SQL);
    COLUMN STATE TYPE=STRING LABEL = "State"; STATE = STATE4_SQL;
    COLUMN MGMT TYPE=STRING LABEL = "Name of Vendor or General Partner" WIDTH =250; MGMT = UCASE(MGMT5_SQL);
    COLUMN NAIC TYPE=STRING LABEL = "NAIC Designation"; NAIC = NAIC6_SQL;
    COLUMN CLOSEDATE TYPE=DATE LABEL = "Date Originally Acquired" ; CLOSEDATE = CLDT7_SQL;
    COLUMN STRATEGY TYPE=STRING LABEL = "Type and Strategy"; STRATEGY = TYPE8_SQL;
    COLUMN IntialAmt  TYPE=DOUBLE LABEL = "Actual Cost at Time of Acquisition"   FORMAT=P_MONEY.;  IntialAmt = ACTCOST9_SQL;
    COLUMN AddAmt  TYPE=DOUBLE LABEL = "Additional Investment Made After Acquisition"   FORMAT=P_MONEY.;  AddAmt  = ADDAMT10_SQL;
    COLUMN ENCAMT TYPE=STRING LABEL = "Amount of Encumbrances";  ENCAMT = ENCAMT11_SQL;
    COLUMN RemAmt  TYPE=DOUBLE LABEL = "Commitment for Additional Investment"   FORMAT=P_MONEY.;  RemAmt  = REMAININGCOMMITMENT;
    COLUMN PERCOWN TYPE=DOUBLE LABEL = "Percentage of Ownership" FORMAT=P_PERC_NO_SYMBOL.; PERCOWN = PERCOWN13_SQL * STAKE * 100;
    COLUMN LEI  TYPE=DOUBLE LABEL = "LEI"   FORMAT=P_MONEY.;  LEI  = LEI14_SQL;
    COLUMN ZIP TYPE=STRING LABEL = "Post Code" ;  ZIP  =ZIP15_SQL;
    COLUMN PROP  TYPE=STRING LABEL = "Property Type" ;  PROP  = PROP16_SQL; 
RUN;

//PROC PRINT DATA=WORK.SCH_BA2; RUN;

PROC SORT DATA = WORK.SCH_BA2; 
    BY STAT FUNDNAME; 
RUN;

//Aggregate by Fund and date, this will remove the duplicates
//brand new fund, initial funding, and then additional fundings afterwards, it's different line items.
//	one is in the actrual cost and other is additional investment, if one is blank for the other, condence it.
//	aggregate them by Fund and date of original aquisition...
PROC MEANS DATA = WORK.SCH_BA2;
    CLASS FUNDNAME CLOSEDATE;
    FIRST STAT (NAME=STAT);
    FIRST CUSIP1 (NAME=CUSIP1);
    FIRST CUSIP2 (NAME=CUSIP2);
    FIRST CUSIP3 (NAME=CUSIP3);
    FIRST CITY (NAME=CITY);
    FIRST STATE (NAME=STATE);
    FIRST MGMT (NAME=MGMT);
    FIRST NAIC (NAME=NAIC);
    FIRST STRATEGY (NAME=STRATEGY);
    SUM IntialAmt (NAME=IntialAmt);
    SUM AddAmt (NAME=AddAmt);
    FIRST ENCAMT (NAME=ENCAMT);
    FIRST RemAmt (NAME=RemAmt);
    FIRST PERCOWN (NAME=PERCOWN);
    FIRST LEI (NAME=LEI);
    FIRST ZIP (NAME=ZIP);
    FIRST PROP (NAME=PROP);
RUN;
 
//filter out any records where Actual Cost at Time of Acquisition and Additional Investment Made After Acquisition are 0
DATA LOCAL.tab_SCH_BA2 (WHERE IntialAmt <> 0 AND AddAmt <> 0);
    SET WORK.SCH_BA2;
RUN;

//PROC PRINT DATA=WORK.SCH_BA2 LABEL; RUN;

%ELSEIF %Part = 'Part 3' %THEN

//001 begin
%let PriorQuarterDate = DATEADD("MONTH",-3,%Date);
%let PriorQuarterBegDate = QUARTERBEGDATE(%PriorQuarterDate);
%let PriorQuarterEndDate = QUARTERENDDATE(%PriorQuarterDate);
%let StartYearDate = YEARBEGDATE(%Date);       //004
//%let EndYearDate = YEARENDDATE(%Date);         //004
//PROC PRINT; PUT DML(%PriorQuarterDate); RUN;
//PROC PRINT; PUT DML(%PriorQuarterBegDate); RUN;
//PROC PRINT; PUT DML(%PriorQuarterEndDate); RUN;
//PROC PRINT; PUT DML(%StartYearDate); RUN;    //004
//PROC PRINT; PUT DML(%EndYearDate); RUN;      //004
//001 end

/*
Qtrly inc analysis > Alloc: Fund.GL Return of Capital (US STAT) = Amount 97
Equity inc analysis > GL Equity Distribution = IF(ISEMPTY(SUP); 0.00; -SUP) = SUP is Amount77
Equity inc analysis > GL Income (US STAT)  Amount96
*/
//VCF.USERNUM2 + '-' + VCF.USERNUM3 + '-' + VCF.USERNUM4 CUSIP_SQL, 
//CASE WHEN 1=1 THEN 0 ELSE 0 END AS VAL9_SQL, 
/*
DATA WORK.DISTINC;
    SQL "SELECT  VCF.IQID , 
    CASE WHEN MIN(VCF.USERNUM2) = 0 THEN '000000' END CUSIP1_SQL, 
    CASE WHEN MIN(VCF.USERNUM3) = 0 THEN '00' END CUSIP2_SQL, 
    CASE WHEN MIN(VCF.USERNUM4) = 0 THEN '0' END CUSIP3_SQL, 
    MIN(VCF.USERTEXT13) STAT_SQL, 
    MIN(VCF.FUND) FUND_SQL, MIN(FOTH.REGCITY) CITY_SQL, 
    MIN(VCST.STATECODE) STATE_SQL,
    'Distribution' COL5_SQL,
    MIN(VCF.CLOSINGDATE) CLDT6_SQL,
    MIN(VCF.USERTEXT3) BASIS_SQL, MAX(OP.CLOSEDATE) CLOSEDATE_SQL, 
    CASE WHEN MIN(VCF.USERTEXT3) ='EQUITY' THEN SUM((COALESCE(SUBOP.AMOUNT77,0)*(-1)) - COALESCE(SUBOP.AMOUNT96,0) )
            ELSE SUM(COALESCE(SUBOP.AMOUNT97,0)*(-1)) END DISTAMT_SQL,
     CONVERT(DECIMAL(10,0),'0') AS VAL9_SQL,
    '' COL10_SQL,'' IMPAMT11_SQL, '' COL12_SQL, '' COL13_SQL, '' REALFX14_SQL, 
     SUM(COALESCE(SUBOP.AMOUNT95,0)) REALFX17_SQL, SUM(COALESCE(SUBOP.AMOUNTA3,0)) REALGL18_SQL, 
     SUM(COALESCE(SUBOP.AMOUNT95,0) + COALESCE(SUBOP.AMOUNTA3,0))COL19_SQL, '' GLINC20_SQL, MIN(VCF.USERTEXT12) LEI21_SQL,
     MIN(L3.ZIP) ZIP22_SQL,
     CASE MIN(VCF.USERTEXT14)
         WHEN '1' THEN 'OF'
         WHEN '2' THEN 'RT'
         WHEN '3' THEN 'MU'
         WHEN '4' THEN 'IN'
         WHEN '5' THEN 'HC'
         WHEN '6' THEN 'MX'
         WHEN '7' THEN 'LO'
         WHEN '8' THEN 'OT'
         END PROP23_SQL
	     FROM VCFUND VCF 
         JOIN VCFUNDOP OP ON OP.FUND = VCF.IQID
         JOIN VCSUBSCRFUNDOPSHARE SUBOP ON SUBOP.FUNDOP = OP.IQID AND SUBOP.FUNDOP IS NOT NULL 
         JOIN VCSUBSCRIBER SUBSCR ON SUBSCR.IQID = SUBOP.SUBSCRIBER AND SUBSCR.LIBELLE = '" & %Legal_Entity & "'
         JOIN VCFUNDOPTYPE OPT ON OP.OTYPE = OPT.CODE AND OPT.DESCR IN ('IF: Quarterly Income Analysis','IF: Equity Income Analysis') 
          LEFT JOIN VCFUNDOTHER FOTH ON FOTH.FUND = VCF.IQID
         LEFT JOIN VCSTATE VCST ON (LTRIM(RTRIM(FOTH.REGSTATE)) = LTRIM(RTRIM(VCST.DESCRIPTION)) OR LTRIM(RTRIM(FOTH.REGSTATE)) = LTRIM(RTRIM(VCST.CODE))) AND VCST.FILTER NOT LIKE '00000%'
         LEFT JOIN VCINVESTMENT L1 ON VCF.IQID=L1.FUND AND L1.IQDELETED=0
         LEFT JOIN SFAACCOUNT R2 ON R2.IQID=L1.ACCOUNT AND R2.IQDELETED=0  
         LEFT JOIN SFASITE L3 ON R2.IQID=L3.ACCOUNT_ID AND L3.IQDELETED=0
         LEFT JOIN SFAPRODCATEGORY03 STATLKP ON STATLKP.CODE = VCF.USERTEXT13
         WHERE 
         VCF.IQDELETED=0 AND OP.IQDELETED=0 AND OP.DRAFT=0 AND SUBOP.IQDELETED=0 AND
         OP.CLOSEDATE BETWEEN " & DML(%Start_Date) & " AND " & DML(%Date) & "  
         AND ( COALESCE(SUBOP.AMOUNT77,0) <> CASE WHEN VCF.USERTEXT3 = 'EQUITY' THEN 0 END 
                 OR COALESCE(SUBOP.AMOUNT97,0) <> CASE WHEN VCF.USERTEXT3 = 'COST' THEN  0  END)
         GROUP BY VCF.IQID " ; 
    COLUMN IQID;
RUN;
*/
//PROC PRINT DATA= WORK.DISTINC; RUN;

//IF: Liquidation (Cost) > GL Cost (US STAT) > Amount81
//IF: Liquidation (Cost) > GL Unrecognized Earnings > Amount79
//IF: Liquidation (Cost) > GL Unrealized Investment Gain/Loss (US STAT) > Amount99
//IF: Impairment (Cost) > Value Depreciation > AmountC8

DATA WORK.DISTDISP;
    SQL "SELECT  
        VCF.IQID, 
        CASE WHEN MIN(VCF.USERNUM2) = 0 THEN '000000' END CUSIP1_SQL, 
        CASE WHEN MIN(VCF.USERNUM3) = 0 THEN '00' END CUSIP2_SQL, 
        CASE WHEN MIN(VCF.USERNUM4) = 0 THEN '0' END CUSIP3_SQL,
        MIN(VCF.USERTEXT13) STAT_SQL,
       /* STATLKP.LIBELLE STAT_SQL, */
        MIN(VCF.FUND) FUND_SQL, 
        MIN(UNRLZ.STAT_DISPCOST) STAT_DISPCOST,
        MIN(UNRLZ.STAT_DISPCOST_ENDING_PRIOR_YEAR) as STAT_DISPCOST_ENDING_PRIOR_YEAR,
        MIN(COALESCE(SUBOP.AMOUNT77,0)) AMOUNT77,
        MIN(COALESCE(SUBOP.AMOUNT97,0)) AMOUNT97,
        MIN(COALESCE(SUBOP.AMOUNT81,0)) AMOUNT81,
        SUM(COALESCE(SUBOP.AMOUNT81,0)) AMOUNT81_SUM,
        
        MIN(FOTH.REGCITY) CITY_SQL, 
       /* FOTH.REGSTATE STATE_SQL,*/
        MIN(VCST.STATECODE) STATE_SQL,
        'Distribution' COL5_SQL,
        MIN(VCF.CLOSINGDATE) CLDT6_SQL,
        MIN(VCF.USERTEXT3) BASIS_SQL, 
        MAX(OP.CLOSEDATE) CLOSEDATE_SQL, 
/*        CASE WHEN OPT.DESCR IN ('IF: Liquidation (Cost)','IF: Liquidation (Equity)')  
             THEN COALESCE(SUBOP.AMOUNT81,0)*(-1) + COALESCE(SUBOP.AMOUNT96,0)
             ELSE COALESCE(SUBOP.AMOUNT81,0)*(-1) END  DISTAMT_SQL, */
        /*
        CASE 
            --WHEN MIN(UNRLZ.STAT_DISPCOST)=0 THEN SUM(COALESCE(SUBOP.AMOUNT81,0)*(-1))     
            WHEN MIN(UNRLZ.STAT_DISPCOST)=0 THEN SUM(COALESCE(UNRLZ.STAT_DISPCOST_ENDING_PRIOR_YEAR,0))    --001
        ELSE
            CASE WHEN MIN(VCF.USERTEXT3) ='EQUITY' or MIN(VCF.USERTEXT3) ='FV' THEN SUM((COALESCE(SUBOP.AMOUNT77,0)*(-1)) - COALESCE(SUBOP.AMOUNT96,0) )     --001 added FV
            ELSE SUM(COALESCE(SUBOP.AMOUNT97,0)*(-1)) END 
         END  DISTAMT_SQL,
        */    --002
        CASE 
            --WHEN MIN(UNRLZ.STAT_DISPCOST)=0 THEN SUM(COALESCE(SUBOP.AMOUNT81,0)*(-1))     
            WHEN MIN(UNRLZ.STAT_DISPCOST)=0 THEN MIN(COALESCE(UNRLZ.STAT_DISPCOST_ENDING_PRIOR_YEAR,0))    --001    --005 changed to MIN
        ELSE
            CASE WHEN MIN(VCF.USERTEXT3) ='EQUITY' or MIN(VCF.USERTEXT3) ='FV' THEN SUM((COALESCE(SUBOP.AMOUNT77,0)*(-1)) - COALESCE(SUBOP.AMOUNT96,0) )     --001 added FV
            ELSE SUM(COALESCE(SUBOP.AMOUNT97,0)*(-1)) + MIN(UNRLZ.HBTGLCost)*(-1) END     --002
         END  DISTAMT_SQL,

        CASE WHEN MIN(UNRLZ.STAT_DISPCOST)=0 THEN MIN(UNRLZ.VAL9) ELSE 0 END AS VAL9_SQL, 
 
        '' COL10_SQL, 
        CASE WHEN MIN(UNRLZ.STAT_DISPCOST)=0 THEN SUM(COALESCE(SUBOP.AMOUNTC8,0)) ELSE 0 END AS  IMPAMT11_SQL, 
        '' COL12_SQL,
        CASE WHEN MIN(UNRLZ.STAT_DISPCOST)=0 THEN MIN(UNRLZ.VAL9) + SUM(COALESCE(SUBOP.AMOUNTC8,0)) ELSE 0 END AS COL13_SQL,
         
        CASE WHEN MIN(UNRLZ.STAT_DISPCOST)=0 THEN SUM(COALESCE(SUBOP.AMOUNT95,0))  ELSE 0 END  REALFX14_SQL,  
         
         
        SUM( COALESCE(SUBOP.AMOUNT95,0)) REALFX17_SQL, 
           
        SUM(COALESCE(SUBOP.AMOUNTA3,0)) REALGL18_SQL,
        SUM( COALESCE(SUBOP.AMOUNT95,0) + COALESCE(SUBOP.AMOUNTA3,0)) COL19_SQL, 
        CASE WHEN MIN(UNRLZ.STAT_DISPCOST)=0 THEN SUM(COALESCE(SUBOP.AMOUNT96,0)) ELSE 0 END GLINC20_SQL, 
         
        MIN(VCF.USERTEXT12) LEI21_SQL, 
        MIN(L3.ZIP )ZIP22_SQL,
        CASE MIN(VCF.USERTEXT14)
         WHEN '1' THEN 'OF'
         WHEN '2' THEN 'RT'
         WHEN '3' THEN 'MU'
         WHEN '4' THEN 'IN'
         WHEN '5' THEN 'HC'
         WHEN '6' THEN 'MX'
         WHEN '7' THEN 'LO'
         WHEN '8' THEN 'OT'
        END PROP23_SQL,
        
        --001 begin
        MAX(UNRLZ.LiqFund) as LiqFund,    
        CASE WHEN MAX(UNRLZ.LiqFund) = '1' then MIN(UNRLZ.LiqFundSuspense)*(-1) ELSE 0 END as LiqFundSuspense,    
        CASE WHEN MIN(UNRLZ.STAT_DISPCOST)=0 THEN MIN(UNRLZ.CurrQuarterInvIncAmt) ELSE 0 END as CurrInvInc,       --002 changed from SUM to MIN
        CASE WHEN MIN(UNRLZ.STAT_DISPCOST)=0 THEN MIN(UNRLZ.PriorQuarterInvIncAmt) ELSE 0 END as PriorInvInc,     --002 changed from SUM to MIN
        --001 end
        MIN(UNRLZ.FirstLiqDt) as FirstLiqDt,    --002
        MAX(CASE WHEN UNRLZ.FirstLiqDt >= " & DML(%Start_Date) & " AND UNRLZ.FirstLiqDt <= " & DML(%Date) & " THEN 1 ELSE 0 END) as FistLiqInCurrPeriod    --002
        
	FROM VCFUND VCF 
    JOIN VCFUNDOP OP ON OP.FUND = VCF.IQID
    JOIN VCSUBSCRFUNDOPSHARE SUBOP ON SUBOP.FUNDOP = OP.IQID AND SUBOP.FUNDOP IS NOT NULL 
    JOIN VCSUBSCRIBER SUBSCR ON SUBSCR.IQID = SUBOP.SUBSCRIBER AND SUBSCR.LIBELLE = '" & %Legal_Entity & "'
    JOIN VCFUNDOPTYPE OPT 
       ON OP.OTYPE = OPT.CODE 
       AND OPT.CODE IN (-286,-284,-278,-277,282,301,280,-305,302,307,308,309)  -- DD 2018_02_28 Replaced Descriptions with Code ITM0257434, 04/23/2018 added code 280 to section 3    
                                                        --001 added 305 and 302
                                                        --002 adding Correcting HBTs 
                                                        --003
             
    LEFT JOIN ( 
    
        SELECT 
            VCF.IQID IQID, 
            SUM(COALESCE(SUBOP.AMOUNT81,0) )STAT_DISPCOST,
            SUM(CASE WHEN OP.CLOSEDATE <= CONVERT( DATETIME, '12/31/' + CONVERT(varchar(4),DATEPART(year,DATEADD(year,-1," & DML(%Date) & "))) , 101)
                 THEN COALESCE(SUBOP.AMOUNT81 ,0) ELSE 0 END) as STAT_DISPCOST_ENDING_PRIOR_YEAR,    --001
/*    

    COALESCE(SUBOP.AMOUNT99 * (-1),0) UNRLZ99_ITD, COALESCE(SUBOP.AMOUNT79*(-1),0) UNREC79_ITD, 
		CASE WHEN OP.CLOSEDATE <= DATEADD(year,-1," & DML(%Date) & ") THEN COALESCE(SUBOP.AMOUNT99 * (-1),0) ELSE 0 END AS UNRLZ99_PYITD,
		CASE WHEN OP.CLOSEDATE <= DATEADD(year,-1," & DML(%Date) & ") THEN COALESCE(SUBOP.AMOUNT79 * (-1),0) ELSE 0 END AS UNREC79_PYITD, */
        
         (SUM(COALESCE(SUBOP.AMOUNT99 ,0)) + SUM(COALESCE(SUBOP.AMOUNT79 ,0))) -  
           
         (SUM(CASE WHEN OP.CLOSEDATE <= CONVERT( DATETIME, '12/31/' + CONVERT(varchar(4),DATEPART(year,DATEADD(year,-1," & DML(%Date) & "))) , 101)
                 THEN COALESCE(SUBOP.AMOUNT99 ,0) ELSE 0 END) + 
          SUM(CASE WHEN OP.CLOSEDATE <= CONVERT( DATETIME, '12/31/' + CONVERT(varchar(4),DATEPART(year,DATEADD(year,-1," & DML(%Date) & "))) , 101)
                  THEN COALESCE(SUBOP.AMOUNT79 ,0) ELSE 0 END))  VAL9,
         
         --001 begin
         MAX(CASE WHEN OPT.DESCR LIKE '%Liquidation%' THEN 1 ELSE 0 END) as LiqFund,       
         SUM(CASE WHEN OP.CLOSEDATE >= " & DML(%PriorQuarterBegDate) & " AND OP.CLOSEDATE <= " & DML(%PriorQuarterEndDate) & " AND OP.OType IN ('280','282','302')
             THEN COALESCE(SUBOP.AMOUNT77,0) ELSE 0 END) as LiqFundSuspense,
         SUM(CASE WHEN OP.CLOSEDATE >= " & DML(%Start_Date) & " AND OP.CLOSEDATE <= " & DML(%Date) & "
             THEN COALESCE(InvInc.Amount,0) ELSE 0 END) as CurrQuarterInvIncAmt,
         SUM(CASE WHEN OP.CLOSEDATE >= " & DML(%PriorQuarterBegDate) & " AND OP.CLOSEDATE <= " & DML(%PriorQuarterEndDate) & " AND OP.OType IN ('280','282','302')
             THEN COALESCE(InvInc.Amount,0) ELSE 0 END) as PriorQuarterInvIncAmt,             
         --001 end
         MIN(CASE WHEN OPT.DESCR LIKE '%Liquidation%' THEN OP.CLOSEDATE ELSE NULL END) as FirstLiqDt,    --002
         SUM(CASE WHEN OP.CLOSEDATE >= " & DML(%Start_Date) & " AND OP.CLOSEDATE <= " & DML(%Date) & " AND OP.OType IN ('301','307','308','309')    --003 added 309
             THEN COALESCE(SUBOP.Amount81,0) ELSE 0 END) as HBTGLCost    --002
	FROM VCFUND VCF 
	JOIN VCFUNDOP OP ON OP.FUND = VCF.IQID 
	JOIN VCFUNDOPTYPE OPT ON OP.OTYPE = OPT.CODE 
	JOIN VCSUBSCRFUNDOPSHARE SUBOP ON SUBOP.FUNDOP = OP.IQID AND SUBOP.FUNDOP IS NOT NULL
	JOIN VCSUBSCRIBER SUBSCR ON SUBSCR.IQID = SUBOP.SUBSCRIBER AND SUBSCR.LIBELLE = '" & %Legal_Entity & "'
    
    
    --001 begin
    --calculating investment income using trial balance from specfic income accounts
    LEFT JOIN
            (
            SELECT
                 VCF2.Fund
                ,VCFOP.IQID as OpIQID
                ,VCFOP.CloseDate
                ,VCFOP.OType
                ,GLEnt.Amount
                ,GLEnt.ShortDescr
                ,GLAcct.AccountNo
                ,AcctType.Code
                ,AcctType.Description
            FROM VCFUND VCF2
            JOIN VCFUNDOP VCFOP
                ON VCF2.IQID = VCFOP.Fund
                AND VCFOP.IQDeleted = 0
                AND (VCFOP.Cancelled = 0 or VCFOP.Cancelled IS NULL)
            JOIN GLENTRYGROUP GLGroup
                ON VCFOP.IQID = GLGroup.FundOp
                AND GLGroup.IQDeleted = 0
            JOIN GLENTRY GLEnt
                ON GLGroup.IQID = GLEnt.EntryGroup
                AND GLEnt.IQDeleted = 0
            JOIN GLJournal GLJ
                ON GLJ.IQID = GLEnt.Journal
                AND GLJ.IQID = GLGroup.Journal
                AND GLJ.IQDeleted = 0
                AND GLJ.Name LIKE '%STAT%'
            JOIN GLACCOUNT GLAcct
                ON GLEnt.Account = GLAcct.IQID
                AND GLAcct.IQDeleted = 0
            JOIN
                (
                SELECT 
                     GLA.AccountNo
                    ,GLAC.Code
                    ,GLAC.Description
                FROM GLStdAccount GLA
                JOIN GLRelAccountValue GLR 
                    ON GLR.Account = GLA.IQID
                    AND GLR.IQDeleted = 0
                JOIN GLAccountCharacValue GLAC 
                    ON GLAC.IQID = GLR.AccountCharacValue
                    AND GLAC.AccountCharac = 'MDMACCSDC'
                    AND GLAC.IQDeleted = 0
                JOIN GLStdChart GLCH 
                    ON GLCH.IQID = GLA.StdChart
                    AND (GLCH.Name LIKE '%GAAP' or GLCH.Name LIKE '%STAT')
                    AND GLCH.IQDeleted = 0
                WHERE GLA.IQDeleted=0
                AND GLAC.Code = 'INVINC'
                AND GLA.StdChart = '00B337582C7B4BC1BA7B5A4B34D49078'    --STAT
                --ORDER BY GLA.AccountNo
                )AcctType
            ON AcctType.AccountNo = GLAcct.AccountNo
        WHERE GLAcct.AccountNo IN ('600006','600252','600156')
        AND VCF2.IQDeleted = 0
        GROUP BY 
             VCF2.Fund
            ,VCFOP.IQID
            ,VCFOP.CloseDate
            ,VCFOP.OType
            ,GLEnt.Amount
            ,GLEnt.ShortDescr
            ,GLAcct.AccountNo
            ,AcctType.Code
            ,AcctType.Description
        )InvInc
        ON InvInc.Fund = VCF.Fund
        AND InvInc.OpIQID = OP.IQID
    --001 end    
    
    
    
    WHERE 
    VCF.IQDELETED=0 AND OP.IQDELETED=0 AND OP.DRAFT=0 AND SUBOP.IQDELETED=0 AND SUBSCR.IQDELETED=0 AND 
    OP.CLOSEDATE <= " & DML(%Date) & " 
    GROUP BY   VCF.IQID 
    )  UNRLZ   ON  UNRLZ.IQID =   VCF.IQID      
           
/*    JOIN (SELECT  VCF1.IQID IQID1, SUM(COALESCE(SUBOP.AMOUNT79,0)) + SUM(COALESCE(SUBOP.AMOUNT99,0)) VAL9 , SUM(COALESCE(SUBOP.AMOUNTC8,0)) IMPAMT
	         FROM VCFUND VCF1 
            JOIN VCFUNDOP OP ON OP.FUND = VCF1.IQID
            JOIN VCSUBSCRFUNDOPSHARE SUBOP ON SUBOP.FUNDOP = OP.IQID 
            JOIN VCSUBSCRIBER SUBSCR ON SUBSCR.IQID = SUBOP.SUBSCRIBER AND SUBSCR.LIBELLE = '" & %Legal_Entity & "'
            WHERE VCF1.IQDELETED=0 AND OP.IQDELETED=0 AND SUBOP.IQDELETED=0         
                     AND DATEPART(YYYY,OP.CLOSEDATE) = YEAR("& DML(%DATE) &")
             GROUP BY   VCF1.IQID ) TOTDISP  ON TOTDISP.IQID1 = VCF.IQID   */  
    LEFT JOIN VCFUNDOTHER FOTH ON FOTH.FUND = VCF.IQID 
    LEFT JOIN VCSTATE VCST ON (LTRIM(RTRIM(FOTH.REGSTATE)) = LTRIM(RTRIM(VCST.DESCRIPTION)) OR LTRIM(RTRIM(FOTH.REGSTATE)) = LTRIM(RTRIM(VCST.CODE))) AND VCST.FILTER NOT LIKE '00000%'
    LEFT JOIN VCINVESTMENT L1 ON VCF.IQID=L1.FUND AND L1.IQDELETED=0
    LEFT JOIN SFAACCOUNT R2 ON R2.IQID=L1.ACCOUNT AND R2.IQDELETED=0  
    LEFT JOIN SFASITE L3 ON R2.IQID=L3.ACCOUNT_ID AND L3.IQDELETED=0
    
    
    /* LEFT JOIN SFAPRODCATEGORY03 STATLKP ON STATLKP.CODE = VCF.USERTEXT13 */
    WHERE 
    VCF.IQDELETED=0 AND OP.IQDELETED=0 AND OP.DRAFT=0 AND SUBOP.IQDELETED=0 AND
    OP.CLOSEDATE BETWEEN " & DML(%Start_Date) & " AND " & DML(%Date) & "  
    /*AND 
        (
        COALESCE(SUBOP.AMOUNT77,0) <> CASE WHEN VCF.USERTEXT3 = 'EQUITY' THEN 0 END         
        OR COALESCE(SUBOP.AMOUNT97,0) <> CASE WHEN VCF.USERTEXT3 = 'COST' THEN  0  END     
        OR COALESCE(SUBOP.AMOUNT97,0) <> CASE WHEN VCF.USERTEXT3 = 'FV' THEN  0  END       --001 added FV
        OR (COALESCE(SUBOP.AMOUNT81,0))<> 0 
        )*/    --001 commented out
     GROUP BY VCF.IQID 
     " ; 
    COLUMN IQID;
RUN;

//PROC PRINT DATA= WORK.DISTDISP LABEL; RUN;
/*
%LET NETPATH = Gettemppath() + "\DISTDISP3.xlsx";
  PROC EXPORTEXCEL FILE=CSTR(%NETPATH) DROP;
  TABLE= WORK.DISTDISP;
RUN;
*/
DATA WORK.SCH_BA3;
    //SET WORK.DISTINC WORK.DISTDISP;
    SET WORK.DISTDISP(WHERE DISTAMT_SQL<>0 OR VAL9_SQL<>0 OR IMPAMT11_SQL<>0 OR COL13_SQL<>0 OR  REALFX14_SQL<>0 OR  REALFX17_SQL<>0 OR 
                               REALGL18_SQL<>0 OR  COL19_SQL<>0 OR  GLINC20_SQL<>0 OR CurrInvInc <> 0);    //001 added CurrInvInc <> 0
RUN;
//PROC PRINT DATA= WORK.SCH_BA3; RUN;

/*
,MIN(LIQ_DATE) AS PRIOR_YEAR_LIQUIDATION_DATE
 LEFT OUTER JOIN (SELECT MAX(CLOSEDATE) AS LIQ_DATE, FUND FROM VCFUNDOP 
        WHERE OTYPE IN(-284, -286) 
        --AND CLOSEDATE >= CONVERT( DATETIME, '01/01/' + CONVERT(varchar(4),DATEPART(year,DATEADD(year,-1," & DML(%Date) & "))) , 101)
        AND CLOSEDATE <= CONVERT( DATETIME, '12/31/' + CONVERT(varchar(4),DATEPART(year,DATEADD(year,-1," & DML(%Date) & "))) , 101)
        AND (CANCELLED = 0 OR CANCELLED IS NULL)
        GROUP BY FUND
    )
    LIQUIDATION_STATUS ON LIQUIDATION_STATUS.FUND = OP.FUND 
*/

DATA WORK.SCH_BA3(DROP = IQID FUND_ID STAT_SQL CUSIP1_SQL CUSIP2_SQL CUSIP3_SQL FUND_SQL BASIS_SQL CITY_SQL STATE_SQL 
                         COL5_SQL CLDT6_SQL CLOSEDATE_SQL DISTAMT_SQL VAL9_SQL COL10_SQL IMPAMT11_SQL COL12_SQL COL13_SQL
                         REALFX14_SQL REALFX17_SQL REALGL18_SQL COL19_SQL GLINC20_SQL LEI21_SQL ZIP22_SQL PROP23_SQL);
     
     //SET WORK.SCH_BA3;
     //AND PRIOR_YEAR_LIQUIDATION_DATE IS NULL
     SET WORK.SCH_BA3 (WHERE DISTAMT_SQL<>0 OR REALFX17_SQL<>0 OR  REALGL18_SQL<>0 OR COL19_SQL<>0 OR CurrInvInc <> 0) ;    //001 added CurrInvInc <> 0
     
     COLUMN STAT TYPE=STRING LABEL = "STAT Classification"; STAT = STAT_SQL ;
     COLUMN CUSIP1 TYPE=STRING LABEL = "Cusip1"; CUSIP1 = CUSIP1_SQL ;
     COLUMN CUSIP2 TYPE=STRING LABEL = "Cusip2"; CUSIP2 = CUSIP2_SQL ;
     COLUMN CUSIP3 TYPE=STRING LABEL = "Cusip3"; CUSIP3 = CUSIP3_SQL ;
     COLUMN FundName TYPE=STRING LABEL = "Name or Description" WIDTH =300; FundName = FUND_SQL ;
    // COLUMN BASIS TYPE=STRING LABEL = "Accounting Form" ; BASIS = BASIS_SQL ;
     COLUMN CITY TYPE=STRING LABEL = "City"; CITY = UCASE(CITY_SQL);
     COLUMN STATE TYPE=STRING LABEL = "State"; STATE = STATE_SQL ;
     COLUMN DISTRIBUTION TYPE=STRING LABEL = "Name of Purchaser or Nature of Disposal"; DISTRIBUTION = UCASE(COL5_SQL) ;
     COLUMN CLOSEDATE TYPE=DATE LABEL = "Date Originally Acquired" ; CLOSEDATE = CLDT6_SQL ;
     COLUMN DISPDATE TYPE=DATE LABEL = "Disposal Date" ; DISPDATE = CLOSEDATE_SQL ;
     COLUMN DISTAMT  TYPE=DOUBLE LABEL = "Book/Adjusted Carrying Value Less Encumbrances, Prior Year"   FORMAT=P_MONEY.; 
     //DISTAMT = DISTAMT_SQL;      
     if (LiqFund = '1' and FistLiqInCurrPeriod = '0')     //002
     or CLOSEDATE > %StartYearDate     //004 
         then DISTAMT = 0;    
     elseif LiqFund = '1'
         then DISTAMT = DISTAMT_SQL + CDBL(LiqFundSuspense);
     else DISTAMT = DISTAMT_SQL;
     end;    //001
     
     COLUMN VALU9  TYPE=DOUBLE  LABEL = "Unrealized Valuation Increase (Decrease)" FORMAT=P_MONEY.;  
     //VALU9  = VAL9_SQL;
     if LiqFund = '1' and FistLiqInCurrPeriod = '0'
         then VALU9 = 0;
     else VALU9 = VAL9_SQL;
     end;    //002
     
     COLUMN COL10  TYPE=STRING LABEL = "Current Year's (Depreciation) or (Amortization) / Accretion"   ;  
     //COL10  = COL10_SQL;
     if LiqFund = '1' and FistLiqInCurrPeriod = '0'
         then COL10 = 0;
     else COL10 = COL10_SQL;
     end;    //002
     
     COLUMN IMPAMT11  TYPE=DOUBLE LABEL = "Current Year's Other Than Temporary Impairment Recognized"; 
     //IMPAMT11=IMPAMT11_SQL;
     if LiqFund = '1' and FistLiqInCurrPeriod = '0'
         then IMPAMT11 = 0;
     else IMPAMT11 = IMPAMT11_SQL;
     end;    //002
     
     COLUMN COL12  TYPE=STRING LABEL = "Capitalized Deferred Interest and Other";  
     //COL12 = COL12_SQL;
     if LiqFund = '1' and FistLiqInCurrPeriod = '0'
         then COL12 = 0;
     else COL12 = COL12_SQL;
     end;    //002
     
     COLUMN COL13  TYPE=DOUBLE LABEL = "Total Change in Book/Adjusted Carrying Value (9+10-11+12)";  
     //COL13 = COL13_SQL;
     if LiqFund = '1' and FistLiqInCurrPeriod = '0'
         then COL13 = 0;
     else COL13 = COL13_SQL;
     end;    //002
     
     COLUMN REALFX14  TYPE=STRING LABEL = "Total Foreign Exchange Change in Book/Adjusted Carrying Value";  
     //REALFX14 = REALFX14_SQL;
     if LiqFund = '1' and FistLiqInCurrPeriod = '0'
         then REALFX14 = 0;
     else REALFX14 = REALFX14_SQL;
     end;    //002
     
     // COLUMN OLD_DISTAMT15  TYPE=DOUBLE LABEL = "OLd - Book/Adjusted Carrying Value Less Encumbrances on Disposal"   FORMAT=P_MONEY.;  OLD_DISTAMT15  = DISTAMT_SQL;
     COLUMN DISTAMT15  TYPE=DOUBLE LABEL = "Book/Adjusted Carrying Value Less Encumbrances on Disposal"   FORMAT=P_MONEY.;  
     //DISTAMT15  = DISTAMT_SQL + COL13;
     if CLOSEDATE > %StartYearDate
         then DISTAMT15 = 0;
     elseif LiqFund = '1' and FistLiqInCurrPeriod = '0'
         then DISTAMT15 = 0;
     else DISTAMT15 = DISTAMT_SQL + COL13;
     end;    //002
     
     COLUMN DISTAMT16  TYPE=DOUBLE LABEL = "Consideration"   FORMAT=P_MONEY.;  
     //DISTAMT16  = DISTAMT_SQL + COL13;
     if LiqFund = '1' and FistLiqInCurrPeriod = '0'
         then DISTAMT16 = 0;
     elseif LiqFund = '1'
         then DISTAMT16 = DISTAMT_SQL;        //005
     else DISTAMT16 = DISTAMT_SQL + COL13;
     end;    //002
     
     COLUMN REALFX17  TYPE=DOUBLE LABEL = "Foreign Exchange Gain (Loss) on Disposal"   FORMAT=P_MONEY.;  
     //REALFX17  = REALFX17_SQL;
     if LiqFund = '1' and FistLiqInCurrPeriod = '0'
         then REALFX17 = 0;
     else REALFX17 = REALFX17_SQL;
     end;    //002
     
     COLUMN REALGL18  TYPE=DOUBLE LABEL = "Realized Gain (Loss) on Disposal"   FORMAT=P_MONEY.;  
     //REALGL18  = REALGL18_SQL;
     if LiqFund = '1' and FistLiqInCurrPeriod = '0'
         then REALGL18 = 0;
     else REALGL18 = REALGL18_SQL;
     end;    //002
     
     COLUMN COL19 TYPE=DOUBLE LABEL = "Total Gain (Loss) on Disposal"   FORMAT=P_MONEY.;  
     //COL19  = COL19_SQL;
     if LiqFund = '1' and FistLiqInCurrPeriod = '0'
         then COL19 = 0;
     else COL19 = COL19_SQL;
     end;    //002
     
     COLUMN GLINC20  TYPE=DOUBLE LABEL = "Investment Income"   FORMAT=P_MONEY.;      
     //GLINC20  = GLINC20_SQL;
     if LiqFund = '1' and FistLiqInCurrPeriod = '0'
         then GLINC20  = CDBL(CurrInvInc) + CDBL(PriorInvInc);
     else GLINC20 = CurrInvInc;
     end;    //001
     
     COLUMN LEI21  TYPE=DOUBLE LABEL = "LEI"   FORMAT=P_MONEY.;  LEI21  = LEI21_SQL;
     COLUMN ZIP22  TYPE=STRING LABEL = "Post Code" ;  ZIP22  =ZIP22_SQL;
     COLUMN PROP23  TYPE=STRING LABEL = "Property Type" ;  PROP23  = PROP23_SQL;
 
RUN;

//PROC PRINT DATA=WORK.SCH_BA3 LABEL; RUN;

PROC MEANS DATA =WORK.SCH_BA3 OUT=WORK.SCH_BA3;
    CLASS FUNDNAME; 
    FIRST STAT(NAME=STAT);
    FIRST CUSIP1(NAME=CUSIP1);
    FIRST CUSIP2(NAME=CUSIP2);
    FIRST CUSIP3(NAME=CUSIP3);
    FIRST CITY(NAME=CITY);
    FIRST STATE(NAME=STATE);
    FIRST DISTRIBUTION(NAME=DISTRIBUTION);
    FIRST CLOSEDATE(NAME=CLOSEDATE);
    FIRST DISPDATE(NAME=DISPDATE);
    SUM DISTAMT(NAME=DISTAMT);
    SUM VALU9(NAME=VALU9);
    //N STAT(NAME=FUND_COUNT);
    SUM COL10(NAME=COL10);
    SUM IMPAMT11(NAME=IMPAMT11);
    SUM COL12(NAME=COL12);
    SUM COL13(NAME=COL13);
    SUM REALFX14(NAME=REALFX14);
    SUM DISTAMT15(NAME=DISTAMT15);
    SUM DISTAMT16(NAME=DISTAMT16);
    SUM REALFX17(NAME=REALFX17);
    SUM REALGL18(NAME=REALGL18);
    SUM COL19(NAME=COL19);
    SUM GLINC20(NAME=GLINC20);
    FIRST LEI21(NAME=LEI21);
    FIRST ZIP22(NAME=ZIP22);
    FIRST PROP23(NAME=PROP23);
RUN;

PROC SORT DATA = WORK.SCH_BA3; 
    BY STAT FUNDNAME; 
RUN;

//PROC PRINT DATA=WORK.SCH_BA3 LABEL; RUN;

DATA LOCAL.tab_SCH_BA3;
    SET WORK.SCH_BA3;
//COLUMN VALU9 TYPE=DOUBLE  LABEL = "Unrealized Valuation Increase (Decrease)"  FORMAT=P_MONEY.;  VALU9  = VALU91/FUND_COUNT;

RUN;

//PROC PRINT DATA=LOCAL.tab_SCH_BA3 LABEL; RUN;

/*
DATA WORK.DISTDISP1;
    SQL "SELECT  VCF.IQID ,  
    SUM(COALESCE(SUBOP.AMOUNT79,0)) + SUM(COALESCE(SUBOP.AMOUNT99,0)) VAL9 , SUM(COALESCE(SUBOP.AMOUNTC8,0)) IMPAMT
	FROM VCFUND VCF 
    JOIN VCFUNDOP OP ON OP.FUND = VCF.IQID
    JOIN VCSUBSCRFUNDOPSHARE SUBOP ON SUBOP.FUNDOP = OP.IQID 
    JOIN VCSUBSCRIBER SUBSCR ON SUBSCR.IQID = SUBOP.SUBSCRIBER AND SUBSCR.LIBELLE = '" & %Legal_Entity & "'
    WHERE 
         VCF.IQDELETED=0 AND OP.IQDELETED=0 AND SUBOP.IQDELETED=0 AND
         VCF.FUND like 'Pica%'  
         AND DATEPART(YYYY,OP.CLOSEDATE) = YEAR("& DML(%DATE) &")
     GROUP BY   VCF.IQID                                  
          ORDER BY 2  " ; 
    COLUMN IQID;
RUN;

PROC PRINT DATA= WORK.DISTDISP1; RUN;
*/

%END;

