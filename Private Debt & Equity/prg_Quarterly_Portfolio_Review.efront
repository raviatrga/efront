//---------------------------------------------------------------------------
//last change 11/15/17
// Change 01/30/18 - Mezz loan - Rating added IQDELETED=0
//         
// DD 2018_02_28 Ticket ITM0251960
// Added the follow SQL code 'MIN(INVINS_MAIN.USERTEXT46) INSTR_STATUS,
//            LEFT JOIN VCINVESTMENTINS INVINS_MAIN ON INVINS_MAIN.IQID=INVINS.ACCOUNTINS              
// DD 2019_02_19 to 2/26 Tab 5, 6, 6a restore orignal version from PD&E Dashboard
//              Combined Tabs 6 and 6a, Tab 7 change IRR Cashflows - Qtr back and LastValuation Reporting date
//              Tab 7 all columns exept for Unrealized to pull data one Qtr back from reporting date, Unrealized pulls data
//              based on reporting date
//              Added the following two operations 
//               OPT.CODE = 'LN71'  -- 'LN - Transfer out'
//               OPT.CODE = 'LN02')  -- 'LN - Funding (following commitment)'
//
//---------------------------------------------------------------------------



LIBNAME USER ".";

%DEFINE REPORT_DATE;
%DEFINE CALCULATE_IRR;
%DEFINE USE_INVESTEE_CURR;

%PARAM DATE LABEL="Enter Quarter End Date" TYPE=DATE DEFAULT=TODAY NOTNULL ;
%LET DATE=%DATE;
%LET ORIG_DATE=%DATE;

%let Current_Qtr_End_Date = FORMAT(QuarterEndDate(%Date), 'MM/dd/yyyy');  // set end date to end of current Qtr other wise the the next line of code will not work   
%let IRR_Pre_Qtr = DateAdd("QUARTER", -1, %Current_Qtr_End_Date); 

/*------------------7. Partnerships ---------------------*/ 
%LET DATE = %IRR_Pre_Qtr;   // Date Parm set to Prior Period 
DATA WORK.FUNDMAST;
SQL "SELECT A.IQID AS FUND_ID,
        A.FUND as FUNDNAME ,
        VCPRT.PORTFOLIO as PORTFOLIO,
        (case 
            when A.USERTEXT43 = '1' then 'Debt Hedge Fund' 
            when A.USERTEXT43 = '2' then 'Alternatives Preferred Stock' 
            when A.USERTEXT43 = '3' then 'Senior Secured Loan' 
            when A.USERTEXT43 = '4' then 'Subordinated Loan' 
            when A.USERTEXT43 = '5' then 'Distressed Debt' 
            when A.USERTEXT43 = '6' then 'Real Asset Debt' 
            when A.USERTEXT43 = '7' then 'Senior Secured Loan' 
            when A.USERTEXT43 = '8' then 'Subordinated Loan/Mezzanine Funds' 
            when A.USERTEXT43 = '9' then 'Senior Secured Loan' 
            when A.USERTEXT43 = '10' then 'Subordinated Loan' 
            when A.USERTEXT43 = '11' then 'Senior Secured Loan' 
            when A.USERTEXT43 = '12' then 'Subordinated Loan' 
            when A.USERTEXT43 = '13' then 'Equity Hedge Fund' 
            when A.USERTEXT43 = '14' then 'Alternatives Common Stock' 
            when A.USERTEXT43 = '15' then 'Alternatives Preferred Stock' 
            when A.USERTEXT43 = '16' then 'Warrants' 
            when A.USERTEXT43 = '17' then 'Buyout' 
            when A.USERTEXT43 = '18' then 'Growth' 
            when A.USERTEXT43 = '19' then 'Real Asset Equity' 
            when A.USERTEXT43 = '20' then 'Secondary' 
            when A.USERTEXT43 = '21' then 'Venture Capital' 
            when A.USERTEXT43 = '22' then 'Structured Alternatives Common Stock' 
            when A.USERTEXT43 = '23' then 'Structured Alternatives Preferred Stock' 
            when A.USERTEXT43 = '24' then 'Senior Loan' 
            when A.USERTEXT43 = '25' then 'Subordinated Loan' 
         end) + 
        (case 
            when A.USERTEXT44 = '1' then '/Co-Investment' 
            when A.USERTEXT44 = '2' then '/Direct Investment' 
            when A.USERTEXT44 = '3' then '/Co-Investment' 
            when A.USERTEXT44 = '4' then '/Direct Investment' 
            when A.USERTEXT44 = '5' then '/Co-Investment' 
            when A.USERTEXT44 = '6' then '/Direct Investment' 
            when A.USERTEXT44 = '7' then '/Agriculture' 
            when A.USERTEXT44 = '8' then '/Energy' 
            when A.USERTEXT44 = '9' then '/Infrastructure' 
            when A.USERTEXT44 = '10' then '/Real Estate' 
            when A.USERTEXT44 = '11' then '/Timber' 
            when A.USERTEXT44 = '12' then '/Co-Investment' 
            when A.USERTEXT44 = '13' then '/Co-Investment' 
            when A.USERTEXT44 = '14' then '/Co-Investment' 
            when A.USERTEXT44 = '15' then '/Agriculture' 
            when A.USERTEXT44 = '16' then '/Energy' 
            when A.USERTEXT44 = '17' then '/Infrastructure' 
            when A.USERTEXT44 = '18' then '/Real Estate' 
            when A.USERTEXT44 = '19' then '/Timber' 
          else ' '                                                                                                                                                                                
         end) as Sectors,
        A.VINTAGEYEAR as 'Vintage',                                                                                                                                                                            
        A.USERCURR3 as 'RGA_Orig_Commit', 
        A.USERCURR2 as 'Total_Fund_Size',                                                                                                                                                                            
        A.CURRENCY1 as 'CURRENCY',
        A.CLOSINGDATE as 'CLOSEDATE',
        A.ENDDATE  as 'ENDDATE', 
        VCSUB.EXITDATE,
        (case  when FSTAT.DESCR like 'Exited Fund%' 
           then '0'  else '1' end ) as 'FACTIVESTATUS' ,
        (case  when FSTAT.DESCR like 'Exited Fund%' 
           then 'Exited' else 'Active' end ) as 'FUNDSTATUS_DashBrd',
        (case 
            when A.USERTEXT42 = '4' then 'Private Debt Fund' 
            when A.USERTEXT42 = '9' then 'Private Equity Fund'                                                                                                                                                                             
        end) as  FUND_CLASS3 ,
        VCSUB.LIBELLE as INVESTORNAME,
        A.USERNUM8 as RGA_SHARE, 
        (CASE A.USERTEXT47 WHEN '1' 
           THEN 'Yes' WHEN '0' 
           THEN 'No' ELSE '' END) as LIM_PART_ADV, 
        (CASE A.USERTEXT48 WHEN '1' 
           THEN 'Yes' WHEN '0' 
           THEN 'No' ELSE '' END) as BUYOUT_STRATEGIC,
        DATEPART(YYYY,A.CLOSINGDATE) AS COMMITMENT_YEAR        
    FROM VCFUND A
     JOIN VCSUBSCRIBER VCSUB 
       ON VCSUB.FUND = A.IQID 
         AND VCSUB.IQDELETED=0 
     JOIN VCPORTFOLIOASSET VCPRTAST 
       ON VCPRTAST.SUBSCRIBER = VCSUB.IQID 
         AND  VCPRTAST.IQDELETED=0   
     JOIN VCPORTFOLIO VCPRT 
       ON VCPRT.IQID = VCPRTAST.PORTFOLIO  
         AND  VCPRT.IQDELETED=0 
         AND VCPRT.PORTFOLIO IN ('PDE - Funds')                                                                                                                                                                         
     JOIN ADMROLE REG 
       ON A.IQREGIONID = REG.IQID 
         AND REG.NAME IN ('Private Debt & Equity') 
     JOIN VCFUNDSTAT FSTAT 
       ON A.FSTATUS = FSTAT.CODE 
    WHERE A.IQDELETED=0 
      and A.IQID in (select OP.FUND 
                       from VCFUNDOP OP              -- Added for join on Close Date
                         Where OP.IQDELETED = 0
                           AND OP.CLOSEDATE <= " & DML(%IRR_Pre_Qtr) & ")
      AND ((A.USERTEXT42 = '4' 
             AND A.USERTEXT43 IN ('5','8','6')) 
           OR A.USERTEXT42 = '9')
      AND ??FILTER
      ";
COLUMN FUND_ID; RUN; 
//PROC PRINT DATA=WORK.FUNDMAST; RUN;
//PROC PRINT; PUT %DATE; 
//PUT %DATE;RUN;

DATA WORK.FUND_CF;
    SQL "SELECT VCF.IQID FUND_ID
               ,VCF.FUND FUND
               ,SUBSCR.LIBELLE INVESTORNAME
               ,OP.CLOSEDATE CLOSEDATE
               ,DATEPART(YYYY,OP.CLOSEDATE) OP_YEAR
               ,COALESCE(SUBOP.AMOUNT02,0) + COALESCE(SUBOP.AMOUNT04,0) + COALESCE(SUBOP.AMOUNT08,0) + COALESCE(SUBOP.AMOUNT30,0) + 
                 COALESCE(SUBOP.AMOUNT50,0) + COALESCE(SUBOP.AMOUNT80,0) + COALESCE(SUBOP.AMOUNT60,0) 
                AS CAPITALINVESTED
               ,COALESCE(SUBOP.AMOUNT24,0) + COALESCE(SUBOP.AMOUNT17,0) + COALESCE(SUBOP.AMOUNT13,0) + COALESCE(SUBOP.AMOUNT14,0) +
                 COALESCE(SUBOP.AMOUNT15,0) + COALESCE(SUBOP.AMOUNT23,0) + COALESCE(SUBOP.AMOUNT29,0) + COALESCE(SUBOP.AMOUNT28,0)
                AS RETURNOFCAPITAL
          FROM VCFUND VCF 
            JOIN VCFUNDSTAT FSTAT 
              ON VCF.FSTATUS = FSTAT.CODE 
            JOIN ADMROLE REG 
              ON VCF.IQREGIONID = REG.IQID 
                AND REG.NAME IN ('Private Debt & Equity')
            JOIN VCFUNDOP OP 
              ON OP.FUND = VCF.IQID 
                AND OP.IQDELETED=0
            JOIN VCFUNDOPTYPE VCFOPTYPE 
              ON VCFOPTYPE.CODE=OP.OTYPE 
                AND VCFOPTYPE.FILTER<>'00000000000000000000000000000000'
            JOIN VCSUBSCRFUNDOPSHARE SUBOP 
              ON SUBOP.FUNDOP = OP.IQID 
                AND SUBOP.IQDELETED=0 
                AND SUBOP.FUNDOP IS NOT NULL
            JOIN VCSUBSCRIBER SUBSCR 
              ON SUBSCR.IQID = SUBOP.SUBSCRIBER 
                AND SUBSCR.IQDELETED=0
            JOIN VCPORTFOLIOASSET VCPRTAST 
              ON VCPRTAST.SUBSCRIBER = SUBSCR.IQID 
                AND  VCPRTAST.IQDELETED=0   
            JOIN VCPORTFOLIO VCPRT 
              ON VCPRT.IQID = VCPRTAST.PORTFOLIO  
                AND  VCPRT.IQDELETED=0 
                AND VCPRT.PORTFOLIO IN ('PDE - Funds')
          WHERE 
            VCF.IQDELETED=0 
            AND ((VCF.USERTEXT42 = '4' 
                   AND VCF.USERTEXT43 IN ('5','8','6')) 
                 OR VCF.USERTEXT42 = '9')
            AND OP.CLOSEDATE <= " & DML(%IRR_Pre_Qtr) & " 
            AND (COALESCE(SUBOP.AMOUNT02,0) <> 0  
                  OR COALESCE(SUBOP.AMOUNT04,0) <> 0 
                  OR COALESCE(SUBOP.AMOUNT08,0) <> 0
                  OR COALESCE(SUBOP.AMOUNT30,0) <> 0 
                  OR COALESCE(SUBOP.AMOUNT50,0) <> 0 
                  OR COALESCE(SUBOP.AMOUNT80,0) <> 0 
                  OR COALESCE(SUBOP.AMOUNT60,0) <> 0 
                  OR COALESCE(SUBOP.AMOUNT24,0) <> 0 
                  OR COALESCE(SUBOP.AMOUNT17,0) <> 0 
                  OR COALESCE(SUBOP.AMOUNT13,0) <> 0 
                  OR COALESCE(SUBOP.AMOUNT14,0) <> 0 
                  OR COALESCE(SUBOP.AMOUNT15,0) <> 0 
                  OR COALESCE(SUBOP.AMOUNT23,0) <> 0 
                  OR COALESCE(SUBOP.AMOUNT29,0) <> 0 
                  OR COALESCE(SUBOP.AMOUNT28,0) <>0 )
         /*   GROUP BY VCF.IQID, VCF.FUND, SUBSCR.LIBELLE */
          ORDER BY 1
    " ; 
COLUMN FUND_ID;
RUN;
//PROC PRINT DATA=WORK.FUND_CF; RUN;

PROC MEANS DATA =WORK.FUND_CF OUT=WORK.FUND_CF2;
CLASS FUND_ID INVESTORNAME; 
SUM CAPITALINVESTED(NAME=CAPITALINVESTED);
SUM RETURNOFCAPITAL(NAME=RETURNOFCAPITAL);
RUN; 
//PROC PRINT; PUT %DATE; RUN;

DATA WORK.FUND_LIST;
//MERGE WORK.FUNDMAST(IN=IN1) WORK.FUND_CF2(IN=IN2);
  MERGE WORK.FUNDMAST(IN=IN1) WORK.FUND_CF2;
    By FUND_ID INVESTORNAME  ;
    //If (IN1 and IN2) then Output;
    IF (IN1) THEN OUTPUT;
    END;
RUN;  
//PROC PRINT DATA=WORK.FUND_LIST; RUN;   
                                                                                                                                                                                       
PROC FAQUERY Query="IT Admin - Program Queries\Positions-PortRev" (DATE=%DATE) ; 
    TABLE "Default"  OUT=WORK.QRY_POSITIONS_PORTREV;
RUN;
//PROC PRINT DATA=WORK.QRY_POSITIONS_PORTREV; RUN;

DATA WORK.FUND_LIST;
  MERGE WORK.FUND_LIST(IN=IN1) WORK.QRY_POSITIONS_PORTREV(IN=IN2);
    By FUND_ID INVESTORNAME  ;
    If (IN1 and IN2) then Output;
    End;
RUN; 
//PROC PRINT DATA =  WORK.FUND_LIST; RUN; 

DATA WORK.FUND_LIST(DROP=FUND GAAP_BOOK_VALUE GL_COST_ELIM);
  SET WORK.FUND_LIST;
    COLUMN CURRENTCOST  TYPE=DOUBLE;  CURRENTCOST = GAAP_BOOK_VALUE + GL_COST_ELIM;
RUN;
//PROC PRINT DATA =  WORK.FUND_LIST; RUN;     
                                                                                                                                                                                        
PROC MEANS DATA = FCE.FUNDOPERATIONS(WHERE OPERATIONDATE<=%DATE) OUT=WORK.TIRR;
  CLASS FUND_ID OPERATIONDATE; 
  VAR  FUNDNAME; 
  SUM CASH(NAME=IRRNET);
RUN; 

PROC MEANS DATA =  WORK.FUND_LIST OUT=WORK.TVALUATION;
  CLASS FUND_ID; 
  VAR  FUNDNAME; 
  SUM LASTVALUATION(NAME=IRRNET);
RUN; 

DATA WORK.TIRR;
  SET  WORK.TIRR(IN=T1) WORK.TVALUATION; 
  IF IRRNET IS NULL THEN IRRNET=0; 
  END; 
  COLUMN SORT_IRR TYPE=INTEGER; 
  IF T1 THEN 
    SORT_IRR=0;  
  ELSE 
    SORT_IRR=1; 
    OPERATIONDATE=%DATE;
  END;                                                                                                                                                                                      
  _OUTPUT_=IRRNET <>0 OR SORT_IRR=1;
RUN; 

PROC SORT DATA = WORK.TIRR; 
  BY FUND_ID FUNDNAME SORT_IRR OPERATIONDATE; 
RUN; 

DATA WORK.FUND_LIST1_QTR;
  MERGE WORK.FUND_LIST(IN=IN1) WORK.TIRR(IN=IN2);
  By FUND_ID;
  If (IN1 and IN2) then Output;
  End;
RUN;
                                                                                                                                                                                    
DATA FUND_LIST1_QTR(DROP = ENDDATE); 
  SET WORK.FUND_LIST1_QTR;  
  COLUMN TOTALVALUE TYPE=FLOAT; 
  TOTALVALUE= RETURNOFCAPITAL+ LASTVALUATION;                                                                                                                                                                                     
RUN;  
/*------------------7. Partnerships -------------------*/ 


/*------------------5. Direct Mezz by Vintage-------------*/   
%LET DATE = %IRR_Pre_Qtr; 
DATA WORK.INVSTINS;
    SQL "SELECT  MIN(INVINS.ACCOUNTINS) INVINS_ACCOUNTINS
         , SUM(A.AMOUNT2*(-1)) INVESTMENT
         , MIN(A.Account)      Account
         , DATEPART(YYYY,MIN(A.CLOSEDATE)) INV_YEAR
         , MIN(VCPRT.PORTFOLIO) as PORTFOLIO
         , MIN (A.CURRENCY6) INST_CURR
         , MIN(SFA.NAME) AS SPONSOR
         , (case  
              when MIN(SFASTAT.DESCR) like 'Exited Portfolio Co.%' 
                then '0' else '1' 
            end ) as 'CMPACTIVESTATUS'
         , (case  
              when MIN(SFASTAT.DESCR) like 'Exited Portfolio Co.%' 
                then 'Exited' else 'Active' 
            end ) as 'CMPSTATUS_DashBrd'
         , MIN(INVINS_MAIN.USERTEXT46) INSTR_STATUS        --- DD 2018_02_28 added new field base on Ticket ITM0251960
         , MIN(SFA_CMP.NAME) COMPANY
         , MIN(SFA_CMP.CREATIONDATE) CREATIONDATE 
         , CASE 
             WHEN CONVERT(VARCHAR(12),MIN(RATE.BASERATE)/100 ) IS NOT NULL 
               THEN CONVERT(VARCHAR(12),MIN(RATE.BASERATE) ) + '%' 
             ELSE  MIN(BNMK.LIBELLE) + ' + ' + CONVERT( VARCHAR(12),MIN(RATE.RATESTABLEPERCENT)) + '%' 
           END  AS CASH 
         , CONVERT(VARCHAR(12),MIN(RATEPIK.BASERATE)) + '%'   as PIK 
         , MIN(VCP.USERDATE5) MATURITY_DATE
         , CASE MIN(VCP.USERTEXT30)
             WHEN '1' THEN 'Voting Member'
             WHEN '2' THEN 'Non-Voting Member'
             WHEN '3' THEN 'Observation Rights'
             WHEN '4' THEN 'None'
           END AS BOARD_RIGHTS
         , MIN(INVINS.CURRENCY1) CURRENCY
         , (case 
                when MIN(INVINS.USERTEXT41) = '1' then 'Debt Hedge Fund' 
                when MIN(INVINS.USERTEXT41) = '2' then 'Alternatives Preferred Stock' 
                when MIN(INVINS.USERTEXT41) = '3' then 'Senior Secured Loan' 
                when MIN(INVINS.USERTEXT41) = '4' then 'Subordinated Loan' 
                when MIN(INVINS.USERTEXT41) = '5' then 'Distressed Debt' 
                when MIN(INVINS.USERTEXT41) = '6' then 'Real Asset Debt' 
                when MIN(INVINS.USERTEXT41) = '7' then 'Senior Secured Loan' 
                when MIN(INVINS.USERTEXT41) = '8' then 'Subordinated Loan/Mezzanine Funds' 
                when MIN(INVINS.USERTEXT41) = '9' then 'Senior Secured Loan' 
                when MIN(INVINS.USERTEXT41) = '10' then 'Subordinated Loan' 
                when MIN(INVINS.USERTEXT41) = '11' then 'Senior Secured Loan' 
                when MIN(INVINS.USERTEXT41) = '12' then 'Subordinated Loan' 
                when MIN(INVINS.USERTEXT41) = '13' then 'Equity Hedge Fund' 
                when MIN(INVINS.USERTEXT41) = '14' then 'Alternatives Common Stock' 
                when MIN(INVINS.USERTEXT41) = '15' then 'Alternatives Preferred Stock' 
                when MIN(INVINS.USERTEXT41) = '16' then 'Warrants' 
                when MIN(INVINS.USERTEXT41) = '17' then 'Buyout' 
                when MIN(INVINS.USERTEXT41) = '18' then 'Growth' 
                when MIN(INVINS.USERTEXT41) = '19' then 'Real Asset Equity' 
                when MIN(INVINS.USERTEXT41) = '20' then 'Secondary' 
                when MIN(INVINS.USERTEXT41) = '21' then 'Venture Capital' 
                when MIN(INVINS.USERTEXT41) = '22' then 'Structured Alternatives Common Stock' 
                when MIN(INVINS.USERTEXT41) = '23' then 'Structured Alternatives Preferred Stock' 
                when MIN(INVINS.USERTEXT41) = '24' then 'Senior Loan' 
                when MIN(INVINS.USERTEXT41) = '25' then 'Subordinated Loan' 
           end) as Security
         , MIN(NAIC.METATEXT1) NAIC_RATING
         , MIN(EGAN.METATEXT1) EGAN_RATING
        FROM VCINVESTMENTINS INVINS 
        LEFT JOIN VCINVESTMENTINS INVINS_MAIN 
          ON INVINS_MAIN.IQID=INVINS.ACCOUNTINS     --- DD 2018_02_28 added new field base on Ticket ITM0251960
        JOIN VCINVESTMENT VCINV 
          ON VCINV.IQID = INVINS.INVESTMENT 
            AND VCINV.IQDELETED=0
        LEFT JOIN (SELECT  ACCOUNT, MAX(USERTEXT7) USERTEXT7, MAX(USERDATE5) USERDATE5, MAX(USERTEXT30) USERTEXT30 
                     FROM VCPROJECT VCP1 
                     WHERE VCP1.IQDELETED=0 
                       AND VCP1.WORKFLOW = (SELECT IQID FROM ADMWORKFLOW WHERE LIBELLE IN ('RGA Direct Mezzanine'))  
                     GROUP BY ACCOUNT                  
                  ) VCP 
          ON VCP.ACCOUNT = VCINV.ACCOUNT                                                                                                                                                                                                                                                                                                            
        LEFT JOIN SFAACCOUNT SFA 
          ON SFA.IQID = VCP.USERTEXT7  
            AND SFA.IQDELETED=0
        LEFT JOIN SFAACCOUNT SFA_CMP 
          ON SFA_CMP.IQID = VCINV.ACCOUNT   
            AND SFA_CMP.IQDELETED=0                                                                                                                                                                                  
        LEFT JOIN SFAACCTSTAT SFASTAT 
          ON SFA_CMP.STATUS = SFASTAT.CODE 
            AND SFASTAT.FILTER NOT LIKE '000000%' 
        LEFT JOIN VCINVESTINSRATE RATE 
          ON RATE.INVESTMENTINS =  INVINS.ACCOUNTINS 
            AND RATE.FIRSTDATE<= " & DML(%DATE) & "   
            AND RATE.LASTDATE>= " & DML(%DATE) & " 
            AND RATE.KIND = (SELECT CODE FROM VCINVINSRATKIND WHERE DESCR IN ('Loan Cash Interests')  ) 
        LEFT JOIN VCBENCHMARK BNMK 
          ON BNMK.IQID=RATE.RATESTABLE                                                                                                                                                                                                 
        LEFT JOIN VCINVESTINSRATE RATEPIK 
          ON RATEPIK.INVESTMENTINS = INVINS.ACCOUNTINS 
            AND RATEPIK.FIRSTDATE <= " & DML(%DATE) & " 
            AND RATEPIK.LASTDATE >= " & DML(%DATE) & " 
            AND RATEPIK.KIND = (SELECT CODE FROM VCINVINSRATKIND WHERE DESCR IN ('Loan Capitalized Interests')  )                                                                                                                                                                                                 
        JOIN VCPORTFOLIOASSET VCPRTAST 
          ON VCPRTAST.INVESTMENT = VCINV.IQID 
            AND  VCPRTAST.IQDELETED=0   
        JOIN VCPORTFOLIO VCPRT 
          ON VCPRT.IQID = VCPRTAST.PORTFOLIO 
            AND VCPRT.PORTFOLIO IN ('PDE - Direct Mezzanine')  
            AND  VCPRT.IQDELETED=0  
        JOIN VCINVESTMENTOP A  
          ON A.INVESTMENTINS=INVINS.IQID 
        JOIN VCINVESTOPTYPE OPT 
          ON OPT.CODE = A.TYPEINVESTOP 
            AND (OPT.CODE = 'LN03'     -- 'LN - Funding (w/o commitment)' 
                 or OPT.CODE = 'LN70'  -- 'LN - Transfer in'
                 or OPT.CODE = 'LN71'  -- 'LN - Transfer out'
                 or OPT.CODE = 'LN02')  -- 'LN - Funding (following commitment)' 
        JOIN ADMROLE REG 
          ON VCINV.IQREGIONID = REG.IQID 
            AND REG.IQDELETED=0 
            AND A.IQREGIONID = REG.IQID 
            AND REG.NAME IN ('Private Debt & Equity')
        LEFT JOIN AJXDYNTABLE NAIC 
          ON NAIC.INVESTMENTINS=INVINS.ACCOUNTINS 
            AND NAIC.IQDELETED=0 
            AND NAIC.METATEXT2='2' 
            AND NAIC.METADATE1 <= " & DML(%DATE) & " 
            AND NAIC.METADATE2 >= " & DML(%DATE) & " 
        LEFT JOIN AJXDYNTABLE EGAN 
          ON EGAN.INVESTMENTINS=INVINS.ACCOUNTINS 
            AND EGAN.IQDELETED=0 
            AND EGAN.METATEXT2='4' 
            AND EGAN.METADATE1 <= " & DML(%DATE) & " 
            AND EGAN.METADATE2 >= " & DML(%DATE) & " 
        WHERE  INVINS.IQDELETED=0 
          AND A.IQDELETED=0 
          AND A.CLOSEDATE <=  " & DML(%DATE) & " 
          AND ??FILTER
        GROUP BY  INVINS.ACCOUNTINS, A.Account 
" ;
COLUMN SECURITY_ID;     
RUN;
//PROC PRINT DATA =  WORK.INVSTINS;title 'TAB 5 -- WORK.INVSTINS Query'; RUN; 

// This query gets Prior Investment Amounts
DATA WORK.Prior_Period_InvestAmts;
     SQL "SELECT sum(A.AMOUNT2*(-1)) INVESTMENT
               , min(a.account) Account  
               , min(INVINS.ACCOUNTINS) SECURITY_ID
               , min(OPT.DESCR) DESCR
            FROM VCINVESTMENTINS INVINS 
            JOIN VCINVESTMENT VCINV 
              ON VCINV.IQID = INVINS.INVESTMENT 
                AND VCINV.IQDELETED=0
            JOIN VCPORTFOLIOASSET VCPRTAST 
              ON VCPRTAST.INVESTMENT = VCINV.IQID 
                AND  VCPRTAST.IQDELETED=0   
            JOIN VCPORTFOLIO VCPRT 
              ON VCPRT.IQID = VCPRTAST.PORTFOLIO 
                AND VCPRT.PORTFOLIO IN ('PDE - Direct Mezzanine')  
                AND  VCPRT.IQDELETED=0  
            JOIN VCINVESTMENTOP A  
              ON A.INVESTMENTINS=INVINS.IQID 
            JOIN VCINVESTOPTYPE OPT 
              ON OPT.CODE = A.TYPEINVESTOP 
                AND (OPT.CODE = 'LN03'     -- 'LN - Funding (w/o commitment)' 
                     or OPT.CODE = 'LN70'  -- 'LN - Transfer in'
                     or OPT.CODE = 'LN71'  -- 'LN - Transfer out'
                     or OPT.CODE = 'LN02') -- 'LN - Funding (following commitment)'  
            JOIN ADMROLE REG 
              ON VCINV.IQREGIONID = REG.IQID 
                AND REG.IQDELETED=0 
                AND A.IQREGIONID = REG.IQID 
                AND REG.NAME IN ('Private Debt & Equity')
            WHERE  INVINS.IQDELETED=0 
              AND A.IQDELETED=0 
              AND A.CLOSEDATE <=  " & DML(%IRR_Pre_Qtr) & " 
              AND ??FILTER
            GROUP BY  INVINS.ACCOUNTINS, A.Account  
         " ;
COLUMN INVESTMENT;     
RUN;
//PROC PRINT DATA=WORK.Prior_Period_InvestAmts;title 'TAB 5 -- WORK.Prior_Period_InvestAmts'; RUN;   

//Merge Prior Period Amounts 
DATA WORK.INVSTINS_Amt;
  MERGE WORK.INVSTINS(IN=IN1) WORK.Prior_Period_InvestAmts(IN=IN2); //(WHERE(PORTFOLIO is not null));
  BY Account SECURITY_ID INVESTMENT; 
  If not (IN1 and IN2) then Output;
    else Output;
  End;
RUN;
//PROC PRINT DATA=WORK.INVSTINS_Amt; RUN;

//The following puts back records that did not join in the Merge for Investment Amounts 
DATA WORK.INVSTINS;
  MERGE WORK.INVSTINS(IN=IN1) WORK.INVSTINS_Amt(IN=IN2);
  BY Account SECURITY_ID INVESTMENT;
  If (IN1 and IN2) then Output;
    else 
       INVESTMENT=0;
       Output;
  End;
RUN;
//PROC PRINT DATA=WORK.INVSTINS; RUN;

DATA WORK.INVSTINS;
SET WORK.INVSTINS (WHERE(PORTFOLIO is not null));
RUN;
//PROC PRINT DATA=WORK.INVSTINS; RUN;

//----------------------------------------------------------------
//DATA WORK.INSTRPOS_LN (KEEP = POSITION_DATE COMPANY_NAME SECURITY_NAME EXIT CURRENTCOST PRINCIPAL LASTVALUATION SECURITY_ID );
// BGT 2018-07-13: Upgrade issue, EXIT column from calc engine doesn't include INTERNALTRANS anymore
// removed CURRENTCOST BALANCE to Prior qtr
%Let COLUMN_EXIT = "EXIT";
DATA WORK.INSTRPOS_LN (KEEP = POSITION_DATE COMPANY_NAME SECURITY_NAME EXIT LASTVALUATION SECURITY_ID );
  SET DCE.REFINSTRUMENTPOSITIONS (WHERE POSITION_DATE=%DATE 
                                    AND SECURITY_CLASS_NAME ="LOANS" 
                                    AND LENGTH(COMPANY_NAME) > 0 );
RUN;

%LET DATE = %IRR_Pre_Qtr;          // Set date Prior qtr 
%Let COLUMN_EXIT = "EXIT";
DATA WORK.INSTRPOS_LN_Prior (KEEP = LASTVALUATION SECURITY_ID CURRENTCOST BALANCE );
  SET DCE.REFINSTRUMENTPOSITIONS (WHERE POSITION_DATE=%DATE 
                                    AND SECURITY_CLASS_NAME ="LOANS" 
                                    AND LENGTH(COMPANY_NAME) > 0 );
RUN;

//DATA WORK.DIRLOAN_LIST(RENAME = (SECURITY_ID=SECURITY_COMPANY_ID POSITION_DATE=REFERENCE_DATE));
DATA WORK.DIRLOAN_LIST(RENAME = (POSITION_DATE=REFERENCE_DATE )); //(SECURITY_ID=SECURITY_COMPANY_ID POSITION_DATE=REFERENCE_DATE BALANCE=PRINCIPAL));
  MERGE WORK.INVSTINS(IN=IN1) WORK.INSTRPOS_LN(IN=IN2);
  BY SECURITY_ID;
  If (IN1 and IN2) then Output;
  End;
RUN; 

// need to drop LASTVALUATION field from DIRLOAN_LIST to be replaced with Prior Period value
DATA WORK.DIRLOAN_LIST(DROP = LASTVALUATION);
  SET WORK.DIRLOAN_LIST;
RUN;

// Combine Prior Qtr
//DATA WORK.DIRLOAN_LIST(RENAME = (SECURITY_ID=SECURITY_COMPANY_ID POSITION_DATE=REFERENCE_DATE));
DATA WORK.DIRLOAN_LIST (RENAME = (SECURITY_ID=SECURITY_COMPANY_ID BALANCE=PRINCIPAL)); // POSITION_DATE=REFERENCE_DATE BALANCE=PRINCIPAL));
  MERGE WORK.DIRLOAN_LIST(IN=IN1) WORK.INSTRPOS_LN_Prior(IN=IN2);
  BY SECURITY_ID;
  If (IN1 and IN2) then Output;
  End;
RUN; 
//PROC PRINT DATA = WORK.DIRLOAN_LIST; RUN;                                                                                                                                                                                              

//LN05, LN06 and EQ07 - Exclude Origination fees amortization transactions 
//----------------------------------------------------------------
// returns the follwoing data:  SECURITY_COMPANY_ID REFERENCE_DATE SECURITY_NAME COMPANY_NAME IRRNET 
PROC MEANS DATA =DCE.FV_T_PORTCO_TRANSACTIONS(WHERE REFERENCE_DATE <= %DATE 
                                                AND TRANSACTION_TYPE <> 'LN05' 
                                                AND TRANSACTION_TYPE <> 'LN07' 
                                                AND TRANSACTION_TYPE <> 'EQ06'
                                             ) OUT=WORK.TIRR;
  CLASS SECURITY_COMPANY_ID REFERENCE_DATE; 
  VAR  SECURITY_NAME; 
  VAR  COMPANY_NAME;     
  SUM CASH2(NAME=IRRNET);
RUN;                                                                                                                                                                                           
//PROC PRINT DATA= WORK.TIRR; RUN;
                                                                                                                                                                                           
PROC MEANS DATA =  WORK.DIRLOAN_LIST OUT=WORK.TVALUATION;
  CLASS SECURITY_COMPANY_ID REFERENCE_DATE; 
  VAR  SECURITY_NAME;  
  VAR  COMPANY_NAME;     
  SUM LASTVALUATION(NAME=IRRNET);
RUN; 

DATA WORK.TIRR;
  SET  WORK.TIRR(IN=T1) WORK.TVALUATION; 
  IF IRRNET IS NULL THEN IRRNET=0; 
  END; 
  COLUMN SORT_IRR TYPE=INTEGER; 
  IF T1 
     THEN SORT_IRR=0;  
   ELSE SORT_IRR=1; 
        REFERENCE_DATE = %IRR_Pre_Qtr;     // 10/12 DD added prior date %DATE;
  END; 
  _OUTPUT_=IRRNET <>0 OR SORT_IRR=1;
RUN; 

PROC SORT DATA = WORK.TIRR; 
  BY SECURITY_COMPANY_ID SECURITY_NAME COMPANY_NAME SORT_IRR REFERENCE_DATE; 
RUN; 

DATA WORK.DIRLOAN_LIST1_QTR;
  MERGE WORK.DIRLOAN_LIST(IN=IN1) WORK.TIRR(IN=IN2);
  By SECURITY_COMPANY_ID;
  If (IN1 and IN2) then Output;
  End;
RUN;
                                                                                                                                                                                    
DATA DIRLOAN_LIST1_QTR; 
  SET WORK.DIRLOAN_LIST1_QTR;  
  COLUMN TOTALVALUE TYPE=FLOAT; 
  TOTALVALUE= EXIT + LASTVALUATION;                                                                                                                                                                                     
RUN;    
//PROC PRINT DATA = DIRLOAN_LIST1_QTR; title "tab 5. output cube"; RUN;
/*------------------5. Direct Mezz by Vintage-------------*/ 


/*------------------6. Direct LLC Corps-----------*/    
//SUM(VCINV.OWNERSHIP) PERCENT_OWNERSHIP 
%LET DATE=%IRR_Pre_Qtr;
DATA WORK.INVSTINS_EQ;
    SQL "SELECT MIN(INVINS.ACCOUNTINS)     INVINS_ACCOUNTINS, 
           SUM( (CASE 
                   WHEN OPT.DESCR like 'EQ - Purchase/Subscription (w/o Commitment)%'
                     THEN A.AMOUNT2
                   ELSE 0 
                 END 
                )*(-1)
              )                            INVESTMENT, 
           min(A.account)                  Account,   
           DATEPART(YYYY,MIN(A.CLOSEDATE)) INV_YEAR,
           MIN(VCPRT.PORTFOLIO)         as PORTFOLIO
         , MIN (A.CURRENCY6)               INST_CURR
         , MIN(SFA.NAME)                AS SPONSOR,
        (case  
           when MIN(SFASTAT.DESCR) like 'Exited Portfolio Co.%' 
             then '0' else '1' 
           end 
        )                                  as CMPACTIVESTATUS,
        (case  
           when MIN(SFASTAT.DESCR) like 'Exited Portfolio Co.%' 
             then 'Exited' 
               else 'Active' 
         end 
        )                                  as CMPSTATUS_DashBrd,
        MIN(INVINS.USERTEXT46)                INSTR_STATUS,        --- DD 2018_02_28 added new field base on Ticket ITM0251960
        MIN(SFA_CMP.NAME)                     COMPANY
      , MIN(SFA_CMP.CREATIONDATE)             CREATIONDATE 
      , MIN(ltrim(rtrim(INVINS.LIBELLE)))     FUND
      , MIN(ltrim(rtrim(INVINS.usertext23)))  Cusip 
      , (case 
		   when MIN(INVINS.USERTEXT21) = 1 then 'Fund'             -- will only get Funds has been filtered below 
		   when MIN(INVINS.USERTEXT21) = 2 then 'Company' 
         end
        )                                 as LP_TYPE,
        CASE MIN(VCP.USERTEXT30)
            WHEN '1' THEN 'Voting Member'
            WHEN '2' THEN 'Non-Voting Member'
            WHEN '3' THEN 'Observation Rights'
            WHEN '4' THEN 'None'
           -- else 'N\A'
        END                                 AS BOARD_RIGHTS
      , MIN(INVINS.CURRENCY1) CURRENCY,
       (case 
            when MIN(INVINS.USERTEXT41) = '1' then 'Debt Hedge Fund' 
            when MIN(INVINS.USERTEXT41) = '2' then 'Alternatives Preferred Stock' 
            when MIN(INVINS.USERTEXT41) = '3' then 'Senior Secured Loan' 
            when MIN(INVINS.USERTEXT41) = '4' then 'Subordinated Loan' 
            when MIN(INVINS.USERTEXT41) = '5' then 'Distressed Debt' 
            when MIN(INVINS.USERTEXT41) = '6' then 'Real Asset Debt' 
            when MIN(INVINS.USERTEXT41) = '7' then 'Senior Secured Loan' 
            when MIN(INVINS.USERTEXT41) = '8' then 'Subordinated Loan/Mezzanine Funds' 
            when MIN(INVINS.USERTEXT41) = '9' then 'Senior Secured Loan' 
            when MIN(INVINS.USERTEXT41) = '10' then 'Subordinated Loan' 
            when MIN(INVINS.USERTEXT41) = '11' then 'Senior Secured Loan' 
            when MIN(INVINS.USERTEXT41) = '12' then 'Subordinated Loan' 
            when MIN(INVINS.USERTEXT41) = '13' then 'Equity Hedge Fund' 
            when MIN(INVINS.USERTEXT41) = '14' then 'Alternatives Common Stock' 
            when MIN(INVINS.USERTEXT41) = '15' then 'Alternatives Preferred Stock' 
            when MIN(INVINS.USERTEXT41) = '16' then 'Warrants' 
            when MIN(INVINS.USERTEXT41) = '17' then 'Buyout' 
            when MIN(INVINS.USERTEXT41) = '18' then 'Growth' 
            when MIN(INVINS.USERTEXT41) = '19' then 'Real Asset Equity' 
            when MIN(INVINS.USERTEXT41) = '20' then 'Secondary' 
            when MIN(INVINS.USERTEXT41) = '21' then 'Venture Capital' 
            when MIN(INVINS.USERTEXT41) = '22' then 'Structured Alternatives Common Stock' 
            when MIN(INVINS.USERTEXT41) = '23' then 'Structured Alternatives Preferred Stock' 
            when MIN(INVINS.USERTEXT41) = '24' then 'Senior Loan' 
            when MIN(INVINS.USERTEXT41) = '25' then 'Subordinated Loan' 
        end) as Security        
    FROM VCINVESTMENTINS INVINS 
        JOIN VCINVESTMENT VCINV 
          ON VCINV.IQID = INVINS.INVESTMENT 
            AND VCINV.IQDELETED=0                                                                                                                                                                                                                                                                                                                                                                                                                                                 
          LEFT JOIN (SELECT  ACCOUNT, MAX(USERTEXT7) USERTEXT7, MAX(USERDATE5) USERDATE5, MAX(USERTEXT30) USERTEXT30 
                       FROM VCPROJECT VCP1 
                       WHERE VCP1.IQDELETED=0 
                         AND VCP1.WORKFLOW = (SELECT TOP 1 IQID FROM ADMWORKFLOW WHERE LIBELLE IN ('RGA Direct Mezzanine','RGA Equity Co-Investment'))  
                       GROUP BY ACCOUNT                  
                    ) VCP 
            ON VCP.ACCOUNT = VCINV.ACCOUNT                                                                                                                                                                                                                                                                                                                                                                                                                                                    
        LEFT JOIN SFAACCOUNT SFA 
          ON SFA.IQID = VCP.USERTEXT7 
            AND SFA.IQDELETED=0  
        LEFT JOIN SFAACCOUNT SFA_CMP 
          ON SFA_CMP.IQID = VCINV.ACCOUNT  
            AND SFA_CMP.IQDELETED=0                                                                                                                                                                                            
        LEFT JOIN SFAACCTSTAT SFASTAT 
          ON SFA_CMP.STATUS = SFASTAT.CODE 
            AND  SFASTAT.FILTER NOT LIKE '000%'                                                                                                                                                                                                    
        JOIN VCPORTFOLIOASSET VCPRTAST 
          ON VCPRTAST.INVESTMENT = VCINV.IQID  
            AND  VCPRTAST.IQDELETED=0  
        JOIN VCPORTFOLIO VCPRT 
          ON VCPRT.IQID = VCPRTAST.PORTFOLIO 
            AND VCPRT.PORTFOLIO IN ('PDE - Direct Equity') 
            AND  VCPRT.IQDELETED=0  
        LEFT JOIN VCINVESTMENTOP A  
          ON A.INVESTMENTINS=INVINS.IQID 
        LEFT JOIN VCINVESTOPTYPE OPT 
          ON OPT.CODE = A.TYPEINVESTOP 
            AND OPT.DESCR like 'EQ - Purchase/Subscription (w/o Commitment)%' 
            AND OPT.FILTER NOT LIKE '000000%'
        JOIN ADMROLE REG 
          ON VCINV.IQREGIONID = REG.IQID 
            AND REG.IQDELETED=0 
            AND A.IQREGIONID = REG.IQID 
            AND REG.NAME IN ('Private Debt & Equity')
        JOIN VCINVESTINSTYPE INVTYP 
          ON INVTYP.IQID = INVINS.INVESTINSTYPE 
            AND INVTYP.IQDELETED=0
            AND INVTYP.DESCR NOT LIKE 'Loan%'
    WHERE INVINS.IQDELETED = 0 
      AND INVINS.USERTEXT21 = 1                            -- Filter for Fund records only 
      AND A.IQDELETED=0 
      AND A.CLOSEDATE <= " & DML(%DATE) & " 
      AND ??FILTER
      --AND SFA.IQID = 'B0ACCC563F45405AA437C41B87DAE124'   --Testing IRR AMES                                                                                                                                                                                                                                                                                                                                                                                                                                                
    GROUP BY  INVINS.ACCOUNTINS   
    ORDER BY 9     
" ;    
COLUMN SECURITY_ID;     
RUN;
//PROC PRINT DATA =  WORK.INVSTINS_EQ; RUN;  

// This query gets Prior Investment Amounts
DATA WORK.Prior_Period_InvestAmts;
     SQL "SELECT sum(A.AMOUNT2 * -1)    INVESTMENT
               , min(A.account)         Account 
               , MIN(INVINS.ACCOUNTINS) SECURITY_ID
            FROM VCINVESTMENTINS INVINS 
                JOIN VCINVESTMENT VCINV 
                  ON VCINV.IQID = INVINS.INVESTMENT 
                    AND VCINV.IQDELETED=0                                                                                                                                                                                                                                                                                                                                                                                                                                                 
                JOIN VCPORTFOLIOASSET VCPRTAST 
                  ON VCPRTAST.INVESTMENT = VCINV.IQID  
                    AND  VCPRTAST.IQDELETED=0  
                JOIN VCPORTFOLIO VCPRT 
                  ON VCPRT.IQID = VCPRTAST.PORTFOLIO 
                    AND VCPRT.PORTFOLIO IN ('PDE - Direct Equity') 
                    AND VCPRT.IQDELETED=0  
                JOIN VCINVESTMENTOP A  
                  ON A.INVESTMENTINS = INVINS.IQID 
                JOIN VCINVESTOPTYPE OPT 
                   ON OPT.CODE = A.TYPEINVESTOP
                    AND OPT.DESCR like 'EQ - Purchase/Subscription (w/o Commitment)%' 
                    AND OPT.FILTER NOT LIKE '000000%'
                JOIN ADMROLE REG 
                  ON VCINV.IQREGIONID = REG.IQID 
                    AND REG.IQDELETED=0 
                    AND A.IQREGIONID = REG.IQID 
                    AND REG.NAME IN ('Private Debt & Equity')
                JOIN VCINVESTINSTYPE INVTYP 
                  ON INVTYP.IQID = INVINS.INVESTINSTYPE 
                    AND INVTYP.IQDELETED=0
                    AND INVTYP.DESCR NOT LIKE 'Loan%'
            WHERE INVINS.IQDELETED = 0 
              AND INVINS.USERTEXT21 = 1                            -- Filter for Fund records only 
              AND A.IQDELETED=0 
              AND A.CLOSEDATE <= " & DML(%IRR_Pre_Qtr) & " 
              AND ??FILTER
            GROUP BY  INVINS.ACCOUNTINS       
" ;
COLUMN INVESTMENT;     
RUN;
//PROC PRINT DATA=WORK.Prior_Period_InvestAmts; RUN;   

//Merge Prior Period Amounts 
DATA WORK.INVSTINS_Amt;
  MERGE WORK.INVSTINS_EQ(IN=IN1) WORK.Prior_Period_InvestAmts(IN=IN2);
//  MERGE WORK.Prior_Period_InvestAmts(IN=IN1) WORK.INVSTINS_EQ(IN=IN2);
  BY Account SECURITY_ID INVESTMENT;
  If not (IN1 and IN2) then Output;
    else Output;
  End;
RUN;
//PROC PRINT DATA=WORK.INVSTINS_Amt; RUN;

//The following code puts back records that did not join in the Merge for Investment Amounts 
DATA WORK.INVSTINS_EQ;
  MERGE WORK.INVSTINS_EQ(IN=IN1) WORK.INVSTINS_Amt(IN=IN2);
  BY Account SECURITY_ID INVESTMENT;
  If  (IN1 and IN2) then output;
    else 
       INVESTMENT=0;
       Output;
  End;
RUN;
//PROC PRINT DATA=WORK.INVSTINS_EQ; RUN;

DATA WORK.INVSTINS_EQ;
SET WORK.INVSTINS_EQ (WHERE(PORTFOLIO is not null));
RUN;
//PROC PRINT DATA=WORK.INVSTINS_EQ; RUN;

//--------------------------------------------------------------------------------------
// Get data based on Report date "Current"
DATA WORK.INSTRPOS_EQ (KEEP = POSITION_DATE COMPANY_NAME SECURITY_NAME EXIT LASTVALUATION SECURITY_ID );
  SET DCE.REFINSTRUMENTPOSITIONS (WHERE POSITION_DATE=%DATE 
                                    AND SECURITY_CLASS_NAME <> "LOANS" 
                                    AND LENGTH(COMPANY_NAME)>0 );
   @COLUMN_EXIT = Nz(@COLUMN_EXIT,0) + Nz(INTERNALTRANS,0);
RUN;

// Rename LASTVALUATION to Current_LASTVALUATION this field will be used in the Dashboard
DATA WORK.INSTRPOS_EQ(RENAME = (LASTVALUATION = Current_LASTVALUATIONS));
  SET WORK.INSTRPOS_EQ;
RUN;

//Calc engine returns Prior period Values all that we needed is the LASTVALUATION and CURRENTCOST value
// BGT 2018-07-13: Upgrade issue, EXIT column from calc engine doesn't include INTERNALTRANS anymore
DATA WORK.Prior_INSTRPOS_EQ (KEEP = POSITION_DATE COMPANY_NAME SECURITY_NAME CURRENTCOST LASTVALUATION SECURITY_ID );
  SET DCE.REFINSTRUMENTPOSITIONS (WHERE POSITION_DATE=%IRR_Pre_Qtr 
                                    AND SECURITY_CLASS_NAME <> "LOANS" 
                                    AND LENGTH(COMPANY_NAME)>0 );
   @COLUMN_EXIT = Nz(@COLUMN_EXIT,0) + Nz(INTERNALTRANS,0);
RUN;

// Let's Merge the Data 
DATA WORK.DIREQUITY_LIST; //(RENAME = (SECURITY_ID=SECURITY_COMPANY_ID POSITION_DATE=REFERENCE_DATE));
  MERGE WORK.INVSTINS_EQ(IN=IN1) WORK.INSTRPOS_EQ(IN=IN2);
  BY SECURITY_ID;
  If (IN1 and IN2) then Output;
  End;
RUN; 
//PROC PRINT DATA = work.DIREQUITY_LIST; RUN;

DATA WORK.DIREQUITY_LIST(RENAME = (SECURITY_ID=SECURITY_COMPANY_ID POSITION_DATE=REFERENCE_DATE));
  MERGE WORK.DIREQUITY_LIST(IN=IN1) WORK.Prior_INSTRPOS_EQ(IN=IN2);
  BY SECURITY_ID;
  If (IN1 and IN2) then Output;
  End;
RUN; 
//PROC PRINT DATA = work.DIREQUITY_LIST; RUN;
//--------------------------------------------------------------------------------------

// query returns: FUND_ID FUND INVESTORNAME GL_COST_ELIM GAAP_BOOK_VALUE LASTVALUATION REMAININGCOMMITMENT GAAP_INCOME_ITD Q_CUSIP 
PROC FAQUERY Query="IT Admin - Program Queries\Positions-PortRev" (DATE = %Date) ; // Date
    TABLE "Default"  OUT=WORK.QRY_POSITIONS_PORTREV;
RUN;
//PROC PRINT DATA=WORK.QRY_POSITIONS_PORTREV; RUN;

DATA WORK.QRY_POSITIONS_PORTREV(DROP = LASTVALUATION);
  SET WORK.QRY_POSITIONS_PORTREV;
  COLUMN CUSIP TYPE=STRING; 
  CUSIP = ltrim(rtrim(Q_CUSIP)); 
RUN;

DATA WORK.DIREQUITY_LIST;
  MERGE WORK.DIREQUITY_LIST(IN=IN1) WORK.QRY_POSITIONS_PORTREV;
  BY CUSIP  ;
  If (IN1) then Output;
  End;
RUN; 

DATA WORK.DIREQUITY_LIST(DROP=FUND_ID FUND INVESTORNAME GAAP_BOOK_VALUE GL_COST_ELIM );
  SET WORK.DIREQUITY_LIST;
    IF LP_TYPE = 'Fund' THEN CURRENTCOST = GAAP_BOOK_VALUE + GL_COST_ELIM; END; // DD 11/6/2018 removed for testing only
RUN;
//PROC PRINT; put dml(%IRR_Pre_Qtr); RUN;

// returns the follwoing data:  SECURITY_COMPANY_ID REFERENCE_DATE SECURITY_NAME COMPANY_NAME IRRNET 
PROC MEANS DATA = DCE.FV_T_PORTCO_TRANSACTIONS(WHERE REFERENCE_DATE <= %IRR_Pre_Qtr 
                                                 AND TRANSACTION_TYPE <> 'LN05' 
                                                 AND TRANSACTION_TYPE <> 'LN07' 
                                                 AND TRANSACTION_TYPE <> 'EQ06'
                                               ) OUT = WORK.TIRR_EQ;
  CLASS SECURITY_COMPANY_ID REFERENCE_DATE; 
  VAR  SECURITY_NAME; 
  VAR  COMPANY_NAME;     
  SUM CASH2(NAME=IRRNET);
RUN; 
//proc print data = WORK.TIRR_EQ; run;
//PROC PRINT DATA=WORK.DIREQUITY_LIST; RUN;

// output data fields;  SECURITY_COMPANY_ID REFERENCE_DATE SECURITY_NAME COMPANY_NAME IRRNET 
PROC MEANS DATA =  WORK.DIREQUITY_LIST OUT=WORK.TVALUATION_EQ;
  CLASS SECURITY_COMPANY_ID REFERENCE_DATE; 
  VAR  SECURITY_NAME;  
  VAR  COMPANY_NAME;     
  SUM LASTVALUATION(NAME=IRRNET);
RUN; 
//PROC PRINT DATA=WORK.TVALUATION_EQ; RUN;

DATA WORK.TIRR_EQ;
  SET  WORK.TIRR_EQ(IN=T1) WORK.TVALUATION_EQ; 
  IF IRRNET IS NULL THEN IRRNET = 0; 
  END; 
  COLUMN SORT_IRR TYPE=INTEGER; 
  IF T1 
    THEN SORT_IRR=0;  
    ELSE SORT_IRR=1; 
       REFERENCE_DATE = %DATE; //%IRR_Pre_Qtr;     // 10/12 DD added prior date %DATE;
  END; 
  _OUTPUT_ = IRRNET <> 0 OR SORT_IRR = 1;
RUN; 
//PROC PRINT DATA=WORK.TIRR_EQ; RUN;

PROC SORT DATA = WORK.TIRR_EQ; 
  BY SECURITY_COMPANY_ID SECURITY_NAME COMPANY_NAME SORT_IRR REFERENCE_DATE; 
RUN; 

DATA WORK.DIREQUITY_LIST1_QTR;
  MERGE WORK.DIREQUITY_LIST(IN=IN1) WORK.TIRR_EQ(IN=IN2);
  By SECURITY_COMPANY_ID;
  If (IN1 and IN2) then Output;
  End;
RUN;
//proc print data = WORK.DIREQUITY_LIST1_QTR; run;
                                                                                                                                                                                    
DATA DIREQUITY_LIST1_QTR; 
  SET WORK.DIREQUITY_LIST1_QTR;  
  COLUMN TOTALVALUE TYPE=FLOAT; 
  TOTALVALUE= EXIT + LASTVALUATION;                                                                                                                                                                                     
RUN;  
//PROC PRINT DATA = WORK.DIREQUITY_LIST1_QTR; RUN; 
/*------------------6. Direct LLC Corps-----------*/ 

/*------------------6a. Direct C Corps-------------*/ 
%LET DATE=%IRR_Pre_Qtr;
DATA WORK.INVSTINS_EQ;
    SQL "SELECT MIN(INVINS.ACCOUNTINS)     INVINS_ACCOUNTINS, 
           SUM( (CASE 
                   WHEN OPT.DESCR like 'EQ - Purchase/Subscription (w/o Commitment)%'
                     THEN A.AMOUNT2
                   ELSE 0 
                 END 
                )*(-1)
              )                  INVESTMENT, 
           MIN(A.Account)        Account,   
           DATEPART(YYYY,MIN(A.CLOSEDATE)) INV_YEAR,
           MIN(VCPRT.PORTFOLIO)         as PORTFOLIO
         , MIN (A.CURRENCY6)               INST_CURR
         , MIN(SFA.NAME)                AS SPONSOR,
        (case  
           when MIN(SFASTAT.DESCR) like 'Exited Portfolio Co.%' 
             then '0' else '1' 
           end 
        )                                  as CMPACTIVESTATUS,
        (case  
           when MIN(SFASTAT.DESCR) like 'Exited Portfolio Co.%' 
             then 'Exited' 
               else 'Active' 
         end 
        )                                  as CMPSTATUS_DashBrd,
        MIN(INVINS.USERTEXT46)                INSTR_STATUS,        --- DD 2018_02_28 added new field base on Ticket ITM0251960
        MIN(SFA_CMP.NAME)                     COMPANY
      , MIN(SFA_CMP.CREATIONDATE)             CREATIONDATE 
      , MIN(ltrim(rtrim(INVINS.LIBELLE)))     FUND
      , MIN(ltrim(rtrim(INVINS.usertext23)))  Cusip 
      , (case 
		   when MIN(INVINS.USERTEXT21) = 1 then 'Fund'             -- will only get Funds has been filtered below 
		   when MIN(INVINS.USERTEXT21) = 2 then 'Company' 
         end
        )                                 as LP_TYPE,
        CASE MIN(VCP.USERTEXT30)
            WHEN '1' THEN 'Voting Member'
            WHEN '2' THEN 'Non-Voting Member'
            WHEN '3' THEN 'Observation Rights'
            WHEN '4' THEN 'None'
           -- else 'N\A'
        END                                 AS BOARD_RIGHTS
      , MIN(INVINS.CURRENCY1) CURRENCY,
       (case 
            when MIN(INVINS.USERTEXT41) = '1' then 'Debt Hedge Fund' 
            when MIN(INVINS.USERTEXT41) = '2' then 'Alternatives Preferred Stock' 
            when MIN(INVINS.USERTEXT41) = '3' then 'Senior Secured Loan' 
            when MIN(INVINS.USERTEXT41) = '4' then 'Subordinated Loan' 
            when MIN(INVINS.USERTEXT41) = '5' then 'Distressed Debt' 
            when MIN(INVINS.USERTEXT41) = '6' then 'Real Asset Debt' 
            when MIN(INVINS.USERTEXT41) = '7' then 'Senior Secured Loan' 
            when MIN(INVINS.USERTEXT41) = '8' then 'Subordinated Loan/Mezzanine Funds' 
            when MIN(INVINS.USERTEXT41) = '9' then 'Senior Secured Loan' 
            when MIN(INVINS.USERTEXT41) = '10' then 'Subordinated Loan' 
            when MIN(INVINS.USERTEXT41) = '11' then 'Senior Secured Loan' 
            when MIN(INVINS.USERTEXT41) = '12' then 'Subordinated Loan' 
            when MIN(INVINS.USERTEXT41) = '13' then 'Equity Hedge Fund' 
            when MIN(INVINS.USERTEXT41) = '14' then 'Alternatives Common Stock' 
            when MIN(INVINS.USERTEXT41) = '15' then 'Alternatives Preferred Stock' 
            when MIN(INVINS.USERTEXT41) = '16' then 'Warrants' 
            when MIN(INVINS.USERTEXT41) = '17' then 'Buyout' 
            when MIN(INVINS.USERTEXT41) = '18' then 'Growth' 
            when MIN(INVINS.USERTEXT41) = '19' then 'Real Asset Equity' 
            when MIN(INVINS.USERTEXT41) = '20' then 'Secondary' 
            when MIN(INVINS.USERTEXT41) = '21' then 'Venture Capital' 
            when MIN(INVINS.USERTEXT41) = '22' then 'Structured Alternatives Common Stock' 
            when MIN(INVINS.USERTEXT41) = '23' then 'Structured Alternatives Preferred Stock' 
            when MIN(INVINS.USERTEXT41) = '24' then 'Senior Loan' 
            when MIN(INVINS.USERTEXT41) = '25' then 'Subordinated Loan' 
        end) as Security        
    FROM VCINVESTMENTINS INVINS 
        JOIN VCINVESTMENT VCINV 
          ON VCINV.IQID = INVINS.INVESTMENT 
            AND VCINV.IQDELETED=0                                                                                                                                                                                                                                                                                                                                                                                                                                                 
          LEFT JOIN (SELECT  ACCOUNT, MAX(USERTEXT7) USERTEXT7, MAX(USERDATE5) USERDATE5, MAX(USERTEXT30) USERTEXT30 
                       FROM VCPROJECT VCP1 
                       WHERE VCP1.IQDELETED=0 
                         AND VCP1.WORKFLOW = (SELECT TOP 1 IQID FROM ADMWORKFLOW WHERE LIBELLE IN ('RGA Direct Mezzanine','RGA Equity Co-Investment'))  
                       GROUP BY ACCOUNT                  
                    ) VCP 
            ON VCP.ACCOUNT = VCINV.ACCOUNT                                                                                                                                                                                                                                                                                                                                                                                                                                                    
        LEFT JOIN SFAACCOUNT SFA 
          ON SFA.IQID = VCP.USERTEXT7 
            AND SFA.IQDELETED=0  
        LEFT JOIN SFAACCOUNT SFA_CMP 
          ON SFA_CMP.IQID = VCINV.ACCOUNT  
            AND SFA_CMP.IQDELETED=0                                                                                                                                                                                            
        LEFT JOIN SFAACCTSTAT SFASTAT 
          ON SFA_CMP.STATUS = SFASTAT.CODE 
            AND  SFASTAT.FILTER NOT LIKE '000%'                                                                                                                                                                                                    
        JOIN VCPORTFOLIOASSET VCPRTAST 
          ON VCPRTAST.INVESTMENT = VCINV.IQID  
            AND  VCPRTAST.IQDELETED=0  
        JOIN VCPORTFOLIO VCPRT 
          ON VCPRT.IQID = VCPRTAST.PORTFOLIO 
            AND VCPRT.PORTFOLIO IN ('PDE - Direct Equity') 
            AND  VCPRT.IQDELETED=0  
        LEFT JOIN VCINVESTMENTOP A  
          ON A.INVESTMENTINS=INVINS.IQID 
        LEFT JOIN VCINVESTOPTYPE OPT 
          ON OPT.CODE = A.TYPEINVESTOP 
            AND OPT.DESCR like 'EQ - Purchase/Subscription (w/o Commitment)%' 
            AND OPT.FILTER NOT LIKE '000000%'
        JOIN ADMROLE REG 
          ON VCINV.IQREGIONID = REG.IQID 
            AND REG.IQDELETED=0 
            AND A.IQREGIONID = REG.IQID 
            AND REG.NAME IN ('Private Debt & Equity')
        JOIN VCINVESTINSTYPE INVTYP 
          ON INVTYP.IQID = INVINS.INVESTINSTYPE 
            AND INVTYP.IQDELETED=0
            AND INVTYP.DESCR NOT LIKE 'Loan%'
    WHERE INVINS.IQDELETED = 0 
      AND INVINS.USERTEXT21 = 2                            -- Filter for Company records only 
      AND A.IQDELETED=0 
      AND A.CLOSEDATE <= " & DML(%DATE) & " 
      AND ??FILTER
    GROUP BY  INVINS.ACCOUNTINS   
    ORDER BY 9 --INVINS.ACCOUNTINS     
" ;    
COLUMN SECURITY_ID;     
RUN;
//PROC PRINT DATA =  WORK.INVSTINS_EQ; RUN;  

// This query gets Prior Investment Amounts
DATA WORK.Prior_Period_InvestAmts;
     SQL "SELECT 
               SUM(A.AMOUNT2 * (-1)) INVESTMENT 
             , MIN(A.Account)        Account
             , MIN(INVINS.ACCOUNTINS) SECURITY_ID
      FROM VCINVESTMENTINS INVINS 
        JOIN VCINVESTMENT VCINV 
          ON VCINV.IQID = INVINS.INVESTMENT 
            AND VCINV.IQDELETED=0                                                                                                                                                                                                                                                                                                                                                                                                                                                 
        JOIN VCPORTFOLIOASSET VCPRTAST 
          ON VCPRTAST.INVESTMENT = VCINV.IQID  
            AND  VCPRTAST.IQDELETED=0  
        JOIN VCPORTFOLIO VCPRT 
          ON VCPRT.IQID = VCPRTAST.PORTFOLIO 
            AND VCPRT.PORTFOLIO IN ('PDE - Direct Equity') 
            AND  VCPRT.IQDELETED=0  
        -- LEFT 
        JOIN VCINVESTMENTOP A  
          ON A.INVESTMENTINS=INVINS.IQID 
        -- LEFT 
        JOIN VCINVESTOPTYPE OPT 
          ON OPT.CODE = A.TYPEINVESTOP 
            AND OPT.DESCR like 'EQ - Purchase/Subscription (w/o Commitment)%' 
            AND OPT.FILTER NOT LIKE '000000%'
        JOIN ADMROLE REG 
          ON VCINV.IQREGIONID = REG.IQID 
            AND REG.IQDELETED=0 
            AND A.IQREGIONID = REG.IQID 
            AND REG.NAME IN ('Private Debt & Equity')
        JOIN VCINVESTINSTYPE INVTYP 
          ON INVTYP.IQID = INVINS.INVESTINSTYPE 
            AND INVTYP.IQDELETED=0
            AND INVTYP.DESCR NOT LIKE 'Loan%'
    WHERE INVINS.IQDELETED = 0 
      AND INVINS.USERTEXT21 = 2                            -- Filter for Company records only 
      AND A.IQDELETED=0 
      AND A.CLOSEDATE <= " & DML(%IRR_Pre_Qtr) & " 
      AND ??FILTER
    GROUP BY  INVINS.ACCOUNTINS   
" ;
COLUMN INVESTMENT;     
RUN;
// PROC PRINT DATA=WORK.Prior_Period_InvestAmts; RUN;   

//Merge Prior Period Amounts 
DATA WORK.INVSTINS_Amt;
  MERGE WORK.INVSTINS_EQ(IN=IN1) WORK.Prior_Period_InvestAmts(IN=IN2);
  BY Account SECURITY_ID INVESTMENT;
  If not (IN1 and IN2) then Output;
    else Output;
  End;
RUN;
//PROC PRINT DATA=WORK.INVSTINS; RUN;

//The followups puts back records that did not join in the Merge for Investment Amounts 
DATA WORK.INVSTINS_EQ;
  MERGE WORK.INVSTINS_EQ(IN=IN1) WORK.INVSTINS_Amt(IN=IN2);
  BY Account SECURITY_ID INVESTMENT;
  If (IN1 and IN2) then Output;
    else 
       INVESTMENT=0;
       Output;
  End;
RUN;
//PROC PRINT DATA=WORK.INVSTINS; RUN;

DATA WORK.INVSTINS_EQ;
  SET WORK.INVSTINS_EQ (WHERE(PORTFOLIO is not null));
RUN;
//PROC PRINT DATA=WORK.INVSTINS_EQ; RUN;
//proc print; put 'Calc Eng Date';run;
//proc print; put DML(%IRR_Pre_Qtr);run;

//----------------------------------------------------------------------------------------
%LET DATE=%ORIG_DATE;
// BGT 2018-07-13: Upgrade issue, EXIT column from calc engine doesn't include INTERNALTRANS anymore
DATA WORK.INSTRPOS_EQ (KEEP = POSITION_DATE COMPANY_NAME SECURITY_NAME EXIT LASTVALUATION SECURITY_ID );
  SET DCE.REFINSTRUMENTPOSITIONS (WHERE POSITION_DATE=%DATE 
                                    AND SECURITY_CLASS_NAME <> "LOANS" 
                                    AND LENGTH(COMPANY_NAME)>0 );
   @COLUMN_EXIT = Nz(@COLUMN_EXIT,0) + Nz(INTERNALTRANS,0);
RUN;
// Rename LASTVALUATION to Current_LASTVALUATION this field will be used in the Dashboard
DATA WORK.INSTRPOS_EQ(RENAME = (LASTVALUATION = Current_LASTVALUATIONS));
  SET WORK.INSTRPOS_EQ;
RUN;
%LET DATE=%IRR_Pre_Qtr;
//Calc engine returns Prior period Values all that we needed is the LASTVALUATION value
// BGT 2018-07-13: Upgrade issue, EXIT column from calc engine doesn't include INTERNALTRANS anymore
DATA WORK.Prior_INSTRPOS_EQ (KEEP = POSITION_DATE COMPANY_NAME SECURITY_NAME CURRENTCOST LASTVALUATION SECURITY_ID );
  SET DCE.REFINSTRUMENTPOSITIONS (WHERE POSITION_DATE=%IRR_Pre_Qtr 
                                    AND SECURITY_CLASS_NAME <> "LOANS" 
                                    AND LENGTH(COMPANY_NAME)>0 );
   @COLUMN_EXIT = Nz(@COLUMN_EXIT,0) + Nz(INTERNALTRANS,0);
RUN;
// Let's Merge the Data 
DATA WORK.DIREQUITY_LIST; //(RENAME = (SECURITY_ID=SECURITY_COMPANY_ID POSITION_DATE=REFERENCE_DATE));
  MERGE WORK.INVSTINS_EQ(IN=IN1) WORK.INSTRPOS_EQ(IN=IN2);
  BY SECURITY_ID;
  If (IN1 and IN2) then Output;
  End;
RUN; 
//PROC PRINT DATA = work.DIREQUITY_LIST; RUN;
DATA WORK.DIREQUITY_LIST(RENAME = (SECURITY_ID=SECURITY_COMPANY_ID POSITION_DATE=REFERENCE_DATE));
  MERGE WORK.DIREQUITY_LIST(IN=IN1) WORK.Prior_INSTRPOS_EQ(IN=IN2);
  BY SECURITY_ID;
  If (IN1 and IN2) then Output;
  End;
RUN; 
//PROC PRINT DATA = work.DIREQUITY_LIST; RUN;

//--------------------------------------------------------------------------------------
//Proc print; put 'Query Date';run;
//Proc print; put dml(%Date);run;
// query returns: FUND_ID FUND INVESTORNAME GL_COST_ELIM GAAP_BOOK_VALUE LASTVALUATION REMAININGCOMMITMENT GAAP_INCOME_ITD Q_CUSIP 
PROC FAQUERY Query="IT Admin - Program Queries\Positions-PortRev" (DATE = %IRR_Pre_Qtr) ; // Date
    TABLE "Default"  OUT=WORK.QRY_POSITIONS_PORTREV;
RUN;
//PROC PRINT DATA=WORK.QRY_POSITIONS_PORTREV; RUN;

DATA WORK.QRY_POSITIONS_PORTREV(DROP = LASTVALUATION);
  SET WORK.QRY_POSITIONS_PORTREV;
  COLUMN CUSIP TYPE=STRING; 
  CUSIP = ltrim(rtrim(Q_CUSIP)); 
RUN;

DATA WORK.DIREQUITY_LIST;
  MERGE WORK.DIREQUITY_LIST(IN=IN1) WORK.QRY_POSITIONS_PORTREV;
  BY CUSIP  ;
  If (IN1) then Output;
  End;
RUN; 

DATA WORK.DIREQUITY_LIST(DROP=FUND_ID FUND INVESTORNAME GAAP_BOOK_VALUE GL_COST_ELIM );
SET WORK.DIREQUITY_LIST;
RUN;

%let Date = %ORIG_DATE;
// returns the follwoing data:  SECURITY_COMPANY_ID REFERENCE_DATE SECURITY_NAME COMPANY_NAME IRRNET 
PROC MEANS DATA = DCE.FV_T_PORTCO_TRANSACTIONS(WHERE REFERENCE_DATE <= %Date  //%IRR_Pre_Qtr 
                                                 AND TRANSACTION_TYPE<>'LN05'  // Other  Income (Accretion/Amortization
                                                 AND TRANSACTION_TYPE<>'LN07'  // Upfront Origination Fee Income
                                                 AND TRANSACTION_TYPE<>'EQ06') // Upfront Origination Fee Income
                  OUT=WORK.TIRR_EQ;
  CLASS SECURITY_COMPANY_ID REFERENCE_DATE; 
  VAR  SECURITY_NAME; 
  VAR  COMPANY_NAME;     
  SUM CASH2(NAME=IRRNET);
RUN; 
//proc print data = WORK.TIRR_EQ; run;
//PROC PRINT DATA=WORK.DIREQUITY_LIST; RUN;

// output data fields;  SECURITY_COMPANY_ID REFERENCE_DATE SECURITY_NAME COMPANY_NAME IRRNET 
PROC MEANS DATA =  WORK.DIREQUITY_LIST OUT=WORK.TVALUATION_EQ;
  CLASS SECURITY_COMPANY_ID REFERENCE_DATE; 
  VAR  SECURITY_NAME;  
  VAR  COMPANY_NAME;     
  SUM LASTVALUATION(NAME=IRRNET);
RUN; 
//proc print; put 'TAB 6a -- WORK.TVALUATION_EQ'; run;
PROC PRINT DATA=WORK.TVALUATION_EQ;title 'TAB 6a -- WORK.TVALUATION_EQ'; RUN;

DATA WORK.TIRR_EQ;
  SET  WORK.TIRR_EQ(IN=T1) WORK.TVALUATION_EQ; 
  IF IRRNET IS NULL THEN IRRNET = 0; 
  END; 
  COLUMN SORT_IRR TYPE=INTEGER; 
  IF T1 
    THEN SORT_IRR=0;  
    ELSE SORT_IRR=1; 
       REFERENCE_DATE = %DATE; ///////%IRR_Pre_Qtr;     // 10/12 DD added prior date %DATE;
  END; 
  _OUTPUT_ = IRRNET <> 0 OR SORT_IRR = 1;
RUN; 
//PROC PRINT DATA=WORK.TIRR_EQ; RUN;

PROC SORT DATA = WORK.TIRR_EQ; 
  BY SECURITY_COMPANY_ID SECURITY_NAME COMPANY_NAME SORT_IRR REFERENCE_DATE; 
RUN; 

DATA WORK.DIREQUITY_LIST1_C_CORP_QTR;
  MERGE WORK.DIREQUITY_LIST(IN=IN1) WORK.TIRR_EQ(IN=IN2);
  By SECURITY_COMPANY_ID;
  If (IN1 and IN2) then Output;
  End;
RUN;
//-----------------------------------------------------------------------------
/*------------------ Direct Equity C Corp IRR-----------*/    
%let Date = %ORIG_DATE;
DATA WORK.INVSTINS_EQ_IRR;
    SQL "SELECT MIN(INVINS.ACCOUNTINS) INVINS_ACCOUNTINS, 
      SUM( (CASE WHEN OPT.DESCR like 'EQ - Purchase/Subscription (w/o Commitment)%'
               THEN A.AMOUNT2 ELSE 0 END )*(-1)) INVESTMENT, 
    
    DATEPART(YYYY,MIN(A.CLOSEDATE)) INV_YEAR,
        MIN(VCPRT.PORTFOLIO) as PORTFOLIO, MIN (A.CURRENCY6) INST_CURR, MIN(SFA.NAME) AS SPONSOR,
        (case  when MIN(SFASTAT.DESCR) like 'Exited Portfolio Co.%' 
           then '0' 
           else '1' 
         end ) as 'CMPACTIVESTATUS',
        (case  when MIN(SFASTAT.DESCR) like 'Exited Portfolio Co.%' 
           then 'Exited' 
           else 'Active' 
         end ) as 'CMPSTATUS_DashBrd',
        MIN(INVINS.USERTEXT46) INSTR_STATUS,        --- DD 2018_02_28 added new field base on Ticket ITM0251960
        MIN(SFA_CMP.NAME)  COMPANY, MIN(SFA_CMP.CREATIONDATE) CREATIONDATE , MIN(ltrim(rtrim(INVINS.LIBELLE))) FUND, MIN(ltrim(rtrim(INVINS.usertext23))) Cusip, 
        (case 
 		   when MIN(INVINS.USERTEXT21) = 1 then 'Fund' 
		   when MIN(INVINS.USERTEXT21) = 2 then 'Company' 
        end) as LP_TYPE,
        CASE MIN(VCP.USERTEXT30)
            WHEN '1' THEN 'Voting Member'
            WHEN '2' THEN 'Non-Voting Member'
            WHEN '3' THEN 'Observation Rights'
            WHEN '4' THEN 'None'
        END AS BOARD_RIGHTS, MIN(INVINS.CURRENCY1) CURRENCY,
       (case 
            when MIN(INVINS.USERTEXT41) = '1' then 'Debt Hedge Fund' 
            when MIN(INVINS.USERTEXT41) = '2' then 'Alternatives Preferred Stock' 
            when MIN(INVINS.USERTEXT41) = '3' then 'Senior Secured Loan' 
            when MIN(INVINS.USERTEXT41) = '4' then 'Subordinated Loan' 
            when MIN(INVINS.USERTEXT41) = '5' then 'Distressed Debt' 
            when MIN(INVINS.USERTEXT41) = '6' then 'Real Asset Debt' 
            when MIN(INVINS.USERTEXT41) = '7' then 'Senior Secured Loan' 
            when MIN(INVINS.USERTEXT41) = '8' then 'Subordinated Loan/Mezzanine Funds' 
            when MIN(INVINS.USERTEXT41) = '9' then 'Senior Secured Loan' 
            when MIN(INVINS.USERTEXT41) = '10' then 'Subordinated Loan' 
            when MIN(INVINS.USERTEXT41) = '11' then 'Senior Secured Loan' 
            when MIN(INVINS.USERTEXT41) = '12' then 'Subordinated Loan' 
            when MIN(INVINS.USERTEXT41) = '13' then 'Equity Hedge Fund' 
            when MIN(INVINS.USERTEXT41) = '14' then 'Alternatives Common Stock' 
            when MIN(INVINS.USERTEXT41) = '15' then 'Alternatives Preferred Stock' 
            when MIN(INVINS.USERTEXT41) = '16' then 'Warrants' 
            when MIN(INVINS.USERTEXT41) = '17' then 'Buyout' 
            when MIN(INVINS.USERTEXT41) = '18' then 'Growth' 
            when MIN(INVINS.USERTEXT41) = '19' then 'Real Asset Equity' 
            when MIN(INVINS.USERTEXT41) = '20' then 'Secondary' 
            when MIN(INVINS.USERTEXT41) = '21' then 'Venture Capital' 
            when MIN(INVINS.USERTEXT41) = '22' then 'Structured Alternatives Common Stock' 
            when MIN(INVINS.USERTEXT41) = '23' then 'Structured Alternatives Preferred Stock' 
            when MIN(INVINS.USERTEXT41) = '24' then 'Senior Loan' 
            when MIN(INVINS.USERTEXT41) = '25' then 'Subordinated Loan' 
        end) as Security
    FROM VCINVESTMENTINS INVINS 
      JOIN VCINVESTMENT VCINV 
        ON VCINV.IQID = INVINS.INVESTMENT 
          AND VCINV.IQDELETED=0 
      LEFT JOIN (SELECT  ACCOUNT, MAX(USERTEXT7) USERTEXT7, MAX(USERDATE5) USERDATE5, MAX(USERTEXT30) USERTEXT30 
                   FROM VCPROJECT VCP1 
                   WHERE VCP1.IQDELETED=0 
                     AND VCP1.WORKFLOW = (SELECT TOP 1 IQID FROM ADMWORKFLOW WHERE LIBELLE IN ('RGA Direct Mezzanine','RGA Equity Co-Investment'))  
                   GROUP BY ACCOUNT                  
                ) VCP 
        ON VCP.ACCOUNT = VCINV.ACCOUNT                                                                                                                                                                                                                                                                                                                                                                                                                                                
      LEFT JOIN SFAACCOUNT SFA 
        ON SFA.IQID = VCP.USERTEXT7 
          AND SFA.IQDELETED=0  
      LEFT JOIN SFAACCOUNT SFA_CMP 
        ON SFA_CMP.IQID = VCINV.ACCOUNT  
          AND SFA_CMP.IQDELETED=0                                                                                                                                                                                            
      LEFT JOIN SFAACCTSTAT SFASTAT 
        ON SFA_CMP.STATUS = SFASTAT.CODE 
          AND  SFASTAT.FILTER NOT LIKE '000%'                                                                                                                                                                                                    
      JOIN VCPORTFOLIOASSET VCPRTAST 
        ON VCPRTAST.INVESTMENT = VCINV.IQID  
          AND  VCPRTAST.IQDELETED=0  
      JOIN VCPORTFOLIO VCPRT 
        ON VCPRT.IQID = VCPRTAST.PORTFOLIO 
          AND VCPRT.PORTFOLIO IN ('PDE - Direct Equity') 
          AND  VCPRT.IQDELETED=0  
      LEFT JOIN VCINVESTMENTOP A  
        ON A.INVESTMENTINS=INVINS.IQID 
      LEFT JOIN VCINVESTOPTYPE OPT 
        ON OPT.CODE = A.TYPEINVESTOP 
          AND OPT.DESCR like 'EQ - Purchase/Subscription (w/o Commitment)%' 
          AND OPT.FILTER NOT LIKE '000000%'
      JOIN ADMROLE REG 
        ON VCINV.IQREGIONID = REG.IQID 
          AND REG.IQDELETED=0 
          AND A.IQREGIONID = REG.IQID 
          AND REG.NAME IN ('Private Debt & Equity')
      JOIN VCINVESTINSTYPE INVTYP 
        ON INVTYP.IQID = INVINS.INVESTINSTYPE 
          AND INVTYP.IQDELETED=0
          AND INVTYP.DESCR NOT LIKE 'Loan%'
    WHERE INVINS.IQDELETED=0 
      AND A.IQDELETED=0 
      AND A.CLOSEDATE <=  " & DML(%DATE) & " 
      AND ??FILTER
    GROUP BY  INVINS.ACCOUNTINS   
    ORDER BY 9     
 " ;  
COLUMN SECURITY_ID;     
RUN;
//PROC PRINT DATA =  WORK.INVSTINS_EQ_IRR; RUN;  
                                                                                                                                                                                                    
// BGT 2018-07-13: Upgrade issue, EXIT column from calc engine doesn't include INTERNALTRANS anymore
DATA WORK.INSTRPOS_EQ_IRR (KEEP = POSITION_DATE COMPANY_NAME SECURITY_NAME EXIT CURRENTCOST LASTVALUATION SECURITY_ID );
  SET DCE.REFINSTRUMENTPOSITIONS 
    (WHERE POSITION_DATE=%DATE 
      AND SECURITY_CLASS_NAME <>"LOANS" 
      AND LENGTH(COMPANY_NAME)>0 );
RUN;
//PROC PRINT DATA = DCE.REFINSTRUMENTPOSITIONS; RUN;

DATA WORK.DIREQUITY_LIST_IRR(RENAME = (SECURITY_ID=SECURITY_COMPANY_ID POSITION_DATE=REFERENCE_DATE));
  MERGE WORK.INVSTINS_EQ_IRR(IN=IN1) WORK.INSTRPOS_EQ_IRR(IN=IN2);
    BY SECURITY_ID;
    If (IN1 and IN2) then Output;
    End;
RUN; 

PROC FAQUERY Query="IT Admin - Program Queries\Positions-PortRev" (DATE=%DATE) ; 
    TABLE "Default"  OUT=WORK.QRY_POSITIONS_PORTREV_IRR;
RUN;
//PROC PRINT DATA=WORK.QRY_POSITIONS_PORTREV_IRR; RUN;

DATA WORK.QRY_POSITIONS_PORTREV_IRR(DROP = LASTVALUATION);
  SET WORK.QRY_POSITIONS_PORTREV_IRR;
  COLUMN CUSIP TYPE=STRING; 
  CUSIP = ltrim(rtrim(Q_CUSIP)) ; 
RUN;

DATA WORK.DIREQUITY_LIST_IRR;
  MERGE WORK.DIREQUITY_LIST_IRR(IN=IN1) WORK.QRY_POSITIONS_PORTREV_IRR;
  BY CUSIP  ;
  If (IN1) then Output;
  End;
RUN; 
//PROC PRINT DATA=WORK.DIREQUITY_LIST_IRR; RUN;

DATA WORK.DIREQUITY_LIST_IRR(DROP=FUND_ID FUND INVESTORNAME GAAP_BOOK_VALUE GL_COST_ELIM );
  SET WORK.DIREQUITY_LIST_IRR;
  IF LP_TYPE = 'Fund' 
    THEN CURRENTCOST = GAAP_BOOK_VALUE + GL_COST_ELIM; 
  END;
RUN;
//PROC PRINT DATA=WORK.DIREQUITY_LIST_IRR; RUN;

PROC MEANS DATA =DCE.FV_T_PORTCO_TRANSACTIONS
  (WHERE REFERENCE_DATE <= %DATE 
     AND TRANSACTION_TYPE <> 'LN05' 
     AND TRANSACTION_TYPE <> 'LN07' 
     AND TRANSACTION_TYPE <> 'EQ06') 
  OUT=WORK.TIRR_EQ_IRR;
  CLASS SECURITY_COMPANY_ID REFERENCE_DATE; 
  VAR  SECURITY_NAME; 
  VAR  COMPANY_NAME;     
  SUM CASH2(NAME=IRRNET);
RUN; 

PROC MEANS DATA =  WORK.DIREQUITY_LIST_IRR OUT=WORK.TVALUATION_EQ_IRR;
  CLASS SECURITY_COMPANY_ID REFERENCE_DATE; 
  VAR  SECURITY_NAME;  
  VAR  COMPANY_NAME;     
  SUM LASTVALUATION(NAME=IRRNET);
RUN; 

DATA WORK.TIRR_EQ_IRR;
  SET  WORK.TIRR_EQ_IRR(IN=T1) WORK.TVALUATION_EQ_IRR; 
  IF IRRNET IS NULL 
    THEN IRRNET=0; 
  END; 
  COLUMN SORT_IRR TYPE=INTEGER; 
  IF T1 
     THEN SORT_IRR=0;  
   ELSE SORT_IRR=1; 
     REFERENCE_DATE=%DATE;
  END; 
  _OUTPUT_=IRRNET <>0 OR SORT_IRR=1;
RUN; 

PROC SORT DATA = WORK.TIRR_EQ_IRR; 
  BY SECURITY_COMPANY_ID SECURITY_NAME COMPANY_NAME SORT_IRR REFERENCE_DATE; 
RUN; 

DATA WORK.DIREQUITY_LIST1_C_CORP_QTR_IRR;
  MERGE WORK.DIREQUITY_LIST_IRR(IN=IN1) WORK.TIRR_EQ_IRR(IN=IN2);
  By SECURITY_COMPANY_ID;
  If (IN1 and IN2) then Output;
  End;
RUN;        
//PROC PRINT DATA = WORK.DIREQUITY_LIST1_IRR; RUN; 
//PROC PRINT DATA = DIREQUITY_LIST1_IRR; RUN;  

/*------------------ Direct Equity C Corp IRR-----------*/ 
DATA WORK.DIREQUITY_LIST1_C_CORP_QTR(DROP=IRRNET );
  SET WORK.DIREQUITY_LIST1_C_CORP_QTR;
RUN;
//PROC PRINT DATA = WORK.DIREQUITY_LIST1_C_CORP_QTR; title 'TAB 6a ----  WORK.DIREQUITY_LIST1_C_CORP_QTR ------'; RUN; 

DATA WORK.DIREQUITY_LIST1_C_CORP_QTR;
  MERGE WORK.DIREQUITY_LIST1_C_CORP_QTR_IRR(IN=IN1) WORK.DIREQUITY_LIST1_C_CORP_QTR(IN=IN2);
  BY CUSIP REFERENCE_DATE;// SECURITY_COMPANY_ID;
  If (IN1 and IN2) then Output;
  End;
RUN; 

//-----------------------------------------------------------------------------
//proc print; put 'TAB 6a -- Output to WORK.DIREQUITY_LIST1_QTR  '; run;
//proc print data = WORK.DIREQUITY_LIST1_QTR; run;
%let Date = %ORIG_DATE;                                                                                                                                                                                    
DATA DIREQUITY_LIST1_C_CORP_QTR; 
  SET WORK.DIREQUITY_LIST1_C_CORP_QTR;  
  COLUMN TOTALVALUE TYPE=FLOAT; 
  TOTALVALUE= EXIT + CURRENT_LASTVALUATIONS; // LASTVALUATION;                                                                                                                                                                                     
RUN;
//PROC PRINT DATA = WORK.DIREQUITY_LIST1_C_CORP_QTR; title 'TAB 6a ----  WORK.DIREQUITY_LIST1_C_CORP_QTR ------'; RUN; 
/*------------------6a. Direct C Corps-------------*/ 







