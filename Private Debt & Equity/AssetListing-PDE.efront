//----------------------------------------------------------------------
// DD 07/18/2018 - Modified all queries that were joining 
//                   by Name filed to now join by Cusip, this was causing
//                   duplicates and missing records
// DD 07/25/2018 - added filter to the creation of the FUND_TRANS 
//                  "(WHERE REG_NAME_MIN <> 'ECI Fund Shadow' )" to remove Shadow Funds 
//                  from tab Year to date Fund Transactions
// DD 07/26/2018 - Replace filters for table VCINVESTOPTYPE, VCFUNDSTAT, VCINVINSRATKIND
//                   , SFAACCTSTAT
//                  where it was filtering on 
//                  text string rather then the code
//               - Remove duplicate records from the the Direct Transaction Cube 
//
//
//----------------------------------------------------------------------

LIBNAME USER ".";

%DEFINE REPORT_DATE;
%DEFINE CALCULATE_IRR;
%DEFINE USE_INVESTEE_CURR;

%PARAM DATE LABEL="As of Date" TYPE=DATE DEFAULT=TODAY;
%LET DATE=%DATE;


//-----------FUNDS-----------
   
DATA WORK.AST_FUND;
    SQL "SELECT VCF.IQID IQID, 
            CASE WHEN REG.NAME = 'ECI Fund Shadow' 
               THEN 'Private Debt & Equity' 
                  ELSE REG.NAME 
            END REGION,
            REG.NAME REG_NAME,      
            'Fund' Investment_Type,
            VCF.FUND Investment_Name, 
           (case when VCF.USERTEXT43 = '1' then 'Debt Hedge Fund' 
                when VCF.USERTEXT43 = '2' then 'Alternatives Preferred Stock' 
                when VCF.USERTEXT43 = '3' then 'Senior Secured Loan' 
                when VCF.USERTEXT43 = '4' then 'Subordinated Loan' 
                when VCF.USERTEXT43 = '5' then 'Distressed Debt' 
                when VCF.USERTEXT43 = '6' then 'Real Asset Debt' 
                when VCF.USERTEXT43 = '7' then 'Senior Secured Loan' 
                when VCF.USERTEXT43 = '8' then 'Subordinated Loan/Mezzanine Funds' 
                when VCF.USERTEXT43 = '9' then 'Senior Secured Loan' 
                when VCF.USERTEXT43 = '10' then 'Subordinated Loan' 
                when VCF.USERTEXT43 = '11' then 'Senior Secured Loan' 
                when VCF.USERTEXT43 = '12' then 'Subordinated Loan' 
                when VCF.USERTEXT43 = '13' then 'Equity Hedge Fund' 
                when VCF.USERTEXT43 = '14' then 'Alternatives Common Stock' 
                when VCF.USERTEXT43 = '15' then 'Alternatives Preferred Stock' 
                when VCF.USERTEXT43 = '16' then 'Warrants' 
                when VCF.USERTEXT43 = '17' then 'Buyout' 
                when VCF.USERTEXT43 = '18' then 'Growth' 
                when VCF.USERTEXT43 = '19' then 'Real Asset Equity' 
                when VCF.USERTEXT43 = '20' then 'Secondary' 
                when VCF.USERTEXT43 = '21' then 'Venture Capital' 
                when VCF.USERTEXT43 = '22' then 'Structured Alternatives Common Stock' 
                when VCF.USERTEXT43 = '23' then 'Structured Alternatives Preferred Stock' 
                when VCF.USERTEXT43 = '24' then 'Senior Loan' 
                when VCF.USERTEXT43 = '25' then 'Subordinated Loan' 
           end) + 
            (case 
                when VCF.USERTEXT44 = '1' then '/Co-Investment' 
                when VCF.USERTEXT44 = '2' then '/Direct Investment' 
                when VCF.USERTEXT44 = '3' then '/Co-Investment' 
                when VCF.USERTEXT44 = '4' then '/Direct Investment' 
                when VCF.USERTEXT44 = '5' then '/Co-Investment' 
                when VCF.USERTEXT44 = '6' then '/Direct Investment' 
                when VCF.USERTEXT44 = '7' then '/Agriculture' 
                when VCF.USERTEXT44 = '8' then '/Energy' 
                when VCF.USERTEXT44 = '9' then '/Infrastructure' 
                when VCF.USERTEXT44 = '10' then '/Real Estate' 
                when VCF.USERTEXT44 = '11' then '/Timber' 
                when VCF.USERTEXT44 = '12' then '/Co-Investment' 
                when VCF.USERTEXT44 = '13' then '/Co-Investment' 
                when VCF.USERTEXT44 = '14' then '/Co-Investment' 
                when VCF.USERTEXT44 = '15' then '/Agriculture' 
                when VCF.USERTEXT44 = '16' then '/Energy' 
                when VCF.USERTEXT44 = '17' then '/Infrastructure' 
                when VCF.USERTEXT44 = '18' then '/Real Estate' 
                when VCF.USERTEXT44 = '19' then '/Timber' 
             else ' '                                                                                                                                                                                
         end) Security_Type,
        (case 
            when VCF.USERTEXT42 = '4' then 'Private Debt Fund' 
            when VCF.USERTEXT42 = '9' then 'Private Equity Fund'
            when VCF.USERTEXT42 = '8' then 'Direct Private Equity'
              else 'unknown'
        end) as  Investment_Type1,                                                                                                                                                                             
        VCF.VINTAGEYEAR Vintage,
        (case 
           when VCF.USERTEXT3 = 'COST' then 'LP Cost Method' 
           when VCF.USERTEXT3 = 'EQUITY' then 'LP Equity Method' 
         end) as Basis,
        VCF.USERTEXT2 CUSIP_SQL , 
        SUB.LIBELLE LEGAL_ENTITY, SUB1.LIBELLE PortfolioName, 
        SUBELT.ALLOCATION,
        ELT_TOT.TOTAL_ALLOC,
        SUBELT.ALLOCATION/ELT_TOT.TOTAL_ALLOC PERC_CALC
        , 'Fund' Instrument 
    FROM VCFUND VCF 
        JOIN VCFUNDSTAT FSTAT 
          ON VCF.FSTATUS = FSTAT.CODE 
             AND (FSTAT.code = 212     -- 'Fund (Closed Ended)'
                   OR FSTAT.code = 215 -- 'Equity Co-Investment (Accounting Only)'
                   OR FSTAT.code = 306 -- 'Exited Fund%'
                 ) 
        JOIN ADMROLE REG 
          ON VCF.IQREGIONID = REG.IQID 
            AND REG.NAME IN ('Private Debt & Equity','ECI Fund Shadow')
        JOIN VCSUBSCRIBER SUB 
          ON VCF.IQID=SUB.FUND 
            AND SUB.IQDELETED=0
        JOIN VCSUBSCRALLOCRULE SUBALLOC 
          ON SUBALLOC.IQID=SUB.SUBSCRALLOCRULE
            AND SUBALLOC.IQDELETED=0
        JOIN VCSUBSCRALLOCRULEELT SUBELT 
          ON SUBELT.SUBSCRALLOCRULE=SUB.SUBSCRALLOCRULE
        JOIN VCSUBSCRALLOCRULE SUBALLOC1 
          ON SUBALLOC1.IQID=SUBELT.SUBSCRALLOCRULE
            AND SUBALLOC1.IQDELETED=0 
        JOIN VCSUBSCRIBER SUB1 
          ON SUB1.FUND=SUBALLOC1.FUND 
            AND SUB1.IQDELETED=0 
            AND SUB1.IQID=SUBELT.SUBSCRIBER
        JOIN (SELECT SUBSCRALLOCRULE SARGrp, SUBSCRALLOCRULESERIE SARSGrp, SUM(ALLOCATION) TOTAL_ALLOC 
                FROM VCSUBSCRALLOCRULEELT 
                GROUP BY SUBSCRALLOCRULE, SUBSCRALLOCRULESERIE
             ) ELT_TOT 
          ON SUBELT.SUBSCRALLOCRULE=ELT_TOT.SARGrp
            AND SUBELT.SUBSCRALLOCRULESERIE=ELT_TOT.SARSGrp
        JOIN VCSUBSCRALLOCRULESERIE SERIE 
          ON SERIE.IQID=SUBELT.SUBSCRALLOCRULESERIE  
            AND SERIE.IQDELETED=0 
            AND SERIE.ALLOCRULE=SUBELT.SUBSCRALLOCRULE
            AND SERIE.REFERENCE_DATE = (SELECT MAX(REFERENCE_DATE) 
                                          from VCSUBSCRALLOCRULESERIE SERIE1 
                                          WHERE SERIE.ALLOCRULE = SERIE1.ALLOCRULE
                                            AND SERIE1.REFERENCE_DATE < " & DML(%DATE) & " 
                                            AND SERIE1.IQDELETED = 0 
                                       )  
    WHERE  VCF.IQDELETED=0 
       AND VCF.USERTEXT2 is not null
   ORDER BY Investment_Type, Investment_Name;    
  ";  
COLUMN IQID ;
RUN;  
//  Proc print; Put 'AST_FUND query output'; RUN;
//  PROC PRINT DATA=WORK.AST_FUND; RUN;

    PROC FAQUERY Query = "IT Admin - Program Queries\Positions" (DATE=%DATE) ; 
	TABLE "Default"  OUT = WORK.QRY_POSITIONS_DATA;
RUN;

DATA WORK.AST_FUND;
MERGE WORK.QRY_POSITIONS_DATA (IN=IN1) WORK.AST_FUND(IN=IN2) ; 
BY IQID LEGAL_ENTITY;         
IF (IN1=IN2) THEN OUTPUT; END;
RUN;     
PROC FORMAT; PICTURE P_Money LOW-HIGH = '0,000.00'; RUN;

DATA WORK.AST_FUND(DROP =  STATUS ALLOCATION SEC_DESC BASE_CURRENCY SEC_CURRENCY POSITION_DATE GL_COST_ELIM GAAP_BOOK_VALUE 
                           MKTVAL_BASE MKTVAL_LOCAL GAIN_LOSS_STAT REAL_GAIN_LOSS_ELIM ALLOCATION ALLOC_PERC);  
SET WORK.AST_FUND ; 
    COLUMN ALLOC_PERC  TYPE=DOUBLE LABEL="Allocated Percent" ;
    IF ALLOCATION IS NULL 
      THEN ALLOC_PERC = 100 ;
        ELSE  ALLOC_PERC = PERC_CALC ; 
    END ; 
    COLUMN BookValue TYPE = DOUBLE FORMAT = P_MONEY.; BookValue = (GAAP_BOOK_VALUE + GL_COST_ELIM) * ALLOC_PERC ; 
    COLUMN MarketValue TYPE = DOUBLE LABEL = "Allocated Mkt Cost" FORMAT=P_MONEY.; MarketValue = MKTVAL_BASE * ALLOC_PERC ;
RUN;
//PROC PRINT DATA=WORK.AST_FUND; RUN;

DATA WORK.AST_FUND;
SET WORK.AST_FUND(WHERE BookValue IS NOT NULL AND BookValue<>0);
RUN;
//PROC PRINT DATA=WORK.AST_FUND; RUN;

//-----------DIRECTS -----------
//INVINS.LIBELLE InstrumentName,  or Issuer Name
DATA WORK.AST_DIRECT;
SQL "SELECT INVINS.ACCOUNTINS, MIN(REG.NAME) REGION,
        (case 
           when MIN(INVINS.USERTEXT40) = '2' then 'Direct Mezzanine' 
           when MIN(INVINS.USERTEXT40) = '7' then 'Direct Equity'                                                                                                                                                                             
        end) as Investment_Type,  
        MIN(SFA_CMP.NAME) Investment_Name,
        MIN(INVINS.SHORTNAME) Instrument,
        (case when MIN(INVINS.USERTEXT41) = '1' then 'Debt Hedge Fund' 
              when MIN(INVINS.USERTEXT41) = '2' then 'Alternatives Preferred Stock' 
              when MIN(INVINS.USERTEXT41) = '3' then 'Senior Secured Loan' 
              when MIN(INVINS.USERTEXT41) = '4' then 'Subordinated Loan' 
              when MIN(INVINS.USERTEXT41) = '5' then 'Distressed Debt' 
              when MIN(INVINS.USERTEXT41) = '6' then 'Real Asset Debt' 
              when MIN(INVINS.USERTEXT41) = '7' then 'Senior Secured Loan' 
              when MIN(INVINS.USERTEXT41) = '8' then 'Subordinated Loan/Mezzanine Funds' 
              when MIN(INVINS.USERTEXT41) = '9' then 'Senior Secured Loan' 
              when MIN(INVINS.USERTEXT41) = '10' then 'Subordinated Loan' 
              when MIN(INVINS.USERTEXT41) = '11' then 'Senior Secured Loan' 
              when MIN(INVINS.USERTEXT41) = '12' then 'Subordinated Loan' 
              when MIN(INVINS.USERTEXT41) = '13' then 'Equity Hedge Fund' 
              when MIN(INVINS.USERTEXT41) = '14' then 'Alternatives Common Stock' 
              when MIN(INVINS.USERTEXT41) = '15' then 'Alternatives Preferred Stock' 
              when MIN(INVINS.USERTEXT41) = '16' then 'Warrants' 
              when MIN(INVINS.USERTEXT41) = '17' then 'Buyout' 
              when MIN(INVINS.USERTEXT41) = '18' then 'Growth' 
              when MIN(INVINS.USERTEXT41) = '19' then 'Real Asset Equity' 
              when MIN(INVINS.USERTEXT41) = '20' then 'Secondary' 
              when MIN(INVINS.USERTEXT41) = '21' then 'Venture Capital' 
              when MIN(INVINS.USERTEXT41) = '22' then 'Structured Alternatives Common Stock' 
              when MIN(INVINS.USERTEXT41) = '23' then 'Structured Alternatives Preferred Stock' 
              when MIN(INVINS.USERTEXT41) = '24' then 'Senior Loan' 
              when MIN(INVINS.USERTEXT41) = '25' then 'Subordinated Loan' 
        end)  Security_Type,    
        (case 
            when MIN(INVINS.USERTEXT40) = '2' then 'Direct Private Debt' 
            when MIN(INVINS.USERTEXT40) = '7' then 'Direct Private Equity'                                                                                                                                                                             
        end) as  Investment_Type1,  
        DATEPART(YYYY,MIN(INVOP.CLOSEDATE)) Vintage,  
        (case 
            when MIN(INVINS.USERTEXT24) = '1' then 'LP Equity' 
            when MIN(INVINS.USERTEXT24) = '2' then 'LP Cost' 
            when MIN(INVINS.USERTEXT24) = '3' then 'Bond Cost' 
            when MIN(INVINS.USERTEXT24) = '4' then 'Com Stk' 
            when MIN(INVINS.USERTEXT24) = '5' then 'Pref Stk' 
            when MIN(INVINS.USERTEXT24) = '6' then 'Warrants'                                                                                                                                                                                                                                                                                                             
        end) as Basis,
        MIN(INVINS.USERTEXT23) CUSIP ,                                                                                                                                                                                                                                                                                  
        MIN(INV.LIBELLE) Investor_Name,  
        VCSUB.LIBELLE PortfolioName,
        MIN(SUBELT.ALLOCATION/ELT_TOT.TOTAL_ALLOC) PERC_CALC
    FROM VCINVESTMENTINS INVINS
        JOIN VCINVESTMENT INV 
          ON INV.IQID = INVINS.INVESTMENT  
            AND  INV.IQDELETED=0
        JOIN VCINVESTMENTOP INVOP  
          ON INVOP.INVESTMENTINS=INVINS.IQID 
        JOIN VCINVESTOPTYPE OPT 
          ON OPT.CODE = INVOP.TYPEINVESTOP 
            AND OPT.FILTER <> '00000000000000000000000000000000' 
            AND (OPT.CODE = 'EQ03'     -- EQ - Purchase/Subscription (w/o Commitment)
                  OR OPT.CODE = 'LN03' -- LN - Funding (w/o commitment)
                )  
        LEFT JOIN VCPROJECT VCP 
          ON  VCP.ACCOUNT = INV.ACCOUNT 
        LEFT JOIN ADMWORKFLOW WRK 
          ON WRK.IQID=VCP.WORKFLOW
        LEFT JOIN SFAACCOUNT SFA 
          ON SFA.IQID = VCP.USERTEXT7                                                                                                                                                                                                                                                                                            
        JOIN SFAACCOUNT SFA_CMP 
          ON SFA_CMP.IQID = INV.ACCOUNT 
            AND SFA_CMP.IQDELETED=0                                                                                                                                                                                      
        JOIN SFAACCTSTAT SFASTAT 
          ON SFA_CMP.STATUS = SFASTAT.CODE 
            AND SFASTAT.FILTER NOT LIKE '000%'
               /* 0809 AND SFASTAT.DESCR not like 'Exited Portfolio Co.%'   */ 
        JOIN ADMROLE REG 
          ON SFA_CMP.IQREGIONID = REG.IQID 
            AND REG.NAME IN ('Private Debt & Equity') 
        LEFT JOIN VCINVESTINSRATE RATE 
          ON RATE.INVESTMENTINS =  INVINS.ACCOUNTINS 
            AND RATE.FIRSTDATE <= " & DML(%DATE) & " 
            AND RATE.LASTDATE >= " & DML(%DATE) & " 
            AND RATE.KIND = 'LNCASH'  --'Loan Cash Interests'
        LEFT JOIN VCBENCHMARK BNMK 
          ON BNMK.IQID=RATE.RATESTABLE                                                                                                                                                                                                   
        LEFT JOIN VCINVESTINSRATE RATEPIK 
          ON RATEPIK.INVESTMENTINS =  INVINS.ACCOUNTINS 
            AND RATEPIK.FIRSTDATE <= " & DML(%DATE) & " 
            AND RATEPIK.LASTDATE >= " & DML(%DATE) & " 
            AND RATEPIK.KIND = 'LNPIK' --'Loan Capitalized Interests'  
        JOIN VCSUBSCRALLOCRULE SUBALLOC 
          ON SUBALLOC.IQID=INVINS.SUBSCRALLOCRULE 
		    AND SUBALLOC.IQDELETED=0 
        JOIN VCSUBSCRALLOCRULEELT SUBELT 
          ON SUBELT.SUBSCRALLOCRULE=INVINS.SUBSCRALLOCRULE
        JOIN VCSUBSCRIBER VCSUB 
          ON VCSUB.IQID = SUBELT.SUBSCRIBER 
		    AND VCSUB.IQDELETED=0
        JOIN (SELECT SUBSCRALLOCRULE SARGrp, SUBSCRALLOCRULESERIE SARSGrp, SUM(ALLOCATION) TOTAL_ALLOC 
                FROM VCSUBSCRALLOCRULEELT 
                GROUP BY SUBSCRALLOCRULE, SUBSCRALLOCRULESERIE
              ) ELT_TOT 
          ON SUBELT.SUBSCRALLOCRULE=ELT_TOT.SARGrp
            AND SUBELT.SUBSCRALLOCRULESERIE=ELT_TOT.SARSGrp
        JOIN VCSUBSCRALLOCRULESERIE SERIE 
          ON SERIE.IQID=SUBELT.SUBSCRALLOCRULESERIE  
		    AND SERIE.IQDELETED=0 
            AND SERIE.ALLOCRULE=SUBELT.SUBSCRALLOCRULE
            AND SERIE.REFERENCE_DATE = (SELECT MAX(REFERENCE_DATE) 
                                          from VCSUBSCRALLOCRULESERIE SERIE1 
                                          WHERE SERIE.ALLOCRULE = SERIE1.ALLOCRULE
                                            AND SERIE1.REFERENCE_DATE < " & DML(%DATE) & " 
                                            AND SERIE1.IQDELETED = 0 ) 
        LEFT JOIN AJXDYNTABLE DYN 
          ON DYN.INVESTMENTINS=INVINS.ACCOUNTINS 
            AND DYN.IQDELETED=0 
            AND DYN.CLASS1 = 'Ratings' 
            AND DYN.METADATE1 <= " & DML(%DATE) & " 
            AND DYN.METADATE2 >= " & DML(%DATE) & "                                                                                                                                                                                                                                                                                                                                      
    WHERE INVINS.IQDELETED=0  
       AND COALESCE(INVINS.USERTEXT21,'2') NOT IN ('1')  /* Not LP/LLC Fund to exclude ECI */
    GROUP BY  INVINS.ACCOUNTINS , VCSUB.LIBELLE
    ORDER BY 3,4 " ;  
COLUMN INSTRUMENTFATHER_ID;  
RUN; 
                                                                                                                                            
DATA WORK.AST_DIRECT_PDE(RENAME=(INSTRUMENTFATHER_ID=SECURITY_COMPANY_ID));
SET WORK.AST_DIRECT;                                        
RUN; 
//PROC PRINT DATA = WORK.AST_DIRECT_PDE; RUN;
                                                                                                                                                                                                                                                                                                                           
DATA WORK.AST_DIRECTPOS(KEEP = INSTRUMENTFATHER_ID INVESTOR_NAME CURRENTCOST);
SET DCE.INSTRUMENTPOSITIONS (WHERE POSITION_DATE = %DATE AND CURRENTCOST IS NOT NULL AND CURRENTCOST<>0);
RUN;
                                                                                                                                                                                                                                                                                                                            
DATA WORK.AST_DIRECT;
MERGE WORK.AST_DIRECT(IN=IN1) WORK.AST_DIRECTPOS(IN=IN2);
BY INSTRUMENTFATHER_ID INVESTOR_NAME;
If (IN1 and IN2) then Output;
End;
RUN;                                                                                                                                                                                                                                                                                                                           

DATA WORK.AST_DIRECT( DROP=CURRENTCOST RENAME = (INSTRUMENTFATHER_ID=IQID INVESTOR_NAME=LEGAL_ENTITY)); 
SET WORK.AST_DIRECT; 
COLUMN BookValue TYPE=FLOAT; BookValue= CURRENTCOST * PERC_CALC ;  
COLUMN MarketValue TYPE=FLOAT; MarketValue= CURRENTCOST * PERC_CALC ;                                                                                                                                                                                              
RUN;
//Proc print; put 'AST_DIRECT Output '; run;
//PROC PRINT DATA = WORK.AST_DIRECT; RUN; 

/*----------------Asset Listing-----------------*/ 
// Combines Fund and Directs (Transactions)
DATA WORK.PDE_Summary(DROP = EXITDATE) ;
SET  WORK.AST_FUND WORK.AST_DIRECT; 
RUN;

DATA AssetList_PDE;                                                                                                                                                                                       
SET  WORK.PDE_Summary; RUN;

/* Work file to compare to Prior Year */
DATA WORK.AssetList_PDE(KEEP = Investment_Name Cusip Legal_Entity PortfolioName Instrument BookValue MarketValue)  ;                                                                                                                                                                                       
SET  WORK.PDE_Summary; 
RUN;
//Proc Print; put 'AssetList_PDE Put of the Concat of directs and funds'; run;  
//PROC PRINT DATA = WORK.AssetList_PDE; RUN;

/*----------------Asset Listing-----------------*/  

/*------------------Summary---------------------*/
PROC MEANS DATA=WORK.PDE_Summary OUT=WORK.PDE_Summary; 
CLASS Investment_Type1;
SUM BookValue (NAME = BookValue);  
SUM MarketValue (NAME = MarketValue);
RUN; 

DATA PDE_Summary; 
SET WORK.PDE_Summary; 
RUN;
//Proc Print; put 'PDE_Summary sums Book Value and Market Values for investment Type One'; run;   
//PROC PRINT DATA = WORK.PDE_Summary; RUN;

/*------------------Summary---------------------*/

/*------------------MTD-YTD---------------------*/
// Added Cusip to query 
DATA WORK.MYTD_ACTUAL;
    SQL "SELECT VCF.IQID IQID,
                VCF.USERTEXT2       CUSIP,
                VCF.FUND            INVESTMENT_NAME, 
                SUBSCR.LIBELLE, 
                OP.CLOSEDATE        CLOSEDATE,
                VCFOPTYPE.DESCR     OPERATION_TYPE, 
                COALESCE(SUBOP.AMOUNT02,0) + COALESCE(SUBOP.AMOUNT04,0) + COALESCE(SUBOP.AMOUNT08,0) + COALESCE(SUBOP.AMOUNT30,0) 
                   + COALESCE(SUBOP.AMOUNT50,0) + COALESCE(SUBOP.AMOUNT80,0) + COALESCE(SUBOP.AMOUNT60,0)     AS TotalCalled,
                'Private Debt and Equity Funds' CATEGORY, 
                FORMAT(OP.CLOSEDATE,'MMMM')     Trans_Month, 
                FORMAT(OP.CLOSEDATE,'MM')       Trans_Month_No
        FROM VCFUND VCF 
            JOIN VCFUNDSTAT FSTAT 
              ON VCF.FSTATUS = FSTAT.CODE 
                AND (FSTAT.code = 212      -- 'Fund (Closed Ended)'
                      OR FSTAT.code = 215 -- 'Equity Co-Investment (Accounting Only)'
                    ) 
            JOIN ADMROLE REG 
              ON VCF.IQREGIONID = REG.IQID 
                AND REG.NAME IN ('Private Debt & Equity','ECI Fund Shadow')
            JOIN VCFUNDOP OP 
              ON OP.FUND = VCF.IQID 
                AND OP.IQDELETED=0
            JOIN VCFUNDOPTYPE VCFOPTYPE 
              ON VCFOPTYPE.CODE=OP.OTYPE 
               AND VCFOPTYPE.FILTER<>'00000000000000000000000000000000'
            JOIN VCSUBSCRFUNDOPSHARE SUBOP 
              ON SUBOP.FUNDOP = OP.IQID 
                AND SUBOP.IQDELETED=0
            JOIN VCSUBSCRIBER SUBSCR 
              ON SUBSCR.IQID = SUBOP.SUBSCRIBER 
                AND SUBSCR.IQDELETED=0
        WHERE VCF.IQDELETED=0 
          AND OP.CLOSEDATE <= " & DML(%DATE) & " 
          AND DATEPART(YYYY,OP.CLOSEDATE) = YEAR( " & DML(%DATE) & " ) 
          AND ( COALESCE(SUBOP.AMOUNT02,0) <> 0  
               OR COALESCE(SUBOP.AMOUNT04,0) <> 0 
               OR COALESCE(SUBOP.AMOUNT08,0) <> 0
               OR COALESCE(SUBOP.AMOUNT30,0) <> 0 
               OR COALESCE(SUBOP.AMOUNT50,0) <> 0 
               OR COALESCE(SUBOP.AMOUNT80,0) <> 0 
               OR COALESCE(SUBOP.AMOUNT60,0) <> 0 
              )
        ORDER BY FORMAT(OP.CLOSEDATE,'MM') " ; 
     COLUMN IQID;
    RUN;
//PROC PRINT; Put 'MYTD_ACTUAL query output'; RUN;
//PROC PRINT DATA = WORK.MYTD_ACTUAL; RUN;

PROC MEANS DATA = WORK.AST_FUND OUT=WORK.AST_FUND_PDE;
CLASS IQID cusip;     // Added Cusip 
MIN INVESTMENT_NAME(NAME=INVESTMENT_NAME) REG_NAME ;
RUN;
//PROC PRINT; Put 'AST_FUND_PDE query output'; RUN;
//PROC PRINT DATA = WORK.AST_FUND_PDE; RUN;

DATA WORK.MYTD_ACTUAL;
MERGE WORK.AST_FUND_PDE(IN=IN1) WORK.MYTD_ACTUAL(IN=IN2);
BY Cusip; // INVESTMENT_NAME;                   // added join by Cusip 
If (IN1 and IN2) then Output; End;
RUN;
//PROC PRINT; Put 'MYTD_ACTUAL merge AST_FUND_PDE and MYTD_ACTUAL by Cusip output'; RUN;
//PROC PRINT DATA = WORK.MYTD_ACTUAL; RUN;

//-------------------------------------------------------
// Cube used in Dashboard "Year-To-Date Fund Transaction"
DATA FUND_TRANS(DROP = IQID CATEGORY);
SET WORK.MYTD_ACTUAL (WHERE REG_NAME_MIN <> 'ECI Fund Shadow' ); 
RUN;
//-------------------------------------------------------
//PROC PRINT; Put 'FUND_TRANS copy data from Cube MYTD_ACTUAL '; RUN;
//PROC PRINT DATA = FUND_TRANS; RUN;
//PROC PRINT DATA = FUND_TRANS_CURRYR; RUN;
//PROC PRINT; Put 'MYTD_ACTUAL output '; RUN;
//PROC PRINT DATA = WORK.MYTD_ACTUAL; RUN;

PROC MEANS DATA = WORK.MYTD_ACTUAL OUT=WORK.YTD_ACTUAL;
CLASS Cusip INVESTMENT_NAME;
VAR CATEGORY;
SUM TotalCalled(NAME=TotalCalled_YTD);
RUN;
//PROC PRINT; Put 'YTD_ACTUAL Sum TotalCalled YTD by Cusip output'; RUN;
//PROC PRINT DATA = WORK.YTD_ACTUAL; RUN;

PROC MEANS DATA = WORK.MYTD_ACTUAL(WHERE MONTH(CLOSEDATE) = MONTH(%DATE)) OUT=WORK.MTD_ACTUAL;
CLASS Cusip INVESTMENT_NAME;
VAR CATEGORY;
SUM TotalCalled(NAME=TotalCalled_MTD);
RUN;
//PROC PRINT; Put 'MYTD_ACTUAL Sum TotalCalled MTD by Cusip output'; RUN;
//PROC PRINT DATA = WORK.MTD_ACTUAL; RUN;

DATA WORK.FUND_ACTUAL;
MERGE WORK.YTD_ACTUAL(IN=IN1) WORK.MTD_ACTUAL(IN=IN2);
BY Cusip; //INVESTMENT_NAME;   //-- Added Cusip to the join and remove INVESTMENT_NAME
RUN;
//PROC PRINT; Put 'FUND_ACTUAL merge YTD_ACTUAL and  MTD_ACTUAL by Cusip'; RUN;
//PROC PRINT DATA = WORK.FUND_ACTUAL; RUN;

PROC MEANS DATA = WORK.FUND_ACTUAL OUT=WORK.FUND_ACTUAL;
CLASS cusip CATEGORY;  // Add VAR parm
SUM TotalCalled_MTD(NAME=MTD_Invested);
SUM TotalCalled_YTD(NAME=YTD_Invested);
RUN;
//PROC PRINT; Put 'FUND_ACTUAL sums TotalCalled_MTD and TotalCalled_YTD '; RUN;
//PROC PRINT DATA = WORK.FUND_ACTUAL; RUN;

//-----Directs-----
DATA WORK.MYTD_ACTUAL_DIR(KEEP = CUSIP COMPANY_NAME SECURITY_COMPANY_ID SECURITY_NAME INVESTOR_NAME REFERENCE_DATE TRANSACTION_TYPE_NAME CASH2 CATEGORY ACTUAL);
SET DCE.FV_T_PORTCO_TRANSACTIONS(WHERE REFERENCE_DATE  <= %DATE 
                                   AND YEAR(REFERENCE_DATE) = YEAR(%DATE) 
                                   AND (TRANSACTION_TYPE_NAME like 'LN - Funding%' 
                                         OR TRANSACTION_TYPE_NAME like 'LN - Capitalized Revenue%' 
                                         OR TRANSACTION_TYPE_NAME like 'EQ - Purchase%' 
                                         OR TRANSACTION_TYPE_NAME like 'EQ - Capitalized Revenue%' 
                                         OR TRANSACTION_TYPE_NAME like 'EQ - Purchase/Subscription (w/o Commitment)%') 
                                 );
COLUMN CATEGORY TYPE=STRING; CATEGORY = TRANSACTION_TYPE_NAME; // 'Direct Private Debt & Equity';   
RUN;    
//PROC PRINT; Put 'MYTD_ACTUAL_DIR output '; RUN;
//PROC PRINT DATA = WORK.MYTD_ACTUAL_DIR; RUN;

DATA WORK.MYTD_ACTUAL_DIR(RENAME = (COMPANY_NAME = INVESTMENT_NAME));
SET WORK.MYTD_ACTUAL_DIR;
COLUMN CASH TYPE=FLOAT; CASH= CASH2 * (-1);
RUN;

PROC MEANS DATA = WORK.AST_DIRECT_PDE OUT=WORK.AST_DIRECT_PDE1;
CLASS Cusip INVESTMENT_NAME; 
MIN SECURITY_COMPANY_ID(NAME=SECURITY_COMPANY_ID);
RUN;

//PROC PRINT; Put 'AST_DIRECT_PDE1 input ))))))))  '; RUN;
//PROC PRINT DATA = WORK.AST_DIRECT_PDE1; RUN;
//PROC PRINT; PUT 'MYTD_ACTUAL_DIR input )))))))'; RUN;
//PROC PRINT DATA = WORK.MYTD_ACTUAL_DIR; RUN;

DATA WORK.MYTD_ACTUAL_DIR1;
MERGE WORK.AST_DIRECT_PDE1(IN=IN1) WORK.MYTD_ACTUAL_DIR(IN=IN2); 
//BY SECURITY_COMPANY_ID INVESTOR_NAME;
BY INVESTMENT_NAME;
If (IN1 and IN2) then Output; End;
RUN;
//PROC PRINT; Put 'MYTD_ACTUAL_DIR1 output ))))))))  '; RUN;
//PROC PRINT DATA = WORK.MYTD_ACTUAL_DIR1; RUN;

//--------------------------------------------------
//PROC PRINT; PUT 'AST_FUND_PDE'; RUN;
//PROC PRINT DATA = WORK.AST_FUND_PDE; RUN;

/* Get ECIs from Fund file */
DATA WORK.MYTD_ACTUAL_DIR2;
MERGE WORK.MYTD_ACTUAL_DIR(IN=IN1) WORK.AST_FUND_PDE(IN=IN2); 
//BY SECURITY_COMPANY_ID INVESTOR_NAME;
BY INVESTMENT_NAME;
If (IN1) then Output; End;
RUN;
//PROC PRINT; PUT 'MYTD_ACTUAL_DIR2 output from Merge '; RUN;
//PROC PRINT DATA = WORK.MYTD_ACTUAL_DIR2; RUN;
//--------------------------------------------------

//PROC PRINT; PUT 'MYTD_ACTUAL_DIR1 Input *****'; RUN;
//PROC PRINT DATA = WORK.MYTD_ACTUAL_DIR1; RUN;
//PROC PRINT; PUT 'MYTD_ACTUAL_DIR2 after update '; RUN;
//PROC PRINT DATA = WORK.MYTD_ACTUAL_DIR2; RUN;

DATA WORK.YTD_UW_FEES(DROP = CASH);
SET WORK.MYTD_ACTUAL_DIR2(WHERE TRANSACTION_TYPE_NAME='LN - Capitalized Revenue');
COLUMN UW_FEES TYPE=FLOAT; UW_FEES= CASH * (-1);
RUN;
//PROC PRINT; PUT 'YTD_UW_FEES --- Fees'; RUN;
//PROC PRINT DATA = WORK.YTD_UW_FEES; RUN;

//-----------------------------------------------------------------
DATA WORK.MYTD_ACTUAL_DIR2;
MERGE WORK.MYTD_ACTUAL_DIR2(IN=IN1) WORK.YTD_UW_FEES(IN=IN2) ;
BY Cusip INVESTOR_NAME TRANSACTION_TYPE_NAME SECURITY_COMPANY_ID SECURITY_NAME CASH2 ;    // Removed Investment_name and replaced with Cusip
If (IN1) then Output; End;
RUN;

//-----------------------------------------------------------------
//////////------Output Table------//////////
//Proc print; Put 'MYTD_ACTUAL_DIR2 used to create DIRECTS_TRANS '; Run;
//PROC PRINT DATA = WORK.MYTD_ACTUAL_DIR2; RUN;
//-----------------------------------------------------------------------------------------------------
//----------------------DIRECTS_TRANS Coube used for Tab Year-to-Date Directs Transansaction ----------
//-----------------------------------------------------------------------------------------------------
DATA DIRECTS_TRANS(DROP = SECURITY_COMPANY_ID CATEGORY CASH2);
SET WORK.MYTD_ACTUAL_DIR2;
COLUMN TRANS_MONTH_NO TYPE=INTEGER; TRANS_MONTH_NO=MONTH(REFERENCE_DATE);
COLUMN TRANS_MONTH TYPE=STRING; 
  IF MONTH(REFERENCE_DATE) = '1' 
    THEN TRANS_MONTH = 'January'; 
       ELSE IF MONTH(REFERENCE_DATE) = '2' THEN TRANS_MONTH = 'February';
       ELSE IF MONTH(REFERENCE_DATE) = '3' THEN TRANS_MONTH = 'March';
       ELSE IF MONTH(REFERENCE_DATE) = '4' THEN TRANS_MONTH = 'April';
       ELSE IF MONTH(REFERENCE_DATE) = '5' THEN TRANS_MONTH = 'May';
       ELSE IF MONTH(REFERENCE_DATE) = '6' THEN TRANS_MONTH = 'June';
       ELSE IF MONTH(REFERENCE_DATE) = '7' THEN TRANS_MONTH = 'July';
       ELSE IF MONTH(REFERENCE_DATE) = '8' THEN TRANS_MONTH = 'August';
       ELSE IF MONTH(REFERENCE_DATE) = '9' THEN TRANS_MONTH = 'Septemberr';
       ELSE IF MONTH(REFERENCE_DATE) = '10' THEN TRANS_MONTH = 'October';
       ELSE IF MONTH(REFERENCE_DATE) = '11' THEN TRANS_MONTH = 'November';
       ELSE IF MONTH(REFERENCE_DATE) = '12' THEN TRANS_MONTH = 'December';
    END;END;END;END;END;END;END;END;END;END;END;END;
RUN;
//Proc print; Put 'DIRECTS_TRANS output'; Run;
//PROC PRINT DATA = DIRECTS_TRANS; RUN;

PROC MEANS DATA = WORK.MYTD_ACTUAL_DIR2 OUT=WORK.YTD_ACTUAL_DIR;
CLASS CATEGORY; 
SUM CASH(NAME=YTD_Invested);
RUN;
//PROC PRINT DATA = WORK.YTD_ACTUAL_DIR; RUN;

PROC MEANS DATA = WORK.MYTD_ACTUAL_DIR2(WHERE MONTH(REFERENCE_DATE) = MONTH(%DATE)) OUT=WORK.MTD_ACTUAL_DIR;
CLASS CATEGORY; 
SUM CASH(NAME=MTD_Invested);
RUN;
//PROC PRINT DATA = WORK.MYTD_ACTUAL_DIR; RUN;

//PROC MEANS DATA = WORK.MYTD_ACTUAL_DIR2(WHERE TRANSACTION_TYPE_NAME='LN - Capitalized Revenue') OUT=WORK.YTD_UW_FEES;
PROC MEANS DATA = WORK.YTD_UW_FEES OUT=WORK.YTD_UW_FEES;
CLASS CATEGORY; 
//SUM CASH(NAME=YTD_UW_FEES);
SUM UW_FEES(NAME=UW_FEES);
RUN;

DATA WORK.DIRECT_ACTUAL;
MERGE WORK.YTD_ACTUAL_DIR(IN=IN1) WORK.MTD_ACTUAL_DIR(IN=IN2) WORK.YTD_UW_FEES(IN=IN3);
BY CATEGORY;
RUN;
//PROC PRINT DATA = WORK.DIRECT_ACTUAL; RUN;

//////////------Output Tables------//////////
DATA PDE_Summary_YTD;
SET   WORK.FUND_ACTUAL WORK.DIRECT_ACTUAL;
RUN;
//PROC PRINT DATA =  PDE_Summary_YTD; RUN;

/*------------------MTD-YTD---------------------*/

/*------------------Year-over-Year change------------------*/
DATA WORK.AST_FUND_PV;
    SQL "SELECT VCF.IQID IQID, 
            CASE WHEN REG.NAME = 'ECI Fund Shadow' THEN 'Private Debt & Equity' ELSE REG.NAME END REGION,
                'Fund' Investment_Type, VCF.FUND Investment_Name, 
                (case 	when VCF.USERTEXT43 = '1' then 'Debt Hedge Fund' 
                when VCF.USERTEXT43 = '2' then 'Alternatives Preferred Stock' 
                when VCF.USERTEXT43 = '3' then 'Senior Secured Loan' 
                when VCF.USERTEXT43 = '4' then 'Subordinated Loan' 
                when VCF.USERTEXT43 = '5' then 'Distressed Debt' 
                when VCF.USERTEXT43 = '6' then 'Real Asset Debt' 
                when VCF.USERTEXT43 = '7' then 'Senior Secured Loan' 
                when VCF.USERTEXT43 = '8' then 'Subordinated Loan/Mezzanine Funds' 
                when VCF.USERTEXT43 = '9' then 'Senior Secured Loan' 
                when VCF.USERTEXT43 = '10' then 'Subordinated Loan' 
                when VCF.USERTEXT43 = '11' then 'Senior Secured Loan' 
                when VCF.USERTEXT43 = '12' then 'Subordinated Loan' 
                when VCF.USERTEXT43 = '13' then 'Equity Hedge Fund' 
                when VCF.USERTEXT43 = '14' then 'Alternatives Common Stock' 
                when VCF.USERTEXT43 = '15' then 'Alternatives Preferred Stock' 
                when VCF.USERTEXT43 = '16' then 'Warrants' 
                when VCF.USERTEXT43 = '17' then 'Buyout' 
                when VCF.USERTEXT43 = '18' then 'Growth' 
                when VCF.USERTEXT43 = '19' then 'Real Asset Equity' 
                when VCF.USERTEXT43 = '20' then 'Secondary' 
                when VCF.USERTEXT43 = '21' then 'Venture Capital' 
                when VCF.USERTEXT43 = '22' then 'Structured Alternatives Common Stock' 
                when VCF.USERTEXT43 = '23' then 'Structured Alternatives Preferred Stock' 
                when VCF.USERTEXT43 = '24' then 'Senior Loan' 
                when VCF.USERTEXT43 = '25' then 'Subordinated Loan' 
          end) + 
            (case 
                when VCF.USERTEXT44 = '1' then '/Co-Investment' 
                when VCF.USERTEXT44 = '2' then '/Direct Investment' 
                when VCF.USERTEXT44 = '3' then '/Co-Investment' 
                when VCF.USERTEXT44 = '4' then '/Direct Investment' 
                when VCF.USERTEXT44 = '5' then '/Co-Investment' 
                when VCF.USERTEXT44 = '6' then '/Direct Investment' 
                when VCF.USERTEXT44 = '7' then '/Agriculture' 
                when VCF.USERTEXT44 = '8' then '/Energy' 
                when VCF.USERTEXT44 = '9' then '/Infrastructure' 
                when VCF.USERTEXT44 = '10' then '/Real Estate' 
                when VCF.USERTEXT44 = '11' then '/Timber' 
                when VCF.USERTEXT44 = '12' then '/Co-Investment' 
                when VCF.USERTEXT44 = '13' then '/Co-Investment' 
                when VCF.USERTEXT44 = '14' then '/Co-Investment' 
                when VCF.USERTEXT44 = '15' then '/Agriculture' 
                when VCF.USERTEXT44 = '16' then '/Energy' 
                when VCF.USERTEXT44 = '17' then '/Infrastructure' 
                when VCF.USERTEXT44 = '18' then '/Real Estate' 
                when VCF.USERTEXT44 = '19' then '/Timber' 
             else ' '                                                                                                                                                                                
         end)             Security_Type,
        (case 
            when VCF.USERTEXT42 = '4' then 'Private Debt Fund' 
            when VCF.USERTEXT42 = '9' then 'Private Equity Fund'
            when VCF.USERTEXT42 = '8' then 'Direct Private Equity'
          else 'unknown'
        end)         as  Investment_Type1,                                                                                                                                                                             
        VCF.VINTAGEYEAR Vintage,
        (case 
            when VCF.USERTEXT3 = 'COST' then 'LP Cost Method' 
            when VCF.USERTEXT3 = 'EQUITY' then 'LP Equity Method' 
        end) as Basis,
        VCF.USERTEXT2 CUSIP_SQL , 
        SUB.LIBELLE LEGAL_ENTITY, SUB1.LIBELLE PortfolioName, 
        SUBELT.ALLOCATION,
        SUBELT.ALLOCATION/ELT_TOT.TOTAL_ALLOC PERC_CALC,
        'Fund' Instrument 
    FROM VCFUND VCF 
        JOIN VCFUNDSTAT FSTAT 
          ON VCF.FSTATUS = FSTAT.CODE 
            AND (FSTAT.code = 212      -- 'Fund (Closed Ended)'
                  OR FSTAT.code = 215  -- 'Equity Co-Investment (Accounting Only)'
                ) 
        JOIN ADMROLE REG 
          ON VCF.IQREGIONID = REG.IQID 
            AND REG.NAME IN ('Private Debt & Equity','ECI Fund Shadow')
        JOIN VCSUBSCRIBER SUB 
          ON VCF.IQID=SUB.FUND  
            and SUB.IQDELETED=0 		  
        JOIN VCSUBSCRALLOCRULE SUBALLOC 
          ON SUBALLOC.IQID=SUB.SUBSCRALLOCRULE
		    AND SUBALLOC.IQDELETED=0 
        JOIN VCSUBSCRALLOCRULEELT SUBELT 
          ON SUBELT.SUBSCRALLOCRULE=SUB.SUBSCRALLOCRULE
        JOIN VCSUBSCRALLOCRULE SUBALLOC1 
          ON SUBALLOC1.IQID=SUBELT.SUBSCRALLOCRULE
		     AND SUBALLOC1.IQDELETED=0
        JOIN VCSUBSCRIBER SUB1 
          ON SUB1.FUND=SUBALLOC1.FUND 
		    AND SUB1.IQDELETED=0  
            AND SUB1.IQID=SUBELT.SUBSCRIBER
        JOIN (SELECT SUBSCRALLOCRULE SARGrp, SUBSCRALLOCRULESERIE SARSGrp, SUM(ALLOCATION) TOTAL_ALLOC 
                FROM VCSUBSCRALLOCRULEELT 
                GROUP BY SUBSCRALLOCRULE, SUBSCRALLOCRULESERIE
             ) ELT_TOT 
          ON SUBELT.SUBSCRALLOCRULE=ELT_TOT.SARGrp
            AND SUBELT.SUBSCRALLOCRULESERIE=ELT_TOT.SARSGrp
        JOIN VCSUBSCRALLOCRULESERIE SERIE 
          ON SERIE.IQID=SUBELT.SUBSCRALLOCRULESERIE  
            AND SERIE.ALLOCRULE=SUBELT.SUBSCRALLOCRULE
			AND SERIE.IQDELETED=0
            AND SERIE.REFERENCE_DATE = (SELECT MAX(REFERENCE_DATE) 
                                          from VCSUBSCRALLOCRULESERIE SERIE1 
                                          WHERE SERIE.ALLOCRULE = SERIE1.ALLOCRULE
                                            AND SERIE1.REFERENCE_DATE < DATEADD(YEAR, -1," & DML(%DATE) & " ) 
                                            AND SERIE1.IQDELETED = 0 
                                       ) 
    WHERE  VCF.IQDELETED=0 
    ORDER BY Cusip_SQL, Investment_Type, Investment_Name    
   ; " ;  
COLUMN IQID ;
RUN;  
//Proc Print; Put 'AST_FUND_PV query Output'; RUN;
//PROC PRINT DATA=WORK.AST_FUND_PV; Run;

//%LET DATE = "31052016"d;
%LET DATE = DATEADD("YEAR",-1,%DATE); // Set Prior Year

PROC FAQUERY Query="IT Admin - Program Queries\Positions" (DATE=%DATE ) ; 
	TABLE "Default"  OUT=WORK.QRY_POSITIONS_DATA_PV;
RUN;
//PROC PRINT DATA=WORK.QRY_POSITIONS_DATA_PV; Run;

DATA WORK.AST_FUND_PV;
MERGE WORK.QRY_POSITIONS_DATA_PV(IN=IN1) WORK.AST_FUND_PV(IN=IN2) ; 
BY IQID LEGAL_ENTITY;         
IF (IN1=IN2) THEN OUTPUT; END;
RUN;     
//PROC PRINT DATA=WORK.AST_FUND_PV; Run;

DATA WORK.AST_FUND_PV(DROP = STATUS ALLOCATION SEC_DESC BASE_CURRENCY SEC_CURRENCY POSITION_DATE GL_COST_ELIM GAAP_BOOK_VALUE 
                             MKTVAL_BASE MKTVAL_LOCAL GAIN_LOSS_STAT REAL_GAIN_LOSS_ELIM ALLOCATION ALLOC_PERC ) ;  
SET WORK.AST_FUND_PV; 
    COLUMN ALLOC_PERC  TYPE=DOUBLE ;
    IF ALLOCATION IS NULL THEN ALLOC_PERC = 100 ;
      ELSE  ALLOC_PERC = PERC_CALC ; 
    END ; 
    COLUMN BookValue  TYPE=DOUBLE  FORMAT = P_MONEY.;  BookValue = (GAAP_BOOK_VALUE + GL_COST_ELIM) * ALLOC_PERC ; 
    COLUMN MarketValue TYPE=DOUBLE LABEL = "Allocated Mkt Cost"   FORMAT = P_MONEY.;  MarketValue = MKTVAL_BASE * ALLOC_PERC ;
RUN;

DATA WORK.AST_FUND_PV;
SET WORK.AST_FUND_PV(WHERE BookValue IS NOT NULL AND BookValue<>0);
RUN;

//Proc print; put'AST_FUND_PV output after BookValue not null or <> 0'; run;
//PROC PRINT DATA=WORK.AST_FUND_PV; RUN;

/*--------Directs--------------------*/
DATA WORK.AST_DIRECT_PV;
SQL "SELECT INVINS.ACCOUNTINS, 
       MIN(REG.NAME) REGION,
        (case 
            when MIN(INVINS.USERTEXT40) = '2' then 'Direct Mezzanine' 
            when MIN(INVINS.USERTEXT40) = '7' then 'Direct Equity'                                                                                                                                                                             
        end)               as Investment_Type,  
        MIN(SFA_CMP.NAME)     Investment_Name,
        MIN(INVINS.SHORTNAME) Instrument,
       (case when MIN(INVINS.USERTEXT41) = '1' then 'Debt Hedge Fund' 
             when MIN(INVINS.USERTEXT41) = '2' then 'Alternatives Preferred Stock' 
             when MIN(INVINS.USERTEXT41) = '3' then 'Senior Secured Loan' 
             when MIN(INVINS.USERTEXT41) = '4' then 'Subordinated Loan' 
             when MIN(INVINS.USERTEXT41) = '5' then 'Distressed Debt' 
             when MIN(INVINS.USERTEXT41) = '6' then 'Real Asset Debt' 
             when MIN(INVINS.USERTEXT41) = '7' then 'Senior Secured Loan' 
             when MIN(INVINS.USERTEXT41) = '8' then 'Subordinated Loan/Mezzanine Funds' 
             when MIN(INVINS.USERTEXT41) = '9' then 'Senior Secured Loan' 
             when MIN(INVINS.USERTEXT41) = '10' then 'Subordinated Loan' 
             when MIN(INVINS.USERTEXT41) = '11' then 'Senior Secured Loan' 
             when MIN(INVINS.USERTEXT41) = '12' then 'Subordinated Loan' 
             when MIN(INVINS.USERTEXT41) = '13' then 'Equity Hedge Fund' 
             when MIN(INVINS.USERTEXT41) = '14' then 'Alternatives Common Stock' 
             when MIN(INVINS.USERTEXT41) = '15' then 'Alternatives Preferred Stock' 
             when MIN(INVINS.USERTEXT41) = '16' then 'Warrants' 
             when MIN(INVINS.USERTEXT41) = '17' then 'Buyout' 
             when MIN(INVINS.USERTEXT41) = '18' then 'Growth' 
             when MIN(INVINS.USERTEXT41) = '19' then 'Real Asset Equity' 
             when MIN(INVINS.USERTEXT41) = '20' then 'Secondary' 
             when MIN(INVINS.USERTEXT41) = '21' then 'Venture Capital' 
             when MIN(INVINS.USERTEXT41) = '22' then 'Structured Alternatives Common Stock' 
             when MIN(INVINS.USERTEXT41) = '23' then 'Structured Alternatives Preferred Stock' 
             when MIN(INVINS.USERTEXT41) = '24' then 'Senior Loan' 
             when MIN(INVINS.USERTEXT41) = '25' then 'Subordinated Loan' 
       end)                  Security_Type,    
      (case 
             when MIN(INVINS.USERTEXT40) = '2' then 'Direct Private Debt' 
             when MIN(INVINS.USERTEXT40) = '7' then 'Direct Private Equity'                                                                                                                                                                             
       end)              as  Investment_Type1,                                                                                                                                                                                                                                                                          
      DATEPART(YYYY,MIN(INVOP.CLOSEDATE)) Vintage,  
      (case 
            when MIN(INVINS.USERTEXT24) = '1' then 'LP Equity' 
            when MIN(INVINS.USERTEXT24) = '2' then 'LP Cost' 
            when MIN(INVINS.USERTEXT24) = '3' then 'Bond Cost' 
            when MIN(INVINS.USERTEXT24) = '4' then 'Com Stk' 
            when MIN(INVINS.USERTEXT24) = '5' then 'Pref Stk' 
            when MIN(INVINS.USERTEXT24) = '6' then 'Warrants'                                                                                                                                                                                                                                                                                                             
       end) as Basis,
       MIN(INVINS.USERTEXT23) CUSIP ,                                                                                                                                                                                                                                                                                  
       MIN(INV.LIBELLE) Investor_Name,  
       VCSUB.LIBELLE PortfolioName,
       MIN(SUBELT.ALLOCATION/ELT_TOT.TOTAL_ALLOC) PERC_CALC
    FROM VCINVESTMENTINS INVINS
    JOIN VCINVESTMENT INV 
      ON INV.IQID = INVINS.INVESTMENT  
        AND  INV.IQDELETED=0
    JOIN VCINVESTMENTOP INVOP  
      ON INVOP.INVESTMENTINS=INVINS.IQID 
    JOIN VCINVESTOPTYPE OPT 
      ON OPT.CODE = INVOP.TYPEINVESTOP 
        AND OPT.FILTER<>'00000000000000000000000000000000' 
        AND (OPT.CODE = 'EQ03' -- EQ - Purchase/Subscription (w/o Commitment)
              OR OPT.CODE = 'LN03' -- LN - Funding (w/o commitment)
            )  
    LEFT JOIN VCPROJECT VCP 
      ON  VCP.ACCOUNT = INV.ACCOUNT 
    LEFT JOIN ADMWORKFLOW WRK 
      ON WRK.IQID=VCP.WORKFLOW
    LEFT JOIN SFAACCOUNT SFA 
      ON SFA.IQID = VCP.USERTEXT7                                                                                                                                                                                                                                                                                            
    JOIN SFAACCOUNT SFA_CMP 
      ON SFA_CMP.IQID = INV.ACCOUNT 
        AND SFA_CMP.IQDELETED=0
        and (SFA_CMP.STATUS  <> 2      -- 'Exited Portfolio Co.'
               OR SFA_CMP.STATUS <> 4) -- 'Exited Portfolio Co.(indirect)'
    JOIN ADMROLE REG 
      ON SFA_CMP.IQREGIONID = REG.IQID 
        AND REG.NAME IN ('Private Debt & Equity') 
    LEFT JOIN VCINVESTINSRATE RATE 
      ON RATE.INVESTMENTINS =  INVINS.ACCOUNTINS 
        AND RATE.FIRSTDATE<= " & DML(%DATE) & " 
        AND RATE.LASTDATE>= " & DML(%DATE) & " 
        AND RATE.KIND = 'LNCASH' --'Loan Cash Interests'
    LEFT JOIN VCBENCHMARK BNMK 
      ON BNMK.IQID=RATE.RATESTABLE                                                                                                                                                                                                   
    LEFT JOIN VCINVESTINSRATE RATEPIK 
      ON RATEPIK.INVESTMENTINS =  INVINS.ACCOUNTINS 
        AND RATEPIK.FIRSTDATE<= " & DML(%DATE) & " 
        AND RATEPIK.LASTDATE>= " & DML(%DATE) & " 
        AND RATEPIK.KIND = 'LNPIK' --'Loan Capitalized Interests'                                                                                                                                                                                                                                                   
    JOIN VCSUBSCRALLOCRULE SUBALLOC 
      ON SUBALLOC.IQID=INVINS.SUBSCRALLOCRULE 
	    AND SUBALLOC.IQDELETED=0 
    JOIN VCSUBSCRALLOCRULEELT SUBELT 
      ON SUBELT.SUBSCRALLOCRULE=INVINS.SUBSCRALLOCRULE
    JOIN VCSUBSCRIBER VCSUB 
      ON VCSUB.IQID = SUBELT.SUBSCRIBER
       AND VCSUB.IQDELETED=0	  
    JOIN (SELECT SUBSCRALLOCRULE SARGrp, SUBSCRALLOCRULESERIE SARSGrp, SUM(ALLOCATION) TOTAL_ALLOC 
            FROM VCSUBSCRALLOCRULEELT 
            GROUP BY SUBSCRALLOCRULE, SUBSCRALLOCRULESERIE
         ) ELT_TOT 
      ON SUBELT.SUBSCRALLOCRULE=ELT_TOT.SARGrp
        AND SUBELT.SUBSCRALLOCRULESERIE=ELT_TOT.SARSGrp
    JOIN VCSUBSCRALLOCRULESERIE SERIE 
      ON SERIE.IQID=SUBELT.SUBSCRALLOCRULESERIE  
        AND SERIE.ALLOCRULE=SUBELT.SUBSCRALLOCRULE
		AND SERIE.IQDELETED=0 
        AND SERIE.REFERENCE_DATE = (SELECT MAX(REFERENCE_DATE) 
                                      from VCSUBSCRALLOCRULESERIE SERIE1 
                                      WHERE SERIE.ALLOCRULE = SERIE1.ALLOCRULE
                                        AND SERIE1.REFERENCE_DATE<" & DML(%DATE) & " 
                                        AND SERIE1.IQDELETED = 0 
                                   ) 
    LEFT JOIN AJXDYNTABLE DYN 
      ON DYN.INVESTMENTINS=INVINS.ACCOUNTINS 
        AND DYN.IQDELETED=0 
        AND DYN.CLASS1='Ratings' 
        AND DYN.METADATE1 <= " & DML(%DATE) & " 
        AND DYN.METADATE2 >= " & DML(%DATE) & "                                                                                                                                                                                                                                                                                                                                      
    WHERE  INVINS.IQDELETED=0  
      AND COALESCE(INVINS.USERTEXT21,'2') NOT IN ('1')  /* Not LP/LLC Fund to exclude ECI */
    GROUP BY  INVINS.ACCOUNTINS, VCSUB.LIBELLE
    ORDER BY 3,4 " ;  
COLUMN INSTRUMENTFATHER_ID;  
RUN; 
//Proc Print; Put 'AST_DIRECT_PV query output'; RUN;
//PROC PRINT DATA = WORK.AST_DIRECT_PV; RUN;

DATA WORK.AST_DIRECT_PDE_PV(RENAME=(INSTRUMENTFATHER_ID=SECURITY_COMPANY_ID));
SET WORK.AST_DIRECT_PV;                                        
RUN; 
                                                                                                                                                                                                                                                                                                                           
DATA WORK.AST_DIRECTPOS_PV(KEEP =  INSTRUMENTFATHER_ID INVESTOR_NAME CURRENTCOST);
SET DCE.INSTRUMENTPOSITIONS (WHERE POSITION_DATE=%DATE AND CURRENTCOST IS NOT NULL AND CURRENTCOST<>0);
RUN;
                                                                                                                                                                                                                                                                                                                            
DATA WORK.AST_DIRECT_PV;
MERGE WORK.AST_DIRECT_PV(IN=IN1) WORK.AST_DIRECTPOS_PV(IN=IN2);
BY INSTRUMENTFATHER_ID ; // INVESTOR_NAME;
If (IN1 and IN2) then Output;
End;
RUN; 
                                                                                                                                                                                                                                                                                                                             
DATA WORK.AST_DIRECT_PV( DROP=CURRENTCOST RENAME = (INSTRUMENTFATHER_ID=IQID INVESTOR_NAME=LEGAL_ENTITY)); 
SET WORK.AST_DIRECT_PV; 
COLUMN BookValue TYPE=FLOAT; BookValue= CURRENTCOST * PERC_CALC ;  
COLUMN MarketValue TYPE=FLOAT; MarketValue= CURRENTCOST * PERC_CALC ;  
RUN;  
//Proc Print; Put 'AST_FUND_PV output'; RUN;
//PROC PRINT DATA = WORK.AST_FUND_PV; RUN;

DATA WORK.PDE_Summary_PV;                                                                                                                                                                                       
SET  WORK.AST_FUND_PV WORK.AST_DIRECT_PV; RUN;  
//Proc Print; Put 'PDE_Summary_PV = Concat AST_FUND_PV and AST_DIRECT_PV'; RUN;
//PROC PRINT DATA = WORK.PDE_Summary_PV; RUN;

//////////------Output Tables------//////////
DATA ASSETLIST_PDE_PY(DROP = EXITDATE) ;                                                                                                                                                                                       
SET   WORK.PDE_Summary_PV ; RUN;

/* Work file to compare to Current Year */
DATA WORK.AssetList_PDE_PY( KEEP = Investment_Name Cusip Legal_Entity PortfolioName Instrument BookValue MarketValue RENAME = ( BookValue=BookValue_PY  MarketValue=MarketValue_PY))  ;                                                                                                                                                                                       
SET  WORK.PDE_Summary_PV; 
RUN;

PROC MEANS DATA=WORK.PDE_Summary_PV OUT=WORK.PDE_Summary_PV; 
CLASS Investment_Type1;
SUM BookValue (NAME = BookValue_PV);  
RUN; 
//PROC PRINT DATA = WORK.PDE_Summary_PV; RUN;

DATA PDE_Summary_YTY(DROP = MarketValue);
MERGE WORK.PDE_Summary_PV(IN=IN1) WORK.PDE_Summary(IN=IN2);
BY Investment_Type1;
RUN;

DATA PDE_Assetlist_YTY;
MERGE WORK.AssetList_PDE(IN=IN1) WORK.AssetList_PDE_PY(IN=IN2);
BY Investment_Name Cusip Legal_Entity PortfolioName;
RUN;

//PROC PRINT DATA = PDE_Assetlist_YTY; RUN;

/*
DATA WORK.PDE_Summary_YTY;
SET WORK.PDE_Summary_YTY;

RUN;
*/
//Year-over-Year change




